import groovy.io.FileType

buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url 'https://maven.atlassian.com/repository/public'
		}
		flatDir {
			dirs 'libs'
		}
	}
	dependencies {
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:' << springBootVersion
		classpath "no.nils:wsdl2java:0.10"
	}
}

allprojects {
	apply plugin: 'idea'
	apply plugin: 'eclipse'
	apply plugin: 'java'
	apply plugin: 'groovy'
	apply plugin: 'jacoco'
	apply plugin: 'no.nils.wsdl2java'
	apply plugin: 'checkstyle'
	apply plugin: 'codenarc'

	compileJava.options.encoding = 'UTF-8'

	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
	}

	tasks.withType(GroovyCompile) {
		groovyOptions.encoding = 'UTF-8'
	}

	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "http://maven.jahia.org/maven2/"
		}
	}

	dependencies {
		compile group: 'org.springframework.boot', name: 'spring-boot', version: springBootVersion
		compile group: 'javax.inject', name: 'javax.inject', version: '1'

		// Utils
		compile group: 'org.projectlombok', name: 'lombok', version: '1.16.6'
		compile group: 'org.json', name: 'json', version: '20160810'
		compile group: 'com.google.guava', name: 'guava', version: '20.0'
		compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
		compile group: 'commons-validator', name: 'commons-validator', version: '1.5.1'
		compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
		compile group: 'commons-validator', name: 'commons-validator', version: '1.5.1'
		compile group: 'org.reflections', name: 'reflections', version: '0.9.11'

		// Testing
		testCompile group: 'commons-io', name: 'commons-io', version: '2.5'
		testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.10'
		testCompile group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4-rc-2'
		testCompile group: 'org.spockframework', name: 'spock-spring', version: '1.1-groovy-2.4-rc-2'
		testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion) {
			exclude(module: 'logback-classic')
			exclude(module: 'spring-boot-starter-logging')
		}
		testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion) {
			exclude(module: 'logback-classic')
			exclude(module: 'spring-boot-starter-tomcat')
			exclude(module: 'spring-boot-starter-logging')
		}
		testCompile group: 'cglib', name: 'cglib-nodep', version: '3.2.4'
		testCompile group: 'com.github.javaparser', name: 'javaparser-core', version: '3.2.0'
	}

	test {
		exclude '**/*IntegrationTest*'
	}

	checkstyle {
		configFile = "$rootDir/checkstyle.xml" as File
		toolVersion = '7.4'
	}

	codenarc {
		configFile = "$rootDir/codenarc.groovy" as File
		toolVersion = '0.26.0'
	}

	checkstyleMain {
		configProperties = [
				'baseDir': "$rootDir"
		]
	}

	task cleanMetamodel(type: CleanMetamodel) << {}

	clean {
		dependsOn cleanMetamodel
	}

}

class CleanMetamodel extends DefaultTask {

	@TaskAction
	def cleanMetamodel() {
		def dir = new File('./model/src/main/java/')
		dir.eachFileRecurse (FileType.FILES) { file ->
			if (file.name.endsWith("_.java")) {
				file.delete()
			}
		}
	}
}

apply from: 'testing.gradle'

group 'stapi'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8
