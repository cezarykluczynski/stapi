swagger: '2.0'
info:
  title: STAPI
  version: '0.1.2-SNAPSHOT'
host: stapi.co
schemes:
  - https
  - http
basePath: /api
produces:
  - application/json
paths:
  /v1/rest/animal:
    get:
      description: Retrival of a single animal
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Animal unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AnimalFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Animal
  /v1/rest/animal/search:
    get:
      description: Pagination over animals
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AnimalBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Animal
    post:
      description: Searching animals
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Animal name
        - name: earthAnimal
          in: formData
          type: boolean
          description: Whether it should be an earth animal
        - name: earthInsect
          in: formData
          type: boolean
          description: Whether it should be an earth insect
        - name: avian
          in: formData
          type: boolean
          description: Whether it should be an avian
        - name: canine
          in: formData
          type: boolean
          description: Whether it should be a canine
        - name: feline
          in: formData
          type: boolean
          description: Whether it should be a feline
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AnimalBaseResponse'
      tags:
        - Animal
  /v1/rest/astronomicalObject:
    get:
      description: Retrival of a single astronomical object
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Astronomical object's unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AstronomicalObjectFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - AstronomicalObject
  /v1/rest/astronomicalObject/search:
    get:
      description: Pagination over astronomical objects
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AstronomicalObjectBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - AstronomicalObject
    post:
      description: Searching astronomical objects
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Astronomical object name
        - name: astronomicalObjectType
          in: formData
          type: string
          description: Type of astronomical object
        - name: locationUid
          in: formData
          type: string
          description: Unique ID of astronomical object containing objects being searched
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AstronomicalObjectBaseResponse'
      tags:
        - AstronomicalObject
  /v2/rest/astronomicalObject:
    get:
      description: Retrival of a single astronomical object (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Astronomical object's unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AstronomicalObjectV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - AstronomicalObject
  /v2/rest/astronomicalObject/search:
    get:
      description: Pagination over astronomical objects (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AstronomicalObjectV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - AstronomicalObject
    post:
      description: Searching astronomical objects (v2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Astronomical object name
        - name: astronomicalObjectType
          in: formData
          type: string
          description: Type of astronomical object
        - name: locationUid
          in: formData
          type: string
          description: Unique ID of astronomical object containing objects being searched
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AstronomicalObjectV2BaseResponse'
      tags:
        - AstronomicalObject
  /v1/rest/book:
    get:
      description: Retrival of a single book
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Book unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Book
  /v1/rest/book/search:
    get:
      description: Pagination over books
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Book
    post:
      description: Searching books
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Book title
        - name: publishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the book was published
        - name: publishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the book was published
        - name: numberOfPagesFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of pages
        - name: numberOfPagesTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of pages
        - name: stardateFrom
          in: formData
          type: number
          format: float
          description: Starting stardate of book story
        - name: stardateTo
          in: formData
          type: number
          format: float
          description: Ending stardate of book story
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of book story
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of book story
        - name: novel
          in: formData
          type: boolean
          description: Whether it should be a novel
        - name: referenceBook
          in: formData
          type: boolean
          description: Whether it should be a reference book
        - name: biographyBook
          in: formData
          type: boolean
          description: Whether it should be a biography book
        - name: rolePlayingBook
          in: formData
          type: boolean
          description: Whether it should be a role playing book
        - name: eBook
          in: formData
          type: boolean
          description: Whether it should be an e-book
        - name: anthology
          in: formData
          type: boolean
          description: Whether it should be an anthology
        - name: novelization
          in: formData
          type: boolean
          description: Whether it should be novelization
        - name: audiobook
          in: formData
          type: boolean
          description: Whether it should be an audiobook
        - name: audiobookAbridged
          in: formData
          type: boolean
          description: Whether it should be an audiobook, abridged
        - name: audiobookPublishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the audiobook was published
        - name: audiobookPublishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the audiobook was published
        - name: audiobookRunTimeFrom
          in: formData
          type: integer
          format: int32
          description: Minimal audiobook run time, in minutes
        - name: audiobookRunTimeTo
          in: formData
          type: integer
          format: int32
          description: Maximal audiobook run time, in minutes
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookBaseResponse'
      tags:
        - Book
  /v2/rest/book:
    get:
      description: Retrival of a single book (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Book unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Book
  /v2/rest/book/search:
    get:
      description: Pagination over books (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Book
    post:
      description: Searching books (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Book title
        - name: publishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the book was published
        - name: publishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the book was published
        - name: numberOfPagesFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of pages
        - name: numberOfPagesTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of pages
        - name: stardateFrom
          in: formData
          type: number
          format: float
          description: Starting stardate of book story
        - name: stardateTo
          in: formData
          type: number
          format: float
          description: Ending stardate of book story
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of book story
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of book story
        - name: novel
          in: formData
          type: boolean
          description: Whether it should be a novel
        - name: referenceBook
          in: formData
          type: boolean
          description: Whether it should be a reference book
        - name: biographyBook
          in: formData
          type: boolean
          description: Whether it should be a biography book
        - name: rolePlayingBook
          in: formData
          type: boolean
          description: Whether it should be a role playing book
        - name: eBook
          in: formData
          type: boolean
          description: Whether it should be an e-book
        - name: anthology
          in: formData
          type: boolean
          description: Whether it should be an anthology
        - name: novelization
          in: formData
          type: boolean
          description: Whether it should be novelization
        - name: unauthorizedPublication
          in: formData
          type: boolean
          description: Whether it should be an unauthorized publication
        - name: audiobook
          in: formData
          type: boolean
          description: Whether it should be an audiobook
        - name: audiobookAbridged
          in: formData
          type: boolean
          description: Whether it should be an audiobook, abridged
        - name: audiobookPublishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the audiobook was published
        - name: audiobookPublishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the audiobook was published
        - name: audiobookRunTimeFrom
          in: formData
          type: integer
          format: int32
          description: Minimal audiobook run time, in minutes
        - name: audiobookRunTimeTo
          in: formData
          type: integer
          format: int32
          description: Maximal audiobook run time, in minutes
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookV2BaseResponse'
      tags:
        - Book
  /v1/rest/bookCollection:
    get:
      description: Retrival of a single book collection
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Book collection unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookCollectionFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - BookCollection
  /v1/rest/bookCollection/search:
    get:
      description: Pagination over book collections
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookCollectionBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - BookCollection
    post:
      description: Searching book collections
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Book collection title
        - name: publishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the book collection was published
        - name: publishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the book collection was published
        - name: numberOfPagesFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of pages
        - name: numberOfPagesTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of pages
        - name: stardateFrom
          in: formData
          type: number
          format: float
          description: Starting stardate of book collection stories
        - name: stardateTo
          in: formData
          type: number
          format: float
          description: Ending stardate of book collections stories
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of book collection stories
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of book collections stories
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookCollectionBaseResponse'
      tags:
        - BookCollection
  /v1/rest/bookSeries:
    get:
      description: Retrival of a single book series
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Book series unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookSeriesFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - BookSeries
  /v1/rest/bookSeries/search:
    get:
      description: Pagination over book series
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookSeriesBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - BookSeries
    post:
      description: Searching book series
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Book series title
        - name: publishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the book series was published
        - name: publishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the book series was published
        - name: numberOfBooksFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of books
        - name: numberOfBooksTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of books
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of book series stories
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of book series stories
        - name: miniseries
          in: formData
          type: boolean
          description: Whether it should be a miniseries
        - name: eBookSeries
          in: formData
          type: boolean
          description: Whether it should be an e-book series
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BookSeriesBaseResponse'
      tags:
        - BookSeries
  /v1/rest/character:
    get:
      description: Retrival of a single character
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Character unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CharacterFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Character
  /v1/rest/character/search:
    get:
      description: Pagination over characters
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CharacterBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Character
    post:
      description: Searching characters
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Character name
        - name: gender
          in: formData
          type: string
          description: Character gender
        - name: deceased
          in: formData
          type: boolean
          description: Whether it should be a deceased character
        - name: hologram
          in: formData
          type: boolean
          description: Whether it should be a hologram
        - name: fictionalCharacter
          in: formData
          type: boolean
          description: Whether it should be a fictional character (from universe point of view)
        - name: mirror
          in: formData
          type: boolean
          description: Whether it should be a mirror universe character
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether it should be a alternate reality character
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CharacterBaseResponse'
      tags:
        - Character
  /v1/rest/comics:
    get:
      description: Retrival of a single comics
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Comics unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicsFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Comics
  /v1/rest/comics/search:
    get:
      description: Pagination over comics
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicsBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Comics
    post:
      description: Searching comics
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Comics title
        - name: publishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the comics was published
        - name: publishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the comics was published
        - name: numberOfPagesFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of pages
        - name: numberOfPagesTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of pages
        - name: stardateFrom
          in: formData
          type: number
          format: float
          description: Starting stardate of comics story
        - name: stardateTo
          in: formData
          type: number
          format: float
          description: Ending stardate of comics story
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of comics story
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of comics story
        - name: photonovel
          in: formData
          type: boolean
          description: Whether it should be a photonovel
        - name: adaptation
          in: formData
          type: boolean
          description: Whether it should be an adaptation of an episode or a movie
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicsBaseResponse'
      tags:
        - Comics
  /v1/rest/comicCollection:
    get:
      description: Retrival of a single comic collection
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Comic collection unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicCollectionFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - ComicCollection
  /v1/rest/comicCollection/search:
    get:
      description: Pagination over comic collections
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicCollectionBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - ComicCollection
    post:
      description: Searching comic collections
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Comic collection title
        - name: publishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the comic collection was published
        - name: publishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the comic collection was published
        - name: numberOfPagesFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of pages
        - name: numberOfPagesTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of pages
        - name: stardateFrom
          in: formData
          type: number
          format: float
          description: Starting stardate of comic collection stories
        - name: stardateTo
          in: formData
          type: number
          format: float
          description: Ending stardate of comic collections stories
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of comic collection stories
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of comic collections stories
        - name: photonovel
          in: formData
          type: boolean
          description: Whether it should be an photonovel collection
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicCollectionBaseResponse'
      tags:
        - ComicCollection
  /v2/rest/comicCollection:
    get:
      description: Retrival of a single comic collection (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Comic collection unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicCollectionV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - ComicCollection
  /v1/rest/comicSeries:
    get:
      description: Retrival of a single comic series
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Comic series unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicSeriesFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - ComicSeries
  /v1/rest/comicSeries/search:
    get:
      description: Pagination over comic series
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicSeriesBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - ComicSeries
    post:
      description: Searching comic series
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Comic series title
        - name: publishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the comic series was published
        - name: publishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the comic series was published
        - name: numberOfIssuesFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of issues
        - name: numberOfIssuesTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of issues
        - name: stardateFrom
          in: formData
          type: number
          format: float
          description: Starting stardate of comic series stories
        - name: stardateTo
          in: formData
          type: number
          format: float
          description: Starting stardate of comic series stories
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of comic series stories
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of comic series stories
        - name: miniseries
          in: formData
          type: boolean
          description: Whether it should be a miniseries
        - name: photonovelSeries
          in: formData
          type: boolean
          description: Whether it should be photonovel series
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicSeriesBaseResponse'
      tags:
        - ComicSeries
  /v1/rest/comicStrip:
    get:
      description: Retrival of a single comic strip
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Comic strip unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicStripFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - ComicStrip
  /v1/rest/comicStrip/search:
    get:
      description: Pagination over comic strips
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicStripBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - ComicStrip
    post:
      description: Searching comic strips
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Comic strip title
        - name: publishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the comic strip was published
        - name: publishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the comic strip was published
        - name: numberOfPagesFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of pages
        - name: numberOfPagesTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of pages
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of comic strip story
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of comic strip story
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ComicStripBaseResponse'
      tags:
        - ComicStrip
  /v1/rest/company:
    get:
      description: Retrival of a single company
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Company unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CompanyFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Company
  /v1/rest/company/search:
    get:
      description: Pagination over companies
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CompanyBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Company
    post:
      description: Searching companies
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Company name
        - name: broadcaster
          in: formData
          type: boolean
          description: Whether it should be a broadcaster
        - name: collectibleCompany
          in: formData
          type: boolean
          description: Whether it should be a collectible company
        - name: conglomerate
          in: formData
          type: boolean
          description: Whether it should be a conglomerate
        - name: digitalVisualEffectsCompany
          in: formData
          type: boolean
          description: Whether it should be a digital visual effects company
        - name: distributor
          in: formData
          type: boolean
          description: Whether it should be a distributor
        - name: gameCompany
          in: formData
          type: boolean
          description: Whether it should be a game company
        - name: filmEquipmentCompany
          in: formData
          type: boolean
          description: Whether it should be a film equipment company
        - name: makeUpEffectsStudio
          in: formData
          type: boolean
          description: Whether it should be a make-up effects studio
        - name: mattePaintingCompany
          in: formData
          type: boolean
          description: Whether it should be a matte painting company
        - name: modelAndMiniatureEffectsCompany
          in: formData
          type: boolean
          description: Whether it should be a model and miniature effects company
        - name: postProductionCompany
          in: formData
          type: boolean
          description: Whether it should be a post-production company
        - name: productionCompany
          in: formData
          type: boolean
          description: Whether it should be a production company
        - name: propCompany
          in: formData
          type: boolean
          description: Whether it should be a prop company
        - name: recordLabel
          in: formData
          type: boolean
          description: Whether it should be a record label
        - name: specialEffectsCompany
          in: formData
          type: boolean
          description: Whether it should be a special effects company
        - name: tvAndFilmProductionCompany
          in: formData
          type: boolean
          description: Whether it should be a TV and film production company
        - name: videoGameCompany
          in: formData
          type: boolean
          description: Whether it should be a video game company
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CompanyBaseResponse'
      tags:
        - Company
  /v2/rest/company:
    get:
      description: Retrival of a single company (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Company unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CompanyV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Company
  /v2/rest/company/search:
    get:
      description: Pagination over companies (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CompanyV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Company
    post:
      description: Searching companies (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Company name
        - name: broadcaster
          in: formData
          type: boolean
          description: Whether it should be a broadcaster
        - name: streamingService
          in: formData
          type: boolean
          description: Whether it should be a streaming service
        - name: collectibleCompany
          in: formData
          type: boolean
          description: Whether it should be a collectible company
        - name: conglomerate
          in: formData
          type: boolean
          description: Whether it should be a conglomerate
        - name: visualEffectsCompany
          in: formData
          type: boolean
          description: Whether it should be a visual effects company
        - name: digitalVisualEffectsCompany
          in: formData
          type: boolean
          description: Whether it should be a digital visual effects company
        - name: distributor
          in: formData
          type: boolean
          description: Whether it should be a distributor
        - name: gameCompany
          in: formData
          type: boolean
          description: Whether it should be a game company
        - name: filmEquipmentCompany
          in: formData
          type: boolean
          description: Whether it should be a film equipment company
        - name: makeUpEffectsStudio
          in: formData
          type: boolean
          description: Whether it should be a make-up effects studio
        - name: mattePaintingCompany
          in: formData
          type: boolean
          description: Whether it should be a matte painting company
        - name: modelAndMiniatureEffectsCompany
          in: formData
          type: boolean
          description: Whether it should be a model and miniature effects company
        - name: postProductionCompany
          in: formData
          type: boolean
          description: Whether it should be a post-production company
        - name: productionCompany
          in: formData
          type: boolean
          description: Whether it should be a production company
        - name: propCompany
          in: formData
          type: boolean
          description: Whether it should be a prop company
        - name: recordLabel
          in: formData
          type: boolean
          description: Whether it should be a record label
        - name: specialEffectsCompany
          in: formData
          type: boolean
          description: Whether it should be a special effects company
        - name: tvAndFilmProductionCompany
          in: formData
          type: boolean
          description: Whether it should be a TV and film production company
        - name: videoGameCompany
          in: formData
          type: boolean
          description: Whether it should be a video game company
        - name: publisher
          in: formData
          type: boolean
          description: Whether it should be a publisher
        - name: publicationArtStudio
          in: formData
          type: boolean
          description: Whether it should be a publication art studio
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CompanyV2BaseResponse'
      tags:
        - Company
  /v1/rest/conflict:
    get:
      description: Retrival of a single conflict
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Conflict unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConflictFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Conflict
  /v1/rest/conflict/search:
    get:
      description: Pagination over conflicts
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConflictBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Conflict
    post:
      description: Searching conflicts
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Conflict name
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of the conflict
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of the conflict
        - name: earthConflict
          in: formData
          type: boolean
          description: Whether it should be an Earth conflict
        - name: federationWar
          in: formData
          type: boolean
          description: Whether this conflict should be a part of war involving Federation
        - name: klingonWar
          in: formData
          type: boolean
          description: Whether this conflict should be a part of war involving the Klingons
        - name: dominionWarBattle
          in: formData
          type: boolean
          description: Whether this conflict should be a Dominion war battle
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether this conflict should be from alternate reality
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConflictBaseResponse'
      tags:
        - Conflict
  /v2/rest/conflict:
    get:
      description: Retrival of a single conflict (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Conflict unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConflictV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Conflict
  /v1/rest/common/dataVersion:
    get:
      description: Retrival of a data version
      operationId: v1Get
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/DataVersion'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - DataVersion
  /v1/rest/element:
    get:
      description: Retrival of a single element
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Element unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ElementFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Element
  /v1/rest/element/search:
    get:
      description: Pagination over elements
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ElementBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Element
    post:
      description: Searching elements
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Element name
        - name: symbol
          in: formData
          type: string
          description: Element symbol
        - name: transuranium
          in: formData
          type: boolean
          description: Whether it should be a transuranium
        - name: gammaSeries
          in: formData
          type: boolean
          description: Whether it should belong to Gamma series
        - name: hypersonicSeries
          in: formData
          type: boolean
          description: Whether it should belong to Hypersonic series
        - name: megaSeries
          in: formData
          type: boolean
          description: Whether it should belong to Mega series
        - name: omegaSeries
          in: formData
          type: boolean
          description: Whether it should belong to Omega series
        - name: transonicSeries
          in: formData
          type: boolean
          description: Whether it should belong to Transonic series
        - name: worldSeries
          in: formData
          type: boolean
          description: Whether it should belong to World series
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ElementBaseResponse'
      tags:
        - Element
  /v2/rest/element:
    get:
      description: Retrival of a single element (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Element unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ElementV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Element
  /v2/rest/element/search:
    get:
      description: Pagination over elements (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ElementV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Element
    post:
      description: Searching elements (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Element name
        - name: symbol
          in: formData
          type: string
          description: Element symbol
        - name: transuranic
          in: formData
          type: boolean
          description: Whether it should be a transuranic
        - name: gammaSeries
          in: formData
          type: boolean
          description: Whether it should belong to Gamma series
        - name: hypersonicSeries
          in: formData
          type: boolean
          description: Whether it should belong to Hypersonic series
        - name: megaSeries
          in: formData
          type: boolean
          description: Whether it should belong to Mega series
        - name: omegaSeries
          in: formData
          type: boolean
          description: Whether it should belong to Omega series
        - name: transonicSeries
          in: formData
          type: boolean
          description: Whether it should belong to Transonic series
        - name: worldSeries
          in: formData
          type: boolean
          description: Whether it should belong to World series
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ElementV2BaseResponse'
      tags:
        - Element
  /v1/rest/episode:
    get:
      description: Retrival of a single episode
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Episode unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/EpisodeFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Episode
  /v1/rest/episode/search:
    get:
      description: Pagination over episodes
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/EpisodeBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Episode
    post:
      description: Searching episodes
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Episode title
        - name: seasonNumberFrom
          in: formData
          type: integer
          format: int32
          description: Minimal season number
        - name: seasonNumberTo
          in: formData
          type: integer
          format: int32
          description: Maximal season number
        - name: episodeNumberFrom
          in: formData
          type: integer
          format: int32
          description: Minimal episode number in season
        - name: episodeNumberTo
          in: formData
          type: integer
          format: int32
          description: Maximal episode number in season
        - name: productionSerialNumber
          in: formData
          type: string
          description: Production serial number
        - name: featureLength
          in: formData
          type: boolean
          description: Whether it should be a feature length episode
        - name: stardateFrom
          in: formData
          type: number
          format: float
          description: Starting stardate of episode story
        - name: stardateTo
          in: formData
          type: number
          format: float
          description: Ending stardate of episode story
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of episode story
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of episode story
        - name: usAirDateFrom
          in: formData
          type: string
          format: date
          description: Minimal date the episode was first aired in the United States
        - name: usAirDateTo
          in: formData
          type: string
          format: date
          description: Maximal date the episode was first aired in the United States
        - name: finalScriptDateFrom
          in: formData
          type: string
          format: date
          description: Minimal date the episode script was completed
        - name: finalScriptDateTo
          in: formData
          type: string
          format: date
          description: Maximal date the episode script was completed
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/EpisodeBaseResponse'
      tags:
        - Episode
  /v1/rest/food:
    get:
      description: Retrival of a single food
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Food unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/FoodFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Food
  /v1/rest/food/search:
    get:
      description: Pagination over foods
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/FoodBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Food
    post:
      description: Searching foods
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Food name
        - name: earthlyOrigin
          in: formData
          type: boolean
          description: Whether it should be of earthly origin
        - name: dessert
          in: formData
          type: boolean
          description: Whether it should be a dessert
        - name: fruit
          in: formData
          type: boolean
          description: Whether it should be a fruit
        - name: herbOrSpice
          in: formData
          type: boolean
          description: Whether it should be an herb or a spice
        - name: sauce
          in: formData
          type: boolean
          description: Whether it should be a sauce
        - name: soup
          in: formData
          type: boolean
          description: Whether it should be a soup
        - name: beverage
          in: formData
          type: boolean
          description: Whether it should be a beverage
        - name: alcoholicBeverage
          in: formData
          type: boolean
          description: Whether it should be an alcoholic beverage
        - name: juice
          in: formData
          type: boolean
          description: Whether it should be a juice
        - name: tea
          in: formData
          type: boolean
          description: Whether it should be a tea
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/FoodBaseResponse'
      tags:
        - Food
  /v1/rest/literature:
    get:
      description: Retrival of a single literature
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Literature unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LiteratureFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Literature
  /v1/rest/literature/search:
    get:
      description: Pagination over literature
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LiteratureBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Literature
    post:
      description: Searching literature
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Literature title
        - name: earthlyOrigin
          in: formData
          type: boolean
          description: Whether it should be of earthly origin
        - name: shakespeareanWork
          in: formData
          type: boolean
          description: Whether it should be a Shakespearean work
        - name: report
          in: formData
          type: boolean
          description: Whether it should be a report
        - name: scientificLiterature
          in: formData
          type: boolean
          description: Whether it should be a scientific literature
        - name: technicalManual
          in: formData
          type: boolean
          description: Whether it should be a technical manual
        - name: religiousLiterature
          in: formData
          type: boolean
          description: Whether it should be a religious literature
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LiteratureBaseResponse'
      tags:
        - Literature
  /v1/rest/location:
    get:
      description: Retrival of a single location
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Location unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LocationFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Location
  /v1/rest/location/search:
    get:
      description: Pagination over locations
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LocationBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Location
    post:
      description: Searching locations
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Location name
        - name: earthlyLocation
          in: formData
          type: boolean
          description: Whether it should be an earthly location
        - name: fictionalLocation
          in: formData
          type: boolean
          description: Whether it should be a fictional location
        - name: religiousLocation
          in: formData
          type: boolean
          description: Whether it should be a religious location
        - name: geographicalLocation
          in: formData
          type: boolean
          description: Whether it should be a geographical location
        - name: bodyOfWater
          in: formData
          type: boolean
          description: Whether it should be a body of water
        - name: country
          in: formData
          type: boolean
          description: Whether it should be a country
        - name: subnationalEntity
          in: formData
          type: boolean
          description: Whether it should be a subnational entity
        - name: settlement
          in: formData
          type: boolean
          description: Whether it should be a settlement
        - name: usSettlement
          in: formData
          type: boolean
          description: Whether it should be a US settlement
        - name: bajoranSettlement
          in: formData
          type: boolean
          description: Whether it should be a Bajoran settlement
        - name: colony
          in: formData
          type: boolean
          description: Whether it should be a colony
        - name: landform
          in: formData
          type: boolean
          description: Whether it should be a landform
        - name: landmark
          in: formData
          type: boolean
          description: Whether it should be a landmark
        - name: road
          in: formData
          type: boolean
          description: Whether it should be a road
        - name: structure
          in: formData
          type: boolean
          description: Whether it should be a structure
        - name: shipyard
          in: formData
          type: boolean
          description: Whether it should be a shipyard
        - name: buildingInterior
          in: formData
          type: boolean
          description: Whether it should be a building interior
        - name: establishment
          in: formData
          type: boolean
          description: Whether it should be a establishment
        - name: medicalEstablishment
          in: formData
          type: boolean
          description: Whether it should be a medical establishment
        - name: ds9Establishment
          in: formData
          type: boolean
          description: Whether it should be a DS9 establishment
        - name: school
          in: formData
          type: boolean
          description: Whether it should be a school
        - name: mirror
          in: formData
          type: boolean
          description: Whether this location should be from mirror universe
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether this location should be from alternate reality
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LocationBaseResponse'
      tags:
        - Location
  /v2/rest/location:
    get:
      description: Retrival of a single location (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Location unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LocationV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Location
  /v2/rest/location/search:
    get:
      description: Pagination over locations (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LocationV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Location
    post:
      description: Searching locations (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Location name
        - name: earthlyLocation
          in: formData
          type: boolean
          description: Whether it should be an earthly location
        - name: qonosLocation
          in: formData
          type: boolean
          description: "Whether it should be a Qo'nos location"
        - name: fictionalLocation
          in: formData
          type: boolean
          description: Whether it should be a fictional location
        - name: mythologicalLocation
          in: formData
          type: boolean
          description: Whether it should be a mythological location
        - name: religiousLocation
          in: formData
          type: boolean
          description: Whether it should be a religious location
        - name: geographicalLocation
          in: formData
          type: boolean
          description: Whether it should be a geographical location
        - name: bodyOfWater
          in: formData
          type: boolean
          description: Whether it should be a body of water
        - name: country
          in: formData
          type: boolean
          description: Whether it should be a country
        - name: subnationalEntity
          in: formData
          type: boolean
          description: Whether it should be a subnational entity
        - name: settlement
          in: formData
          type: boolean
          description: Whether it should be a settlement
        - name: usSettlement
          in: formData
          type: boolean
          description: Whether it should be a US settlement
        - name: bajoranSettlement
          in: formData
          type: boolean
          description: Whether it should be a Bajoran settlement
        - name: colony
          in: formData
          type: boolean
          description: Whether it should be a colony
        - name: landform
          in: formData
          type: boolean
          description: Whether it should be a landform
        - name: road
          in: formData
          type: boolean
          description: Whether it should be a road
        - name: structure
          in: formData
          type: boolean
          description: Whether it should be a structure
        - name: shipyard
          in: formData
          type: boolean
          description: Whether it should be a shipyard
        - name: buildingInterior
          in: formData
          type: boolean
          description: Whether it should be a building interior
        - name: establishment
          in: formData
          type: boolean
          description: Whether it should be a establishment
        - name: medicalEstablishment
          in: formData
          type: boolean
          description: Whether it should be a medical establishment
        - name: ds9Establishment
          in: formData
          type: boolean
          description: Whether it should be a DS9 establishment
        - name: school
          in: formData
          type: boolean
          description: Whether it should be a school
        - name: restaurant
          in: formData
          type: boolean
          description: Whether it should be a restaurant
        - name: residence
          in: formData
          type: boolean
          description: Whether it should be a residence
        - name: mirror
          in: formData
          type: boolean
          description: Whether this location should be from mirror universe
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether this location should be from alternate reality
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LocationV2BaseResponse'
      tags:
        - Location
  /v1/rest/magazine:
    get:
      description: Retrival of a single magazine
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Magazine unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MagazineFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Magazine
  /v1/rest/magazine/search:
    get:
      description: Pagination over magazines
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MagazineBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Magazine
    post:
      description: Searching magazines
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Magazine title
        - name: publishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the magazine was published
        - name: publishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the magazine was published
        - name: numberOfPagesFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of pages
        - name: numberOfPagesTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of pages
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MagazineBaseResponse'
      tags:
        - Magazine
  /v1/rest/magazineSeries:
    get:
      description: Retrival of a single magazine series
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Magazine series unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MagazineSeriesFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - MagazineSeries
  /v1/rest/magazineSeries/search:
    get:
      description: Pagination over magazine series
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MagazineSeriesBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - MagazineSeries
    post:
      description: Searching magazine series
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Magazine series title
        - name: publishedYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the magazine series was published
        - name: publishedYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the magazine series was published
        - name: numberOfIssuesFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of issues
        - name: numberOfIssuesTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of issues
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MagazineSeriesBaseResponse'
      tags:
        - MagazineSeries
  /v1/rest/material:
    get:
      description: Retrival of a single material
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Material unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MaterialFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Material
  /v1/rest/material/search:
    get:
      description: Pagination over materials
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MaterialBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Material
    post:
      description: Searching materials
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Material name
        - name: chemicalCompound
          in: formData
          type: boolean
          description: Whether it should be a chemical compound
        - name: biochemicalCompound
          in: formData
          type: boolean
          description: Whether it should be a biochemical compound
        - name: drug
          in: formData
          type: boolean
          description: Whether it should be a drug
        - name: poisonousSubstance
          in: formData
          type: boolean
          description: Whether it should be a poisonous substance
        - name: explosive
          in: formData
          type: boolean
          description: Whether it should be an explosive
        - name: gemstone
          in: formData
          type: boolean
          description: Whether it should be a gemstone
        - name: alloyOrComposite
          in: formData
          type: boolean
          description: Whether it should be an alloy or a composite
        - name: fuel
          in: formData
          type: boolean
          description: Whether it should be a fuel
        - name: mineral
          in: formData
          type: boolean
          description: Whether it should be a mineral
        - name: preciousMaterial
          in: formData
          type: boolean
          description: Whether it should be a precious material
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MaterialBaseResponse'
      tags:
        - Material
  /v1/rest/medicalCondition:
    get:
      description: Retrival of a single medical condition
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Medical condition unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MedicalConditionFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - MedicalCondition
  /v1/rest/medicalCondition/search:
    get:
      description: Pagination over medical conditions
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MedicalConditionBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - MedicalCondition
    post:
      description: Searching medical conditions
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Medical condition name
        - name: psychologicalCondition
          in: formData
          type: boolean
          description: Whether it should be a psychological condition
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MedicalConditionBaseResponse'
      tags:
        - MedicalCondition
  /v1/rest/movie:
    get:
      description: Retrival of a single movie
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Movie unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MovieFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Movie
  /v1/rest/movie/search:
    get:
      description: Pagination over movies
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MovieBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Movie
    post:
      description: Searching movies
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Movie title
        - name: stardateFrom
          in: formData
          type: number
          format: float
          description: Starting stardate of movie story
        - name: stardateTo
          in: formData
          type: number
          format: float
          description: Ending stardate of movie story
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of movie story
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of movie story
        - name: usReleaseDateFrom
          in: formData
          type: string
          format: date
          description: Minimal date the movie was first released in the United States
        - name: usReleaseDateTo
          in: formData
          type: string
          format: date
          description: Maximal date the movie was first released in the United States
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MovieBaseResponse'
      tags:
        - Movie
  /v1/rest/occupation:
    get:
      description: Retrival of a single occupation
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Occupation unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OccupationFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Occupation
  /v1/rest/occupation/search:
    get:
      description: Pagination over occupations
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OccupationBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Occupation
    post:
      description: Searching occupations
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Occupation name
        - name: legalOccupation
          in: formData
          type: boolean
          description: Whether it should be a legal occupation
        - name: medicalOccupation
          in: formData
          type: boolean
          description: Whether it should be a medical occupation
        - name: scientificOccupation
          in: formData
          type: boolean
          description: Whether it should be a scientific occupation
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OccupationBaseResponse'
      tags:
        - Occupation
  /v2/rest/occupation:
    get:
      description: Retrival of a single occupation (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Occupation unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OccupationV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Occupation
  /v2/rest/occupation/search:
    get:
      description: Pagination over occupations (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OccupationV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Occupation
    post:
      description: Searching occupations (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Occupation name
        - name: artsOccupation
          in: formData
          type: boolean
          description: Whether it should be an arts occupation
        - name: communicationOccupation
          in: formData
          type: boolean
          description: Whether it should be a communication occupation
        - name: economicOccupation
          in: formData
          type: boolean
          description: Whether it should be an economic occupation
        - name: educationOccupation
          in: formData
          type: boolean
          description: Whether it should be an education occupation
        - name: entertainmentOccupation
          in: formData
          type: boolean
          description: Whether it should be an entertainment occupation
        - name: illegalOccupation
          in: formData
          type: boolean
          description: Whether it should be an illegal occupation
        - name: legalOccupation
          in: formData
          type: boolean
          description: Whether it should be a legal occupation
        - name: medicalOccupation
          in: formData
          type: boolean
          description: Whether it should be a medical occupation
        - name: scientificOccupation
          in: formData
          type: boolean
          description: Whether it should be a scientific occupation
        - name: sportsOccupation
          in: formData
          type: boolean
          description: Whether it should be a sports occupation
        - name: victualOccupation
          in: formData
          type: boolean
          description: Whether it should be a victual occupation
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OccupationV2BaseResponse'
      tags:
        - Occupation
  /v1/rest/organization:
    get:
      description: Retrival of a single organization
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Organization unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OrganizationFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Organization
  /v1/rest/organization/search:
    get:
      description: Pagination over organizations
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OrganizationBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Organization
    post:
      description: Searching organizations
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Organization name
        - name: government
          in: formData
          type: boolean
          description: Whether it should be a government
        - name: intergovernmentalOrganization
          in: formData
          type: boolean
          description: Whether it should be an intergovernmental organization
        - name: researchOrganization
          in: formData
          type: boolean
          description: Whether it should be a research organization
        - name: sportOrganization
          in: formData
          type: boolean
          description: Whether it should be a sport organization
        - name: medicalOrganization
          in: formData
          type: boolean
          description: Whether it should be a medical organization
        - name: militaryOrganization
          in: formData
          type: boolean
          description: Whether it should be a military organization
        - name: militaryUnit
          in: formData
          type: boolean
          description: Whether it should be a military unit
        - name: governmentAgency
          in: formData
          type: boolean
          description: Whether it should be a government agency
        - name: lawEnforcementAgency
          in: formData
          type: boolean
          description: Whether it should be a law enforcement agency
        - name: prisonOrPenalColony
          in: formData
          type: boolean
          description: Whether it should be a prison or penal colony
        - name: mirror
          in: formData
          type: boolean
          description: Whether this organization should be from mirror universe
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether this organization should be from alternate reality
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OrganizationBaseResponse'
      tags:
        - Organization
  /v1/rest/performer:
    get:
      description: Retrival of a single performer
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Performer unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PerformerFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Performer
  /v1/rest/performer/search:
    get:
      description: Pagination over performers
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PerformerBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Performer
    post:
      description: Searching performers
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Performer name
        - name: birthName
          in: formData
          type: string
          description: Performer birth name
        - name: gender
          in: formData
          type: string
          description: Performer gender
        - name: dateOfBirthFrom
          in: formData
          type: string
          format: date
          description: Minimal date the performer was born
        - name: dateOfBirthTo
          in: formData
          type: string
          format: date
          description: Maximal date the performer was born
        - name: placeOfBirth
          in: formData
          type: string
          description: Place the performer was born
        - name: dateOfDeathFrom
          in: formData
          type: string
          format: date
          description: Minimal date the performer died
        - name: dateOfDeathTo
          in: formData
          type: string
          format: date
          description: Maximal date the performer died
        - name: placeOfDeath
          in: formData
          type: string
          description: Place the performer died
        - name: animalPerformer
          in: formData
          type: boolean
          description: Whether it should be an animal performer
        - name: disPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Discovery'
        - name: ds9Performer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Deep Space Nine'
        - name: entPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Enterprise'
        - name: filmPerformer
          in: formData
          type: boolean
          description: Whether it should be a performer that appeared in a Star Trek movie
        - name: standInPerformer
          in: formData
          type: boolean
          description: Whether it should be a stand-in performer
        - name: stuntPerformer
          in: formData
          type: boolean
          description: Whether it should be a stunt performer
        - name: tasPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: The Animated Series'
        - name: tngPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: The Next Generation'
        - name: tosPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: The Original Series'
        - name: videoGamePerformer
          in: formData
          type: boolean
          description: Whether it should be a video game performer
        - name: voicePerformer
          in: formData
          type: boolean
          description: Whether it should be a voice performer
        - name: voyPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Voyager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PerformerBaseResponse'
      tags:
        - Performer
  /v2/rest/performer:
    get:
      description: Retrival of a single performer (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Performer unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PerformerV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Performer
  /v2/rest/performer/search:
    get:
      description: Pagination over performers (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PerformerV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Performer
    post:
      description: Searching performers (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Performer name
        - name: birthName
          in: formData
          type: string
          description: Performer birth name
        - name: gender
          in: formData
          type: string
          description: Performer gender
        - name: dateOfBirthFrom
          in: formData
          type: string
          format: date
          description: Minimal date the performer was born
        - name: dateOfBirthTo
          in: formData
          type: string
          format: date
          description: Maximal date the performer was born
        - name: placeOfBirth
          in: formData
          type: string
          description: Place the performer was born
        - name: dateOfDeathFrom
          in: formData
          type: string
          format: date
          description: Minimal date the performer died
        - name: dateOfDeathTo
          in: formData
          type: string
          format: date
          description: Maximal date the performer died
        - name: placeOfDeath
          in: formData
          type: string
          description: Place the performer died
        - name: animalPerformer
          in: formData
          type: boolean
          description: Whether it should be an animal performer
        - name: audiobookPerformer
          in: formData
          type: boolean
          description: Whether it should be an audiobook performer
        - name: cutPerformer
          in: formData
          type: boolean
          description: Whether it should be a cut performer
        - name: disPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Discovery'
        - name: ds9Performer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Deep Space Nine'
        - name: entPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Enterprise'
        - name: filmPerformer
          in: formData
          type: boolean
          description: Whether it should be a performer that appeared in a Star Trek movie
        - name: ldPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Lower Decks'
        - name: picPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Picard'
        - name: proPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Prodigy'
        - name: puppeteer
          in: formData
          type: boolean
          description: Whether it should be a puppeteer
        - name: snwPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Strange New Worlds'
        - name: standInPerformer
          in: formData
          type: boolean
          description: Whether it should be a stand-in performer
        - name: stPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Short Treks'
        - name: stuntPerformer
          in: formData
          type: boolean
          description: Whether it should be a stunt performer
        - name: tasPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: The Animated Series'
        - name: tngPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: The Next Generation'
        - name: tosPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: The Original Series'
        - name: videoGamePerformer
          in: formData
          type: boolean
          description: Whether it should be a video game performer
        - name: voicePerformer
          in: formData
          type: boolean
          description: Whether it should be a voice performer
        - name: voyPerformer
          in: formData
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Voyager'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PerformerV2BaseResponse'
      tags:
        - Performer
  /v1/rest/season:
    get:
      description: Retrival of a single season
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Season unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SeasonFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Season
  /v1/rest/season/search:
    get:
      description: Pagination over seasons
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SeasonBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Season
    post:
      description: Searching seasons
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Season title
        - name: seasonNumberFrom
          in: formData
          type: integer
          format: int32
          description: Minimal season number
        - name: seasonNumberTo
          in: formData
          type: integer
          format: int32
          description: Maximal season number
        - name: numberOfEpisodesFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of episodes in season
        - name: numberOfEpisodesTo
          in: formData
          type: integer
          format: int32
          description: Maximal number of episodes in season
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SeasonBaseResponse'
      tags:
        - Season
  /v1/rest/series:
    get:
      description: Retrival of a single series
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Series unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SeriesFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Series
  /v1/rest/series/search:
    get:
      description: Pagination over series
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SeriesBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Series
    post:
      description: Searching series
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Series title
        - name: abbreviation
          in: formData
          type: string
          description: Series abbreviation
        - name: productionStartYearFrom
          in: formData
          type: integer
          format: int32
          description: Minimal year the series production started
        - name: productionStartYearTo
          in: formData
          type: integer
          format: int32
          description: Maximal year the series production started
        - name: productionEndYearFrom
          in: formData
          type: integer
          format: int32
          description: Minimal year the series production ended
        - name: productionEndYearTo
          in: formData
          type: integer
          format: int32
          description: Maximal year the series production ended
        - name: originalRunStartDateFrom
          in: formData
          type: string
          format: date
          description: Minimal date the series originally ran from
        - name: originalRunStartDateTo
          in: formData
          type: string
          format: date
          description: Maximal date the series originally ran from
        - name: originalRunEndDateFrom
          in: formData
          type: string
          format: date
          description: Minimal date the series originally ran to
        - name: originalRunEndDateTo
          in: formData
          type: string
          format: date
          description: Maximal date the series originally ran to
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SeriesBaseResponse'
      tags:
        - Series
  /v1/rest/soundtrack:
    get:
      description: Retrival of a single soundtrack
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Soundtrack unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SoundtrackFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Soundtrack
  /v1/rest/soundtrack/search:
    get:
      description: Pagination over soundtracks
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SoundtrackBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Soundtrack
    post:
      description: Searching soundtracks
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Soundtrack title
        - name: releaseDateFrom
          in: formData
          type: string
          format: date
          description: Minimal release date
        - name: releaseDateTo
          in: formData
          type: string
          format: date
          description: Maximal release date
        - name: lengthFrom
          in: formData
          type: integer
          format: int32
          description: Minimal length, in seconds
        - name: lengthTo
          in: formData
          type: integer
          format: int32
          description: Maximal length, in seconds
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SoundtrackBaseResponse'
      tags:
        - Soundtrack
  /v1/rest/spacecraft:
    get:
      description: Retrival of a single spacecraft
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Spacecraft unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Spacecraft
  /v1/rest/spacecraft/search:
    get:
      description: Pagination over spacecrafts
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Spacecraft
    post:
      description: Searching spacecrafts
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Spacecraft name
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftBaseResponse'
      tags:
        - Spacecraft
  /v2/rest/spacecraft:
    get:
      description: Retrival of a single spacecraft (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Spacecraft unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Spacecraft
  /v2/rest/spacecraft/search:
    get:
      description: Pagination over spacecrafts (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Spacecraft
    post:
      description: Searching spacecrafts (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Spacecraft name
        - name: registry
          in: formData
          type: string
          description: Spacecraft registry
        - name: status
          in: formData
          type: string
          description: Spacecraft status
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftV2BaseResponse'
      tags:
        - Spacecraft
  /v1/rest/spacecraftClass:
    get:
      description: Retrival of a single spacecraft class
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: SpacecraftClass unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftClassFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - SpacecraftClass
  /v1/rest/spacecraftClass/search:
    get:
      description: Pagination over spacecraft classes
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftClassBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - SpacecraftClass
    post:
      description: Searching spacecraft classes
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Spacecraft class name
        - name: warpCapableSpecies
          in: formData
          type: boolean
          description: Whether it should be a warp-capable spacecraft class
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether this spacecraft class should be from alternate reality
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftClassBaseResponse'
      tags:
        - SpacecraftClass
  /v2/rest/spacecraftClass:
    get:
      description: Retrival of a single spacecraft class (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: SpacecraftClass unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftClassV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - SpacecraftClass
  /v2/rest/spacecraftClass/search:
    get:
      description: Pagination over spacecraft classes (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftClassV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - SpacecraftClass
    post:
      description: Searching spacecraft classes (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Spacecraft class name
        - name: warpCapableSpecies
          in: formData
          type: boolean
          description: Whether it should be a warp-capable spacecraft class
        - name: mirror
          in: formData
          type: boolean
          description: Whether this spacecraft class should be from mirror universe
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether this spacecraft class should be from alternate reality
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftClassV2BaseResponse'
      tags:
        - SpacecraftClass
  /v3/rest/spacecraftClass:
    get:
      description: Retrival of a single spacecraft class (V3)
      operationId: v3Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Spacecraft class unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpacecraftClassV3FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - SpacecraftClass
  /v1/rest/species:
    get:
      description: Retrival of a single species
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Species unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpeciesFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Species
  /v1/rest/species/search:
    get:
      description: Pagination over species
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpeciesBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Species
    post:
      description: Searching species
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Species name
        - name: extinctSpecies
          in: formData
          type: boolean
          description: Whether it should be an extinct species
        - name: warpCapableSpecies
          in: formData
          type: boolean
          description: Whether it should be a warp-capable species
        - name: extraGalacticSpecies
          in: formData
          type: boolean
          description: Whether it should be an extra-galactic species
        - name: humanoidSpecies
          in: formData
          type: boolean
          description: Whether it should be a humanoid species
        - name: reptilianSpecies
          in: formData
          type: boolean
          description: Whether it should be a reptilian species
        - name: nonCorporealSpecies
          in: formData
          type: boolean
          description: Whether it should be a non-corporeal species
        - name: shapeshiftingSpecies
          in: formData
          type: boolean
          description: Whether it should be a shapeshifting species
        - name: spaceborneSpecies
          in: formData
          type: boolean
          description: Whether it should be a spaceborne species
        - name: telepathicSpecies
          in: formData
          type: boolean
          description: Whether it should be a telepathic species
        - name: transDimensionalSpecies
          in: formData
          type: boolean
          description: Whether it should be a trans-dimensional species
        - name: unnamedSpecies
          in: formData
          type: boolean
          description: Whether it should be a unnamed species
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether this species should be from alternate reality
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpeciesBaseResponse'
      tags:
        - Species
  /v2/rest/species:
    get:
      description: Retrival of a single species (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Species unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpeciesV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Species
  /v2/rest/species/search:
    get:
      description: Pagination over species (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpeciesV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Species
    post:
      description: Searching species (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Species name
        - name: extinctSpecies
          in: formData
          type: boolean
          description: Whether it should be an extinct species
        - name: warpCapableSpecies
          in: formData
          type: boolean
          description: Whether it should be a warp-capable species
        - name: extraGalacticSpecies
          in: formData
          type: boolean
          description: Whether it should be an extra-galactic species
        - name: humanoidSpecies
          in: formData
          type: boolean
          description: Whether it should be a humanoid species
        - name: reptilianSpecies
          in: formData
          type: boolean
          description: Whether it should be a reptilian species
        - name: avianSpecies
          in: formData
          type: boolean
          description: Whether it should be an avian species
        - name: nonCorporealSpecies
          in: formData
          type: boolean
          description: Whether it should be a non-corporeal species
        - name: shapeshiftingSpecies
          in: formData
          type: boolean
          description: Whether it should be a shapeshifting species
        - name: spaceborneSpecies
          in: formData
          type: boolean
          description: Whether it should be a spaceborne species
        - name: telepathicSpecies
          in: formData
          type: boolean
          description: Whether it should be a telepathic species
        - name: transDimensionalSpecies
          in: formData
          type: boolean
          description: Whether it should be a trans-dimensional species
        - name: unnamedSpecies
          in: formData
          type: boolean
          description: Whether it should be a unnamed species
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether this species should be from alternate reality
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SpeciesV2BaseResponse'
      tags:
        - Species
  /v1/rest/staff:
    get:
      description: Retrival of a single staff member
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Staff unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StaffFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Staff
  /v1/rest/staff/search:
    get:
      description: Pagination over staff members
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StaffBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Staff
    post:
      description: Searching staff members
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Staff name
        - name: birthName
          in: formData
          type: string
          description: Staff birth name
        - name: gender
          in: formData
          type: string
          description: Staff gender
        - name: dateOfBirthFrom
          in: formData
          type: string
          format: date
          description: Minimal date the staff was born
        - name: dateOfBirthTo
          in: formData
          type: string
          format: date
          description: Maximal date the staff was born
        - name: placeOfBirth
          in: formData
          type: string
          description: Place the staff was born
        - name: dateOfDeathFrom
          in: formData
          type: string
          format: date
          description: Minimal date the staff died
        - name: dateOfDeathTo
          in: formData
          type: string
          format: date
          description: Maximal date the staff died
        - name: placeOfDeath
          in: formData
          type: string
          description: Place the staff died
        - name: artDepartment
          in: formData
          type: boolean
          description: Whether this person should be from art department
        - name: artDirector
          in: formData
          type: boolean
          description: Whether this person should be an art director
        - name: productionDesigner
          in: formData
          type: boolean
          description: Whether this person should be a production designer
        - name: cameraAndElectricalDepartment
          in: formData
          type: boolean
          description: Whether this person should be from camera and electrical department
        - name: cinematographer
          in: formData
          type: boolean
          description: Whether this person should be a cinematographer
        - name: castingDepartment
          in: formData
          type: boolean
          description: Whether this person should be from casting department
        - name: costumeDepartment
          in: formData
          type: boolean
          description: Whether this person should be from costume department
        - name: costumeDesigner
          in: formData
          type: boolean
          description: Whether this person should be a custume designer
        - name: director
          in: formData
          type: boolean
          description: Whether this person should be a director
        - name: assistantOrSecondUnitDirector
          in: formData
          type: boolean
          description: Whether this person should be an assistant or secound unit director director
        - name: exhibitAndAttractionStaff
          in: formData
          type: boolean
          description: Whether this person should be an exhibit and attraction staff
        - name: filmEditor
          in: formData
          type: boolean
          description: Whether this person should be a film editor
        - name: linguist
          in: formData
          type: boolean
          description: Whether this person should be a linguist
        - name: locationStaff
          in: formData
          type: boolean
          description: Whether this person should be a location staff
        - name: makeupStaff
          in: formData
          type: boolean
          description: Whether this person should be a make-up staff
        - name: musicDepartment
          in: formData
          type: boolean
          description: Whether this person should be from music department
        - name: composer
          in: formData
          type: boolean
          description: Whether this person should be a composer
        - name: personalAssistant
          in: formData
          type: boolean
          description: Whether this person should be a personal assistant
        - name: producer
          in: formData
          type: boolean
          description: Whether this person should be a producer
        - name: productionAssociate
          in: formData
          type: boolean
          description: Whether this person should be a production associate
        - name: productionStaff
          in: formData
          type: boolean
          description: Whether this person should be a production staff
        - name: publicationStaff
          in: formData
          type: boolean
          description: Whether this person should be a publication staff
        - name: scienceConsultant
          in: formData
          type: boolean
          description: Whether this person should be a science consultant
        - name: soundDepartment
          in: formData
          type: boolean
          description: Whether this person should be from sound department
        - name: specialAndVisualEffectsStaff
          in: formData
          type: boolean
          description: Whether this person should be a special and visual effects staff
        - name: author
          in: formData
          type: boolean
          description: Whether this person should be an author
        - name: audioAuthor
          in: formData
          type: boolean
          description: Whether this person should be an audio author
        - name: calendarArtist
          in: formData
          type: boolean
          description: Whether this person should be a calendar artist
        - name: comicArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic artist
        - name: comicAuthor
          in: formData
          type: boolean
          description: Whether this person should be a comic author
        - name: comicColorArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic color artist
        - name: comicInteriorArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic interior artist
        - name: comicInkArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic ink artist
        - name: comicPencilArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic pencil artist
        - name: comicLetterArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic letter artist
        - name: comicStripArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic strip artist
        - name: gameArtist
          in: formData
          type: boolean
          description: Whether this person should be a game artist
        - name: gameAuthor
          in: formData
          type: boolean
          description: Whether this person should be a game author
        - name: novelArtist
          in: formData
          type: boolean
          description: Whether this person should be a novel artist
        - name: novelAuthor
          in: formData
          type: boolean
          description: Whether this person should be a novel author
        - name: referenceArtist
          in: formData
          type: boolean
          description: Whether this person should be a reference artist
        - name: referenceAuthor
          in: formData
          type: boolean
          description: Whether this person should be a reference author
        - name: publicationArtist
          in: formData
          type: boolean
          description: Whether this person should be a publication artist
        - name: publicationDesigner
          in: formData
          type: boolean
          description: Whether this person should be a publication designer
        - name: publicationEditor
          in: formData
          type: boolean
          description: Whether this person should be a publication editor
        - name: publicityArtist
          in: formData
          type: boolean
          description: Whether this person should be a publicity artist
        - name: cbsDigitalStaff
          in: formData
          type: boolean
          description: Whether this person should be a part of CBS digital staff
        - name: ilmProductionStaff
          in: formData
          type: boolean
          description: Whether this person should be a part of ILM production staff
        - name: specialFeaturesStaff
          in: formData
          type: boolean
          description: Whether this person should be a special features artist
        - name: storyEditor
          in: formData
          type: boolean
          description: Whether this person should be a story editor
        - name: studioExecutive
          in: formData
          type: boolean
          description: Whether this person should be a studio executive
        - name: stuntDepartment
          in: formData
          type: boolean
          description: Whether this person should be from stunt department
        - name: transportationDepartment
          in: formData
          type: boolean
          description: Whether this person should be from transportation department
        - name: videoGameProductionStaff
          in: formData
          type: boolean
          description: Whether this person is video game production staff
        - name: writer
          in: formData
          type: boolean
          description: Whether this person should be a writer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StaffBaseResponse'
      tags:
        - Staff
  /v2/rest/staff:
    get:
      description: Retrival of a single staff member (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Staff unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StaffV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Staff
  /v2/rest/staff/search:
    get:
      description: Pagination over staff members (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StaffV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Staff
    post:
      description: Searching staff members (v2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Staff name
        - name: birthName
          in: formData
          type: string
          description: Staff birth name
        - name: gender
          in: formData
          type: string
          description: Staff gender
        - name: dateOfBirthFrom
          in: formData
          type: string
          format: date
          description: Minimal date the staff was born
        - name: dateOfBirthTo
          in: formData
          type: string
          format: date
          description: Maximal date the staff was born
        - name: placeOfBirth
          in: formData
          type: string
          description: Place the staff was born
        - name: dateOfDeathFrom
          in: formData
          type: string
          format: date
          description: Minimal date the staff died
        - name: dateOfDeathTo
          in: formData
          type: string
          format: date
          description: Maximal date the staff died
        - name: placeOfDeath
          in: formData
          type: string
          description: Place the staff died
        - name: artDepartment
          in: formData
          type: boolean
          description: Whether this person should be from art department
        - name: artDirector
          in: formData
          type: boolean
          description: Whether this person should be an art director
        - name: productionDesigner
          in: formData
          type: boolean
          description: Whether this person should be a production designer
        - name: cameraAndElectricalDepartment
          in: formData
          type: boolean
          description: Whether this person should be from camera and electrical department
        - name: cinematographer
          in: formData
          type: boolean
          description: Whether this person should be a cinematographer
        - name: castingDepartment
          in: formData
          type: boolean
          description: Whether this person should be from casting department
        - name: costumeDepartment
          in: formData
          type: boolean
          description: Whether this person should be from costume department
        - name: costumeDesigner
          in: formData
          type: boolean
          description: Whether this person should be a custume designer
        - name: director
          in: formData
          type: boolean
          description: Whether this person should be a director
        - name: assistantOrSecondUnitDirector
          in: formData
          type: boolean
          description: Whether this person should be an assistant or secound unit director director
        - name: exhibitAndAttractionStaff
          in: formData
          type: boolean
          description: Whether this person should be an exhibit and attraction staff
        - name: filmEditor
          in: formData
          type: boolean
          description: Whether this person should be a film editor
        - name: filmationProductionStaff
          in: formData
          type: boolean
          description: Whether this person should be a part of Filmation production staff
        - name: linguist
          in: formData
          type: boolean
          description: Whether this person should be a linguist
        - name: locationStaff
          in: formData
          type: boolean
          description: Whether this person should be a location staff
        - name: makeupStaff
          in: formData
          type: boolean
          description: Whether this person should be a make-up staff
        - name: merchandiseStaff
          in: formData
          type: boolean
          description: Whether this person should be a merchandise staff
        - name: musicDepartment
          in: formData
          type: boolean
          description: Whether this person should be from music department
        - name: composer
          in: formData
          type: boolean
          description: Whether this person should be a composer
        - name: personalAssistant
          in: formData
          type: boolean
          description: Whether this person should be a personal assistant
        - name: producer
          in: formData
          type: boolean
          description: Whether this person should be a producer
        - name: productionAssociate
          in: formData
          type: boolean
          description: Whether this person should be a production associate
        - name: productionStaff
          in: formData
          type: boolean
          description: Whether this person should be a production staff
        - name: publicationStaff
          in: formData
          type: boolean
          description: Whether this person should be a publication staff
        - name: scienceConsultant
          in: formData
          type: boolean
          description: Whether this person should be a science consultant
        - name: soundDepartment
          in: formData
          type: boolean
          description: Whether this person should be from sound department
        - name: specialAndVisualEffectsStaff
          in: formData
          type: boolean
          description: Whether this person should be a special and visual effects staff
        - name: author
          in: formData
          type: boolean
          description: Whether this person should be an author
        - name: audioAuthor
          in: formData
          type: boolean
          description: Whether this person should be an audio author
        - name: calendarArtist
          in: formData
          type: boolean
          description: Whether this person should be a calendar artist
        - name: comicArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic artist
        - name: comicAuthor
          in: formData
          type: boolean
          description: Whether this person should be a comic author
        - name: comicColorArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic color artist
        - name: comicCoverArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic cover artist
        - name: comicInteriorArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic interior artist
        - name: comicInkArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic ink artist
        - name: comicPencilArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic pencil artist
        - name: comicLetterArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic letter artist
        - name: comicStripArtist
          in: formData
          type: boolean
          description: Whether this person should be a comic strip artist
        - name: gameArtist
          in: formData
          type: boolean
          description: Whether this person should be a game artist
        - name: gameAuthor
          in: formData
          type: boolean
          description: Whether this person should be a game author
        - name: novelArtist
          in: formData
          type: boolean
          description: Whether this person should be a novel artist
        - name: novelAuthor
          in: formData
          type: boolean
          description: Whether this person should be a novel author
        - name: referenceArtist
          in: formData
          type: boolean
          description: Whether this person should be a reference artist
        - name: referenceAuthor
          in: formData
          type: boolean
          description: Whether this person should be a reference author
        - name: publicationArtist
          in: formData
          type: boolean
          description: Whether this person should be a publication artist
        - name: publicationDesigner
          in: formData
          type: boolean
          description: Whether this person should be a publication designer
        - name: publicationEditor
          in: formData
          type: boolean
          description: Whether this person should be a publication editor
        - name: publicityArtist
          in: formData
          type: boolean
          description: Whether this person should be a publicity artist
        - name: cbsDigitalStaff
          in: formData
          type: boolean
          description: Whether this person should be a part of CBS digital staff
        - name: ilmProductionStaff
          in: formData
          type: boolean
          description: Whether this person should be a part of ILM production staff
        - name: specialFeaturesStaff
          in: formData
          type: boolean
          description: Whether this person should be a special features artist
        - name: storyEditor
          in: formData
          type: boolean
          description: Whether this person should be a story editor
        - name: studioExecutive
          in: formData
          type: boolean
          description: Whether this person should be a studio executive
        - name: stuntDepartment
          in: formData
          type: boolean
          description: Whether this person should be from stunt department
        - name: transportationDepartment
          in: formData
          type: boolean
          description: Whether this person should be from transportation department
        - name: videoGameProductionStaff
          in: formData
          type: boolean
          description: Whether this person is video game production staff
        - name: writer
          in: formData
          type: boolean
          description: Whether this person should be a writer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StaffV2BaseResponse'
      tags:
        - Staff
  /v1/rest/technology:
    get:
      description: Retrival of a single technology piece
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Technology unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TechnologyFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Technology
  /v1/rest/technology/search:
    get:
      description: Pagination over technology pieces
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TechnologyBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Technology
    post:
      description: Searching technology pieces
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Technology name
        - name: borgTechnology
          in: formData
          type: boolean
          description: Whether it should be a Borg technology
        - name: borgComponent
          in: formData
          type: boolean
          description: Whether it should be a Borg component
        - name: communicationsTechnology
          in: formData
          type: boolean
          description: Whether it should be a communications technology
        - name: computerTechnology
          in: formData
          type: boolean
          description: Whether it should be a computer technology
        - name: computerProgramming
          in: formData
          type: boolean
          description: Whether it should be a technology related to computer programming
        - name: subroutine
          in: formData
          type: boolean
          description: Whether it should be a subroutine
        - name: database
          in: formData
          type: boolean
          description: Whether it should be a database
        - name: energyTechnology
          in: formData
          type: boolean
          description: Whether it should be a energy technology
        - name: fictionalTechnology
          in: formData
          type: boolean
          description: Whether it should be a fictional technology
        - name: holographicTechnology
          in: formData
          type: boolean
          description: Whether it should be a holographic technology
        - name: identificationTechnology
          in: formData
          type: boolean
          description: Whether it should be a identification technology
        - name: lifeSupportTechnology
          in: formData
          type: boolean
          description: Whether it should be a life support technology
        - name: sensorTechnology
          in: formData
          type: boolean
          description: Whether it should be a sensor technology
        - name: shieldTechnology
          in: formData
          type: boolean
          description: Whether it should be a shield technology
        - name: tool
          in: formData
          type: boolean
          description: Whether it should be a tool
        - name: culinaryTool
          in: formData
          type: boolean
          description: Whether it should be a culinary tool
        - name: engineeringTool
          in: formData
          type: boolean
          description: Whether it should be a engineering tool
        - name: householdTool
          in: formData
          type: boolean
          description: Whether it should be a household tool
        - name: medicalEquipment
          in: formData
          type: boolean
          description: Whether it should be a medical equipment
        - name: transporterTechnology
          in: formData
          type: boolean
          description: Whether it's a transporter technology
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TechnologyBaseResponse'
      tags:
        - Technology
  /v2/rest/technology:
    get:
      description: Retrival of a single technology piece (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Technology unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TechnologyV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Technology
  /v2/rest/technology/search:
    get:
      description: Pagination over technology pieces (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TechnologyV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Technology
    post:
      description: Searching technology pieces (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Technology name
        - name: borgTechnology
          in: formData
          type: boolean
          description: Whether it should be a Borg technology
        - name: borgComponent
          in: formData
          type: boolean
          description: Whether it should be a Borg component
        - name: communicationsTechnology
          in: formData
          type: boolean
          description: Whether it should be a communications technology
        - name: computerTechnology
          in: formData
          type: boolean
          description: Whether it should be a computer technology
        - name: computerProgramming
          in: formData
          type: boolean
          description: Whether it should be a technology related to computer programming
        - name: subroutine
          in: formData
          type: boolean
          description: Whether it should be a subroutine
        - name: database
          in: formData
          type: boolean
          description: Whether it should be a database
        - name: energyTechnology
          in: formData
          type: boolean
          description: Whether it should be a energy technology
        - name: fictionalTechnology
          in: formData
          type: boolean
          description: Whether it should be a fictional technology
        - name: holographicTechnology
          in: formData
          type: boolean
          description: Whether it should be a holographic technology
        - name: identificationTechnology
          in: formData
          type: boolean
          description: Whether it should be a identification technology
        - name: lifeSupportTechnology
          in: formData
          type: boolean
          description: Whether it should be a life support technology
        - name: sensorTechnology
          in: formData
          type: boolean
          description: Whether it should be a sensor technology
        - name: shieldTechnology
          in: formData
          type: boolean
          description: Whether it should be a shield technology
        - name: securityTechnology
          in: formData
          type: boolean
          description: Whether it should be a security technology
        - name: propulsionTechnology
          in: formData
          type: boolean
          description: Whether it should be a propulsion technology
        - name: spacecraftComponent
          in: formData
          type: boolean
          description: Whether it should be a spacecraft component
        - name: warpTechnology
          in: formData
          type: boolean
          description: Whether it should be a warp technology
        - name: transwarpTechnology
          in: formData
          type: boolean
          description: Whether it should be a transwarp technology
        - name: timeTravelTechnology
          in: formData
          type: boolean
          description: Whether it should be a time travel technology
        - name: militaryTechnology
          in: formData
          type: boolean
          description: Whether it should be a military technology
        - name: victualTechnology
          in: formData
          type: boolean
          description: Whether it should be a victual technology
        - name: tool
          in: formData
          type: boolean
          description: Whether it should be a tool
        - name: culinaryTool
          in: formData
          type: boolean
          description: Whether it should be a culinary tool
        - name: engineeringTool
          in: formData
          type: boolean
          description: Whether it should be a engineering tool
        - name: householdTool
          in: formData
          type: boolean
          description: Whether it should be a household tool
        - name: medicalEquipment
          in: formData
          type: boolean
          description: Whether it should be a medical equipment
        - name: transporterTechnology
          in: formData
          type: boolean
          description: Whether it's a transporter technology
        - name: transportationTechnology
          in: formData
          type: boolean
          description: Whether it's a transportation technology
        - name: weaponComponent
          in: formData
          type: boolean
          description: Whether it's a weapon component
        - name: artificialLifeformComponent
          in: formData
          type: boolean
          description: Whether it's an artificial lifeform component
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TechnologyV2BaseResponse'
      tags:
        - Technology
  /v1/rest/title:
    get:
      description: Retrival of a single title
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Title unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TitleFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Title
  /v1/rest/title/search:
    get:
      description: Pagination over titles
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TitleBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Title
    post:
      description: Searching titles
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Title name
        - name: militaryRank
          in: formData
          type: boolean
          description: Whether it should be a military rank
        - name: fleetRank
          in: formData
          type: boolean
          description: Whether it should be a fleet rank
        - name: religiousTitle
          in: formData
          type: boolean
          description: Whether it should be a religious title
        - name: position
          in: formData
          type: boolean
          description: Whether it should be a position
        - name: mirror
          in: formData
          type: boolean
          description: Whether this title should be from mirror universe
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TitleBaseResponse'
      tags:
        - Title
  /v2/rest/title:
    get:
      description: Retrival of a single title (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Title unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TitleV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Title
  /v2/rest/title/search:
    get:
      description: Pagination over titles (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TitleV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Title
    post:
      description: Searching titles (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Title name
        - name: militaryRank
          in: formData
          type: boolean
          description: Whether it should be a military rank
        - name: fleetRank
          in: formData
          type: boolean
          description: Whether it should be a fleet rank
        - name: religiousTitle
          in: formData
          type: boolean
          description: Whether it should be a religious title
        - name: educationTitle
          in: formData
          type: boolean
          description: Whether it should be a education title
        - name: mirror
          in: formData
          type: boolean
          description: Whether this title should be from mirror universe
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TitleV2BaseResponse'
      tags:
        - Title
  /v1/rest/tradingCard:
    get:
      description: Retrival of a single trading card
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Trading card unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TradingCardFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - TradingCard
  /v1/rest/tradingCard/search:
    get:
      description: Pagination over trading cards
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TradingCardBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - TradingCard
    post:
      description: Searching trading cards
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Trading card name
        - name: tradingCardDeckUid
          in: formData
          type: string
          description: UID of trading card deck
        - name: tradingCardSetUid
          in: formData
          type: string
          description: UID of trading card set
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TradingCardBaseResponse'
      tags:
        - TradingCard
  /v1/rest/tradingCardDeck:
    get:
      description: Retrival of a single trading card deck
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: trading card deck unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TradingCardDeckFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - TradingCardDeck
  /v1/rest/tradingCardDeck/search:
    get:
      description: Pagination over trading card decks
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TradingCardDeckBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - TradingCardDeck
    post:
      description: Searching trading card decks
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Trading card deck name
        - name: tradingCardSetUid
          in: formData
          type: string
          description: UID of trading card set
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TradingCardDeckBaseResponse'
      tags:
        - TradingCardDeck
  /v1/rest/tradingCardSet:
    get:
      description: Retrival of a single trading card set
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Trading card set unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TradingCardSetFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - TradingCardSet
  /v1/rest/tradingCardSet/search:
    get:
      description: Pagination over trading card sets
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TradingCardSetBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - TradingCardSet
    post:
      description: Searching trading card sets
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Trading card set name
        - name: releaseYearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year the trading card set was released
        - name: releaseYearTo
          in: formData
          type: integer
          format: int32
          description: Ending year the trading card set was released
        - name: cardsPerPackFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of cards per deck
        - name: cardsPerPackTo
          in: formData
          type: integer
          format: int32
          description: Minimal number of cards per deck
        - name: packsPerBoxFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of packs per box
        - name: packsPerBoxTo
          in: formData
          type: integer
          format: int32
          description: Minimal number of packs per box
        - name: boxesPerCaseFrom
          in: formData
          type: integer
          format: int32
          description: Minimal number of boxes per case
        - name: boxesPerCaseTo
          in: formData
          type: integer
          format: int32
          description: Minimal number of boxes per case
        - name: productionRunFrom
          in: formData
          type: integer
          format: int32
          description: Minimal production run
        - name: productionRunTo
          in: formData
          type: integer
          format: int32
          description: Minimal production run
        - name: productionRunUnit
          in: formData
          type: string
          description: Production run unit
        - name: cardWidthFrom
          in: formData
          type: number
          format: double
          description: Minimal card width, in inches
        - name: cardWidthTo
          in: formData
          type: number
          format: double
          description: Minimal card width, in inches
        - name: cardHeightFrom
          in: formData
          type: number
          format: double
          description: Minimal card height, in inches
        - name: cardHeightTo
          in: formData
          type: number
          format: double
          description: Minimal card height, in inches
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TradingCardSetBaseResponse'
      tags:
        - TradingCardSet
  /v1/rest/videoGame:
    get:
      description: Retrival of a single video game
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: VideoGame unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VideoGameFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - VideoGame
  /v1/rest/videoGame/search:
    get:
      description: Pagination over video games
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VideoGameBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - VideoGame
    post:
      description: Searching video games
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Video game title
        - name: releaseDateFrom
          in: formData
          type: string
          format: date
          description: Minimal date the video game was first released
        - name: releaseDateTo
          in: formData
          type: string
          format: date
          description: Minimal date the video game was first released
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VideoGameBaseResponse'
      tags:
        - VideoGame
  /v1/rest/videoRelease:
    get:
      description: Retrival of a single video release
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Video release unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VideoReleaseFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - VideoRelease
  /v1/rest/videoRelease/search:
    get:
      description: Pagination over video releases
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VideoReleaseBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - VideoRelease
    post:
      description: Searching video releases
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Video release title
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of video release story
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of video release story
        - name: runTimeFrom
          in: formData
          type: integer
          format: int32
          description: Minimal run time, in minutes
        - name: runTimeTo
          in: formData
          type: integer
          format: int32
          description: Minimal run time, in minutes
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VideoReleaseBaseResponse'
      tags:
        - VideoRelease
  /v2/rest/videoRelease:
    get:
      description: Retrival of a single video release (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Video release unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VideoReleaseV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - VideoRelease
  /v2/rest/videoRelease/search:
    get:
      description: Pagination over video releases (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VideoReleaseBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - VideoRelease
    post:
      description: Searching video releases (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: title
          in: formData
          type: string
          description: Video release title
        - name: yearFrom
          in: formData
          type: integer
          format: int32
          description: Starting year of video release story
        - name: yearTo
          in: formData
          type: integer
          format: int32
          description: Ending year of video release story
        - name: runTimeFrom
          in: formData
          type: integer
          format: int32
          description: Minimal run time, in minutes
        - name: runTimeTo
          in: formData
          type: integer
          format: int32
          description: Minimal run time, in minutes
        - name: documentary
          in: formData
          type: boolean
          description: Whether it should be a documentary
        - name: specialFeatures
          in: formData
          type: boolean
          description: Whether it should contain special features
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/VideoReleaseV2BaseResponse'
      tags:
        - VideoRelease
  /v1/rest/weapon:
    get:
      description: Retrival of a single weapon
      operationId: v1Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Weapon unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WeaponFullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Weapon
  /v1/rest/weapon/search:
    get:
      description: Pagination over weapons
      operationId: v1Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WeaponBaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Weapon
    post:
      description: Searching weapons
      operationId: v1Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Weapon name
        - name: handHeldWeapon
          in: formData
          type: boolean
          description: Whether it should be a hand-help weapon
        - name: laserTechnology
          in: formData
          type: boolean
          description: Whether it should be a laser technology
        - name: plasmaTechnology
          in: formData
          type: boolean
          description: Whether it should be a plasma technology
        - name: photonicTechnology
          in: formData
          type: boolean
          description: Whether it should be a photonic technology
        - name: phaserTechnology
          in: formData
          type: boolean
          description: Whether it should be a phaser technology
        - name: mirror
          in: formData
          type: boolean
          description: Whether this weapon should be from mirror universe
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether this weapon should be from alternate reality
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WeaponBaseResponse'
      tags:
        - Weapon
  /v2/rest/weapon:
    get:
      description: Retrival of a single weapon (V2)
      operationId: v2Get
      parameters:
        - name: uid
          in: query
          type: string
          required: true
          description: Weapon unique ID
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WeaponV2FullResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Weapon
  /v2/rest/weapon/search:
    get:
      description: Pagination over weapons (V2)
      operationId: v2Page
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WeaponV2BaseResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - Weapon
    post:
      description: Searching weapons (V2)
      operationId: v2Search
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: pageNumber
          in: query
          type: integer
          format: int32
          description: Zero-based page number
        - name: pageSize
          in: query
          type: integer
          format: int32
          description: Page size
        - name: sort
          type: string
          in: query
          description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
        - name: name
          in: formData
          type: string
          description: Weapon name
        - name: handHeldWeapon
          in: formData
          type: boolean
          description: Whether it should be a hand-help weapon
        - name: laserTechnology
          in: formData
          type: boolean
          description: Whether it should be a laser technology
        - name: plasmaTechnology
          in: formData
          type: boolean
          description: Whether it should be a plasma technology
        - name: photonicTechnology
          in: formData
          type: boolean
          description: Whether it should be a photonic technology
        - name: phaserTechnology
          in: formData
          type: boolean
          description: Whether it should be a phaser technology
        - name: directedEnergyWeapon
          in: formData
          type: boolean
          description: Whether it should be a directed energy weapon
        - name: explosiveWeapon
          in: formData
          type: boolean
          description: Whether it should be an explosive weapon
        - name: projectileWeapon
          in: formData
          type: boolean
          description: Whether it should be a projectile weapon
        - name: fictionalWeapon
          in: formData
          type: boolean
          description: Whether it should be a fictional weapon
        - name: mirror
          in: formData
          type: boolean
          description: Whether this weapon should be from mirror universe
        - name: alternateReality
          in: formData
          type: boolean
          description: Whether this weapon should be from alternate reality
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WeaponV2BaseResponse'
      tags:
        - Weapon
definitions:
  AnimalHeader:
    type: object
    description: Header animal, embedded in other objects
    properties:
      uid:
        type: string
        description: Animal unique ID
      name:
        type: string
        description: Animal name
    required:
      - uid
      - name
  AnimalBase:
    type: object
    description: Base animal, returned in search results
    properties:
      uid:
        type: string
        description: Animal unique ID
      name:
        type: string
        description: Animal name
      earthAnimal:
        type: boolean
        description: Whether it's an earth animal
      earthInsect:
        type: boolean
        description: Whether it's an earth insect
      avian:
        type: boolean
        description: Whether it's an avian
      canine:
        type: boolean
        description: Whether it's a canine
      feline:
        type: boolean
        description: Whether it's a feline
    required:
      - uid
      - name
  AnimalFull:
    type: object
    description: Full animal, returned when queried using UID
    properties:
      uid:
        type: string
        description: Animal unique ID
      name:
        type: string
        description: Animal name
      earthAnimal:
        type: boolean
        description: Whether it's an earth animal
      earthInsect:
        type: boolean
        description: Whether it's an earth insect
      avian:
        type: boolean
        description: Whether it's an avian
      canine:
        type: boolean
        description: Whether it's a canine
      feline:
        type: boolean
        description: Whether it's a feline
    required:
      - uid
      - name
  AnimalBaseResponse:
    type: object
    description: Response object for animals search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      animals:
        type: array
        items:
          $ref: '#/definitions/AnimalBase'
        description: List of animals matching given criteria
  AnimalFullResponse:
    type: object
    description: Response object for single animal query
    properties:
      animal:
        $ref: '#/definitions/AnimalFull'
        description: Animal, if found
  AstronomicalObjectHeader:
    type: object
    description: Header astronomical object, embedded in other objects
    properties:
      uid:
        type: string
        description: Astronomical object's unique ID
      name:
        type: string
        description: Astronomical object name
    required:
      - uid
      - name
  AstronomicalObjectBase:
    type: object
    description: Base astronomical object, returned in search results
    properties:
      uid:
        type: string
        description: Astronomical object's unique ID
      name:
        type: string
        description: Astronomical object name
      astronomicalObjectType:
        $ref: '#/definitions/AstronomicalObjectType'
        description: Type of astronomical object
      location:
        $ref: '#/definitions/AstronomicalObjectHeader'
        description: Location of astronomical object (optional)
    required:
      - uid
      - name
      - astronomicalObjectType
  AstronomicalObjectFull:
    type: object
    description: Full astronomical object, returned when queried using UID
    properties:
      uid:
        type: string
        description: Astronomical object's unique ID
      name:
        type: string
        description: Astronomical object name
      astronomicalObjectType:
        $ref: '#/definitions/AstronomicalObjectType'
        description: Type of astronomical object
      location:
        $ref: '#/definitions/AstronomicalObjectBase'
        description: Location of astronomical object (optional)
      astronomicalObjects:
        type: array
        items:
          $ref: '#/definitions/AstronomicalObjectBase'
        description: Astronomical objects located in this astronomical object, like planets in a star system
    required:
      - uid
      - name
      - astronomicalObjects
  AstronomicalObjectBaseResponse:
    type: object
    description: Response object for astronomical objects search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
      sort:
        $ref: '#/definitions/ResponseSort'
      astronomicalObjects:
        type: array
        items:
          $ref: '#/definitions/AstronomicalObjectBase'
  AstronomicalObjectFullResponse:
    type: object
    description: Response object for single astronomical object query
    properties:
      astronomicalObject:
        $ref: '#/definitions/AstronomicalObjectFull'
  AstronomicalObjectType:
    type: string
    description: Astronomical object type
    enum:
      - PLANET
      - D_CLASS_PLANET
      - H_CLASS_PLANET
      - GAS_GIANT_PLANET
      - K_CLASS_PLANET
      - L_CLASS_PLANET
      - M_CLASS_PLANET
      - Y_CLASS_PLANET
      - ROGUE_PLANET
      - ARTIFICIAL_PLANET
      - ASTEROID
      - ASTEROIDAL_MOON
      - ASTEROID_BELT
      - CLUSTER
      - COMET
      - CONSTELLATION
      - GALAXY
      - MOON
      - M_CLASS_MOON
      - NEBULA
      - PLANETOID
      - D_CLASS_PLANETOID
      - QUASAR
      - STAR
      - STAR_SYSTEM
      - SECTOR
      - REGION
  AstronomicalObjectV2Base:
    type: object
    description: Base astronomical object, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Astronomical object's unique ID
      name:
        type: string
        description: Astronomical object name
      astronomicalObjectType:
        $ref: '#/definitions/AstronomicalObjectV2Type'
        description: Type of astronomical object
      location:
        $ref: '#/definitions/AstronomicalObjectHeader'
        description: Location of astronomical object (optional)
    required:
      - uid
      - name
      - astronomicalObjectType
  AstronomicalObjectV2Full:
    type: object
    description: Full astronomical object, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Astronomical object's unique ID
      name:
        type: string
        description: Astronomical object name
      astronomicalObjectType:
        $ref: '#/definitions/AstronomicalObjectV2Type'
        description: Type of astronomical object
      location:
        $ref: '#/definitions/AstronomicalObjectV2Base'
        description: Location of astronomical object (optional)
      astronomicalObjects:
        type: array
        items:
          $ref: '#/definitions/AstronomicalObjectV2Base'
        description: Astronomical objects located in this astronomical object, like planets in a star system
    required:
      - uid
      - name
      - astronomicalObjectType
  AstronomicalObjectV2BaseResponse:
    type: object
    description: Response object for astronomical objects search (v2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      astronomicalObjects:
        type: array
        items:
          $ref: '#/definitions/AstronomicalObjectV2Base'
        description: List of astronomical objects matching given criteria
  AstronomicalObjectV2FullResponse:
    type: object
    description: Response object for single astronomical object query (V2)
    properties:
      astronomicalObject:
        $ref: '#/definitions/AstronomicalObjectV2Full'
        description: Astronomical object, if found
  AstronomicalObjectV2Type:
    type: string
    description: Astronomical object type (V2)
    enum:
      - PLANET
      - D_CLASS_PLANET
      - H_CLASS_PLANET
      - GAS_GIANT_PLANET
      - K_CLASS_PLANET
      - L_CLASS_PLANET
      - M_CLASS_PLANET
      - Y_CLASS_PLANET
      - ROGUE_PLANET
      - ARTIFICIAL_PLANET
      - ASTEROID
      - ASTEROIDAL_MOON
      - ASTEROID_BELT
      - BORG_SPATIAL_DESIGNATION
      - CLUSTER
      - COMET
      - CONSTELLATION
      - GALAXY
      - MOON
      - M_CLASS_MOON
      - NEBULA
      - PLANETOID
      - D_CLASS_PLANETOID
      - QUADRANT
      - QUASAR
      - STAR
      - STAR_SYSTEM
      - SECTOR
      - REGION
  BloodType:
    type: string
    description: Blood type
    enum:
      - B_NEGATIVE
      - O_NEGATIVE
      - T_NEGATIVE
  BookHeader:
    type: object
    description: Header book, embedded in other objects
    properties:
      uid:
        type: string
        description: Book unique ID
      title:
        type: string
        description: Book title
    required:
      - uid
      - title
  BookBase:
    type: object
    description: Base book, returned in search results
    properties:
      uid:
        type: string
        description: Book unique ID
      title:
        type: string
        description: Book title
      publishedYear:
        type: integer
        description: Year the book was published
      publishedMonth:
        type: integer
        description: Month the book was published
      publishedDay:
        type: integer
        description: Day the book was published
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of book story
      stardateTo:
        type: number
        description: Ending stardate of book story
        format: float
      yearFrom:
        type: integer
        description: Starting year of book story
      yearTo:
        type: integer
        description: Ending year of book story
      novel:
        type: boolean
        description: Whether it's a novel
      referenceBook:
        type: boolean
        description: Whether it's a reference book
      biographyBook:
        type: boolean
        description: Whether it's a biography book
      rolePlayingBook:
        type: boolean
        description: Whether it's a role playing book
      eBook:
        type: boolean
        description: Whether it's an eBook
      anthology:
        type: boolean
        description: Whether it's an anthology
      novelization:
        type: boolean
        description: Whether it's a novelization
      audiobook:
        type: boolean
        description: Whether it's an audiobook, or has been release as an audiobook in addition to other form
      audiobookAbridged:
        type: boolean
        description: If it's an audiobook, whether it's been abridged
      audiobookPublishedYear:
        type: integer
        description: Year the audiobook was published
      audiobookPublishedMonth:
        type: integer
        description: Month the audiobook was published
      audiobookPublishedDay:
        type: integer
        description: Day the audiobook was published
      audiobookRunTime:
        type: integer
        description: Audiobook run time, in minutes
      productionNumber:
        type: string
        description: Book's production number
    required:
      - uid
      - title
      - novel
      - referenceBook
      - biographyBook
      - rolePlayingBook
      - eBook
      - anthology
      - novelization
      - audiobook
      - audiobookAbridged
  BookFull:
    type: object
    description: Full book, returned when queried using UID
    properties:
      uid:
        type: string
        description: Book unique ID
      title:
        type: string
        description: Book title
      publishedYear:
        type: integer
        description: Year the book was published
      publishedMonth:
        type: integer
        description: Month the book was published
      publishedDay:
        type: integer
        description: Day the book was published
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of book story
      stardateTo:
        type: number
        description: Ending stardate of book story
        format: float
      yearFrom:
        type: integer
        description: Starting year of book story
      yearTo:
        type: integer
        description: Ending year of book story
      novel:
        type: boolean
        description: Whether it's a novel
      referenceBook:
        type: boolean
        description: Whether it's a reference book
      biographyBook:
        type: boolean
        description: Whether it's a biography book
      rolePlayingBook:
        type: boolean
        description: Whether it's a role playing book
      eBook:
        type: boolean
        description: Whether it's an eBook
      anthology:
        type: boolean
        description: Whether it's an anthology
      novelization:
        type: boolean
        description: Whether it's a novelization
      audiobook:
        type: boolean
        description: Whether it's an audiobook, or has been release as an audiobook in addition to other form
      audiobookAbridged:
        type: boolean
        description: If it's an audiobook, whether it's been abridged
      audiobookPublishedYear:
        type: integer
        description: Year the audiobook was published
      audiobookPublishedMonth:
        type: integer
        description: Month the audiobook was published
      audiobookPublishedDay:
        type: integer
        description: Day the audiobook was published
      audiobookRunTime:
        type: integer
        description: Audiobook run time, in minutes
      productionNumber:
        type: string
        description: Book production number
      bookSeries:
        type: array
        items:
          $ref: '#/definitions/BookSeriesBase'
        description: Book series this book is included in
      authors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Authors of the book
      artists:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Artists involved in the book
      editors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Editors involved in the book
      audiobookNarrators:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Audiobook narrators
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Book publishers
      audiobookPublishers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Audiobook publishers
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters appearing the book
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: References
      audiobookReferences:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: Audiobook references
      bookCollections:
        type: array
        items:
          $ref: '#/definitions/BookCollectionBase'
        description: Book collections this book is included in
    required:
      - uid
      - title
      - novel
      - referenceBook
      - biographyBook
      - rolePlayingBook
      - eBook
      - anthology
      - novelization
      - audiobook
      - audiobookAbridged
  BookBaseResponse:
    type: object
    description: Response object for books search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      books:
        type: array
        items:
          $ref: '#/definitions/BookBase'
        description: List of books matching given criteria
  BookFullResponse:
    type: object
    description: Response object for single book query
    properties:
      book:
        $ref: '#/definitions/BookFull'
        description: Book, if found
  BookV2Base:
    type: object
    description: Base book, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Book unique ID
      title:
        type: string
        description: Book title
      publishedYear:
        type: integer
        description: Year the book was published
      publishedMonth:
        type: integer
        description: Month the book was published
      publishedDay:
        type: integer
        description: Day the book was published
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of book story
      stardateTo:
        type: number
        description: Ending stardate of book story
        format: float
      yearFrom:
        type: integer
        description: Starting year of book story
      yearTo:
        type: integer
        description: Ending year of book story
      novel:
        type: boolean
        description: Whether it's a novel
      referenceBook:
        type: boolean
        description: Whether it's a reference book
      biographyBook:
        type: boolean
        description: Whether it's a biography book
      rolePlayingBook:
        type: boolean
        description: Whether it's a role playing book
      eBook:
        type: boolean
        description: Whether it's an eBook
      anthology:
        type: boolean
        description: Whether it's an anthology
      novelization:
        type: boolean
        description: Whether it's a novelization
      unauthorizedPublication:
        type: boolean
        description: Whether it's an unauthorized publication
      audiobook:
        type: boolean
        description: Whether it's an audiobook, or has been release as an audiobook in addition to other form
      audiobookAbridged:
        type: boolean
        description: If it's an audiobook, whether it's been abridged
      audiobookPublishedYear:
        type: integer
        description: Year the audiobook was published
      audiobookPublishedMonth:
        type: integer
        description: Month the audiobook was published
      audiobookPublishedDay:
        type: integer
        description: Day the audiobook was published
      audiobookRunTime:
        type: integer
        description: Audiobook run time, in minutes
      productionNumber:
        type: string
        description: Book's production number
    required:
      - uid
      - title
      - novel
      - referenceBook
      - biographyBook
      - rolePlayingBook
      - eBook
      - anthology
      - novelization
      - unauthorizedPublication
      - audiobook
      - audiobookAbridged
  BookV2Full:
    type: object
    description: Full book, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Book unique ID
      title:
        type: string
        description: Book title
      publishedYear:
        type: integer
        description: Year the book was published
      publishedMonth:
        type: integer
        description: Month the book was published
      publishedDay:
        type: integer
        description: Day the book was published
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of book story
      stardateTo:
        type: number
        description: Ending stardate of book story
        format: float
      yearFrom:
        type: integer
        description: Starting year of book story
      yearTo:
        type: integer
        description: Ending year of book story
      novel:
        type: boolean
        description: Whether it's a novel
      referenceBook:
        type: boolean
        description: Whether it's a reference book
      biographyBook:
        type: boolean
        description: Whether it's a biography book
      rolePlayingBook:
        type: boolean
        description: Whether it's a role playing book
      eBook:
        type: boolean
        description: Whether it's an e-book
      anthology:
        type: boolean
        description: Whether it's an anthology
      novelization:
        type: boolean
        description: Whether it's a novelization
      unauthorizedPublication:
        type: boolean
        description: Whether it's an unauthorized publication
      audiobook:
        type: boolean
        description: Whether it's an audiobook, or has been release as an audiobook in addition to other form
      audiobookAbridged:
        type: boolean
        description: If it's an audiobook, whether it's been abridged
      audiobookPublishedYear:
        type: integer
        description: Year the audiobook was published
      audiobookPublishedMonth:
        type: integer
        description: Month the audiobook was published
      audiobookPublishedDay:
        type: integer
        description: Day the audiobook was published
      audiobookRunTime:
        type: integer
        description: Audiobook run time, in minutes
      productionNumber:
        type: string
        description: Book production number
      bookSeries:
        type: array
        items:
          $ref: '#/definitions/BookSeriesBase'
        description: Book series this book is included in
      authors:
        type: array
        items:
          $ref: '#/definitions/StaffV2Base'
        description: Authors of the book
      artists:
        type: array
        items:
          $ref: '#/definitions/StaffV2Base'
        description: Artists involved in the book
      editors:
        type: array
        items:
          $ref: '#/definitions/StaffV2Base'
        description: Editors involved in the book
      audiobookNarrators:
        type: array
        items:
          $ref: '#/definitions/StaffV2Base'
        description: Audiobook narrators
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyV2Base'
        description: Book publishers
      audiobookPublishers:
        type: array
        items:
          $ref: '#/definitions/CompanyV2Base'
        description: Audiobook publishers
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters appearing the book
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: References
      audiobookReferences:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: Audiobook references
      bookCollections:
        type: array
        items:
          $ref: '#/definitions/BookCollectionBase'
        description: Book collections this book is included in
    required:
      - uid
      - title
      - novel
      - referenceBook
      - biographyBook
      - rolePlayingBook
      - eBook
      - anthology
      - novelization
      - unauthorizedPublication
      - audiobook
      - audiobookAbridged
  BookV2BaseResponse:
    type: object
    description: Response object for books search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      books:
        type: array
        items:
          $ref: '#/definitions/BookV2Base'
        description: List of books matching given criteria
  BookV2FullResponse:
    type: object
    description: Response object for single book query (V2)
    properties:
      book:
        $ref: '#/definitions/BookV2Full'
        description: Book, if found
  BookCollectionHeader:
    type: object
    description: Header book collection, embedded in other objects
    properties:
      uid:
        type: string
        description: Book collection unique ID
      title:
        type: string
        description: Book collection title
  BookCollectionBase:
    type: object
    description: Base book collection, returned in search results
    properties:
      uid:
        type: string
        description: Book collection unique ID
      title:
        type: string
        description: Book collection title
      publishedYear:
        type: integer
        description: Year the book collection was published
      publishedMonth:
        type: integer
        description: Month the book collection was published
      publishedDay:
        type: integer
        description: Day the book collection was published
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of book collection stories
      stardateTo:
        type: number
        format: float
        description: Ending stardate of book collection stories
      yearFrom:
        type: integer
        description: Starting year of book collection stories
      yearTo:
        type: integer
        description: Ending year of book collection stories
  BookCollectionFull:
    type: object
    description: Full book collection, returned when queried using UID
    properties:
      uid:
        type: string
        description: Book collection unique ID
      title:
        type: string
        description: Book collection title
      publishedYear:
        type: integer
        description: Year the book collection was published
      publishedMonth:
        type: integer
        description: Month the book collection was published
      publishedDay:
        type: integer
        description: Day the book collection was published
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of book collection stories
      stardateTo:
        type: number
        description: Ending stardate of book collection stories
        format: float
      yearFrom:
        type: integer
        description: Starting year of book collection stories
      yearTo:
        type: integer
        description: Ending year of book collection stories
      bookSeries:
        type: array
        items:
          $ref: '#/definitions/BookSeriesBase'
        description: Book series this book collection is included in
      authors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Authors of the book collection
      artists:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Artists involved in the book collection
      editors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Editors involved in the book collection
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Book collection publishers
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters appearing in the book collection
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: References
      books:
        type: array
        items:
          $ref: '#/definitions/BookBase'
        description: Books included in this book collection
  BookCollectionBaseResponse:
    type: object
    description: Response object for book collections search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      bookCollections:
        type: array
        items:
          $ref: '#/definitions/BookCollectionBase'
        description: List of book collections matching given criteria
  BookCollectionFullResponse:
    type: object
    description: Response object for single book collection query
    properties:
      bookCollection:
        $ref: '#/definitions/BookCollectionFull'
        description: Book collection, if found
  BookSeriesHeader:
    type: object
    description: Header book series, embedded in other objects
    properties:
      uid:
        type: string
        description: Book series unique ID
      title:
        type: string
        description: Book series title
  BookSeriesBase:
    type: object
    description: Base book series, returned in search results
    properties:
      uid:
        type: string
        description: Book series unique ID
      title:
        type: string
        description: Book series title
      publishedYearFrom:
        type: integer
        description: Year from which the book series was published
      publishedMonthFrom:
        type: integer
        description: Month from which the book series was published
      publishedYearTo:
        type: integer
        description: Year to which the book series was published
      publishedMonthTo:
        type: integer
        description: Month to which the book series was published
      numberOfBooks:
        type: integer
        description: Number of pages
      yearFrom:
        type: integer
        description: Starting year of book series stories
      yearTo:
        type: integer
        description: Ending year of book series stories
      miniseries:
        type: boolean
        description: Whether it's a miniseries
      eBookSeries:
        type: boolean
        description: Whether it's a e-book series
    required:
      - uid
      - title
  BookSeriesFull:
    type: object
    description: Full book series, returned when queried using UID
    properties:
      uid:
        type: string
        description: Book series unique ID
      title:
        type: string
        description: Book series title
      publishedYearFrom:
        type: integer
        description: Year from which the book series was published
      publishedMonthFrom:
        type: integer
        description: Month from which the book series was published
      publishedYearTo:
        type: integer
        description: Year to which the book series was published
      publishedMonthTo:
        type: integer
        description: Month to which the book series was published
      numberOfBooks:
        type: integer
        description: Number of books in book series
      yearFrom:
        type: integer
        description: Starting year of book series stories
      yearTo:
        type: integer
        description: Ending year of book series stories
      miniseries:
        type: boolean
        description: Whether it's a miniseries
      eBookSeries:
        type: boolean
        description: Whether it's a e-book series
      parentSeries:
        type: array
        items:
          $ref: '#/definitions/BookSeriesBase'
        description: Book series this book series is included in
      childSeries:
        type: array
        items:
          $ref: '#/definitions/BookSeriesBase'
        description: Child book series included in this book series
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Companies that published this book series
      books:
        type: array
        items:
          $ref: '#/definitions/BookBase'
        description: Books included in this book series
    required:
      - uid
      - title
  BookSeriesBaseResponse:
    type: object
    description: Response object for book series search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      bookSeries:
        type: array
        items:
          $ref: '#/definitions/BookSeriesBase'
        description: List of book series matching given criteria
  BookSeriesFullResponse:
    type: object
    description: Response object for single book series query
    properties:
      bookSeries:
        $ref: '#/definitions/BookSeriesFull'
        description: Book series, if found
  CharacterHeader:
    type: object
    description: Header character, embedded in other objects
    properties:
      uid:
        type: string
        description: Character unique ID
      name:
        type: string
        description: Character name
    required:
      - uid
      - name
  CharacterBase:
    type: object
    description: Base character, returned in search results
    properties:
      uid:
        type: string
        description: Character unique ID
      name:
        type: string
        description: Character name
      gender:
        $ref: '#/definitions/Gender'
        description: Character gender
      yearOfBirth:
        type: integer
        description: Year the character was born
      monthOfBirth:
        type: integer
        description: Month the character was born
      dayOfBirth:
        type: integer
        description: Day the character was born
      placeOfBirth:
        type: string
        description: Place of birth
      yearOfDeath:
        type: integer
        description: Year the character died
      monthOfDeath:
        type: integer
        description: Month the character died
      dayOfDeath:
        type: integer
        description: Day the character died
      placeOfDeath:
        type: string
        description: Place of death
      height:
        type: integer
        description: Height in centimeters
      weight:
        type: integer
        description: Weight in kilograms
      deceased:
        type: boolean
        description: Whether this character is deceased
      bloodType:
        $ref: '#/definitions/BloodType'
        description: Blood type
      maritalStatus:
        $ref: '#/definitions/MaritalStatus'
        description: Marital status
      serialNumber:
        type: string
        description: Serial number
      hologramActivationDate:
        type: string
        description: Hologram activation date
      hologramStatus:
        type: string
        description: Hologram status
      hologramDateStatus:
        type: string
        description: Hologram date status
      hologram:
        type: boolean
        description: Whether this character is a hologram
      fictionalCharacter:
        type: boolean
        description: Whether this character is a fictional character (from universe point of view)
      mirror:
        type: boolean
        description: Whether this character is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this character is from alternate reality
    required:
      - uid
      - name
  CharacterFull:
    type: object
    description: Full character, returned when queried using UID
    properties:
      uid:
        type: string
        description: Character unique ID
      name:
        type: string
        description: Character name
      gender:
        $ref: '#/definitions/Gender'
        description: Character gender
      yearOfBirth:
        type: integer
        description: Year the character was born
      monthOfBirth:
        type: integer
        description: Month the character was born
      dayOfBirth:
        type: integer
        description: Day the character was born
      placeOfBirth:
        type: string
        description: Place of birth
      yearOfDeath:
        type: integer
        description: Year the character died
      monthOfDeath:
        type: integer
        description: Month the character died
      dayOfDeath:
        type: integer
        description: Day the character died
      placeOfDeath:
        type: string
        description: Place of death
      height:
        type: integer
        description: Height in centimeters
      weight:
        type: integer
        description: Weight in kilograms
      deceased:
        type: boolean
        description: Whether this character is deceased
      bloodType:
        $ref: '#/definitions/BloodType'
        description: Blood type
      maritalStatus:
        $ref: '#/definitions/MaritalStatus'
        description: Marital status
      serialNumber:
        type: string
        description: Serial number
      hologramActivationDate:
        type: string
        description: Hologram activation date
      hologramStatus:
        type: string
        description: Hologram status
      hologramDateStatus:
        type: string
        description: Hologram date status
      hologram:
        type: boolean
        description: Whether this character is a hologram
      fictionalCharacter:
        type: boolean
        description: Whether this character is a fictional character (from universe point of view)
      mirror:
        type: boolean
        description: Whether this character is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this character is from alternate reality
      performers:
        type: array
        items:
          $ref: '#/definitions/PerformerBase'
        description: Performers who played this character
      episodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes in which this character appeared
      movies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies in which this character appeared
      characterSpecies:
        type: array
        items:
          $ref: '#/definitions/CharacterSpecies'
        description: Species this character belongs to
      characterRelations:
        type: array
        items:
          $ref: '#/definitions/CharacterRelation'
        description: Relations with other characters
      titles:
        type: array
        items:
          $ref: '#/definitions/TitleBase'
        description: Titles this character holds
      occupations:
        type: array
        items:
          $ref: '#/definitions/OccupationBase'
        description: Occupations of this character
      organizations:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Organizations this character has affiliation with
    required:
      - uid
      - name
  CharacterBaseResponse:
    type: object
    description: Response object for characters search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: List of characters matching given criteria
  CharacterFullResponse:
    type: object
    description: Response object for single character query
    properties:
      character:
        $ref: '#/definitions/CharacterFull'
        description: Character, if found
  CharacterRelation:
    type: object
    description: Relation between characters
    properties:
      type:
        type: string
        description: Relation type
      source:
        $ref: '#/definitions/CharacterHeader'
        description: Character from which this relation is directed
      target:
        $ref: '#/definitions/CharacterHeader'
        description: Character to which this relation is directed
  CharacterSpecies:
    type: object
    description: Species a character belongs to
    properties:
      uid:
        type: string
        description: Entity unique ID
      name:
        type: string
        description: Species name
      numerator:
        type: integer
        description: Numerator
      denominator:
        type: integer
        description: Denominator
  ComicsHeader:
    type: object
    description: Header comics, embedded in other objects
    properties:
      uid:
        type: string
        description: Comics unique ID
      title:
        type: string
        description: Comics title
    required:
      - uid
      - title
  ComicsBase:
    type: object
    description: Base comics, returned in search results
    properties:
      uid:
        type: string
        description: Comics unique ID
      title:
        type: string
        description: Comics title
      publishedYear:
        type: integer
        description: Year the comics was published
      publishedMonth:
        type: integer
        description: Month the comics was published
      publishedDay:
        type: integer
        description: Day the comics was published
      coverYear:
        type: integer
        description: Cover publication year
      coverMonth:
        type: integer
        description: Cover publication month
      coverDay:
        type: integer
        description: Cover publication day
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of comic story
      stardateTo:
        type: number
        format: float
        description: Ending stardate of comic story
      yearFrom:
        type: integer
        description: Starting year of comic story
      yearTo:
        type: integer
        description: Ending year of comic story
      photonovel:
        type: boolean
        description: Whether it's a photonovel
      adaptation:
        type: boolean
        description: Whether it's an adaptation of an episode or a movie
    required:
      - uid
      - title
  ComicsFull:
    type: object
    description: Full comics, returned when queried using UID
    properties:
      uid:
        type: string
        description: Comics unique ID
      title:
        type: string
        description: Comics title
      publishedYear:
        type: integer
        description: Year the comics was published
      publishedMonth:
        type: integer
        description: Month the comics was published
      publishedDay:
        type: integer
        description: Day the comics was published
      coverYear:
        type: integer
        description: Cover publication year
      coverMonth:
        type: integer
        description: Cover publication month
      coverDay:
        type: integer
        description: Cover publication day
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of comic story
      stardateTo:
        type: number
        format: float
        description: Ending stardate of comic story
      yearFrom:
        type: integer
        description: Starting year of comic  story
      yearTo:
        type: integer
        description: Ending year of comic story
      photonovel:
        type: boolean
        description: Whether it's a photonovel
      adaptation:
        type: boolean
        description: Whether it's an adaptation of an episode or a movie
      comicSeries:
        type: array
        items:
          $ref: '#/definitions/ComicSeriesBase'
        description: Comic series this comics is included in
      writers:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Writers involved in the comics
      artists:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Artists involved in the comics
      editors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Editors involved in the comics
      staff:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Other staff involved in the comics
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Comics publishers
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters appearing in the comics
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: References
      comicCollections:
        type: array
        items:
          $ref: '#/definitions/ComicCollectionBase'
        description: Comic collections this comics is included in
    required:
      - uid
      - title
  ComicsBaseResponse:
    type: object
    description: Response object for comics search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      comics:
        type: array
        items:
          $ref: '#/definitions/ComicsBase'
        description: List of comics matching given criteria
  ComicsFullResponse:
    type: object
    description: Response object for single comics query
    properties:
      comics:
        $ref: '#/definitions/ComicsFull'
        description: Comics, if found
  ComicCollectionHeader:
    type: object
    description: Header comic collection, embedded in other objects
    properties:
      uid:
        type: string
        description: Comic collection unique ID
      title:
        type: string
        description: Comic collection title
    required:
      - uid
      - title
  ComicCollectionBase:
    type: object
    description: Base comic collection, returned in search results
    properties:
      uid:
        type: string
        description: Comic collection unique ID
      title:
        type: string
        description: Comic collection title
      publishedYear:
        type: integer
        description: Year the comic collection was published
      publishedMonth:
        type: integer
        description: Month the comic collection was published
      publishedDay:
        type: integer
        description: Day the comic collection was published
      coverYear:
        type: integer
        description: Cover publication year
      coverMonth:
        type: integer
        description: Cover publication month
      coverDay:
        type: integer
        description: Cover publication day
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of comic collection stories
      stardateTo:
        type: number
        format: float
        description: Ending stardate of comic collection stories
      yearFrom:
        type: integer
        description: Starting year of comic collection stories
      yearTo:
        type: integer
        description: Ending year of comic collection stories
      photonovel:
        type: boolean
        description: Whether it's a photonovel collection
    required:
      - uid
      - title
  ComicCollectionFull:
    type: object
    description: Full comic collection, returned when queried using UID
    properties:
      uid:
        type: string
        description: Comic collection unique ID
      title:
        type: string
        description: Comic collection title
      publishedYear:
        type: integer
        description: Year the comic collection was published
      publishedMonth:
        type: integer
        description: Month the comic collection was published
      publishedDay:
        type: integer
        description: Day the comic collection was published
      coverYear:
        type: integer
        description: Cover publication year
      coverMonth:
        type: integer
        description: Cover publication month
      coverDay:
        type: integer
        description: Cover publication day
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of comic collection stories
      stardateTo:
        type: number
        format: float
        description: Ending stardate of comic collection stories
      yearFrom:
        type: integer
        description: Starting year of comic collection stories
      yearTo:
        type: integer
        description: Ending year of comic collection stories
      photonovel:
        type: boolean
        description: Whether it's a photonovel collection
      comicSeries:
        type: array
        items:
          $ref: '#/definitions/ComicSeriesBase'
        description: Comic series this comic collection is included in
      writers:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Writers involved in the comic collection
      artists:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Artists involved in the comic collection
      editors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Editors involved in the comic collection
      staff:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Other staff involved in the comic collection
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Comic collection publishers
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters appearing in the comic collection
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: References
      comics:
        type: array
        items:
          $ref: '#/definitions/ComicsBase'
        description: Comics included in this comic collection
    required:
      - uid
      - title
  ComicCollectionBaseResponse:
    type: object
    description: Response object for comic collections search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      comicCollections:
        type: array
        items:
          $ref: '#/definitions/ComicCollectionBase'
        description: List of comic collections matching given criteria
  ComicCollectionFullResponse:
    type: object
    description: Response object for single comic collection query
    properties:
      comicCollection:
        $ref: '#/definitions/ComicCollectionFull'
        description: Comic collection, if found
  ComicCollectionV2Full:
    type: object
    description: Full comic collection, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Comic collection unique ID
      title:
        type: string
        description: Comic collection title
      publishedYear:
        type: integer
        description: Year the comic collection was published
      publishedMonth:
        type: integer
        description: Month the comic collection was published
      publishedDay:
        type: integer
        description: Day the comic collection was published
      coverYear:
        type: integer
        description: Cover publication year
      coverMonth:
        type: integer
        description: Cover publication month
      coverDay:
        type: integer
        description: Cover publication day
      numberOfPages:
        type: integer
        description: Number of pages
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of comic collection stories
      stardateTo:
        type: number
        format: float
        description: Ending stardate of comic collection stories
      yearFrom:
        type: integer
        description: Starting year of comic collection stories
      yearTo:
        type: integer
        description: Ending year of comic collection stories
      photonovel:
        type: boolean
        description: Whether it's a photonovel collection
      comicSeries:
        type: array
        items:
          $ref: '#/definitions/ComicSeriesBase'
        description: Comic series this comic collection is included in
      childComicSeries:
        type: array
        items:
          $ref: '#/definitions/ComicSeriesBase'
        description: Comic series this comic collection includes
      writers:
        type: array
        items:
          $ref: '#/definitions/StaffV2Base'
        description: Writers involved in the comic collection
      artists:
        type: array
        items:
          $ref: '#/definitions/StaffV2Base'
        description: Artists involved in the comic collection
      editors:
        type: array
        items:
          $ref: '#/definitions/StaffV2Base'
        description: Editors involved in the comic collection
      staff:
        type: array
        items:
          $ref: '#/definitions/StaffV2Base'
        description: Other staff involved in the comic collection
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyV2Base'
        description: Comic collection publishers
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters appearing in the comic collection
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: References
      comics:
        type: array
        items:
          $ref: '#/definitions/ComicsBase'
        description: Comics included in this comic collection
    required:
      - uid
      - title
  ComicCollectionV2FullResponse:
    type: object
    description: Response object for single comic collection query (V2)
    properties:
      comicCollection:
        $ref: '#/definitions/ComicCollectionV2Full'
        description: Comic collection, if found
  ComicSeriesHeader:
    type: object
    description: Header book series, embedded in other objects
    properties:
      uid:
        type: string
        description: Comic series unique ID
      title:
        type: string
        description: Comic series title
    required:
      - uid
      - title
  ComicSeriesBase:
    type: object
    description: Base comic series, returned in search results
    properties:
      uid:
        type: string
        description: Comic series unique ID
      title:
        type: string
        description: Comic series title
      publishedYearFrom:
        type: integer
        description: Year from which the comic series was published
      publishedMonthFrom:
        type: integer
        description: Month from which the comic series was published
      publishedDayFrom:
        type: integer
        description: Day from which the comic series was published
      publishedYearTo:
        type: integer
        description: Year to which the comic series was published
      publishedMonthTo:
        type: integer
        description: Month to which the comic series was published
      publishedDayTo:
        type: integer
        description: Day to which the comic series was published
      numberOfIssues:
        type: integer
        description: Number of issues
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of comic series stories
      stardateTo:
        type: number
        format: float
        description: Ending stardate of comic series stories
      yearFrom:
        type: integer
        description: Starting year of comic series stories
      yearTo:
        type: integer
        description: Ending year of comic series stories
      miniseries:
        type: boolean
        description: Whether it's a miniseries
      photonovelSeries:
        type: boolean
        description: Whether it's a photonovel series
    required:
      - uid
      - title
  ComicSeriesFull:
    type: object
    description: Full comic series, returned when queried using UID
    properties:
      uid:
        type: string
        description: Comic series unique ID
      title:
        type: string
        description: Comic series title
      publishedYearFrom:
        type: integer
        description: Year from which the comic series was published
      publishedMonthFrom:
        type: integer
        description: Month from which the comic series was published
      publishedDayFrom:
        type: integer
        description: Day from which the comic series was published
      publishedYearTo:
        type: integer
        description: Year to which the comic series was published
      publishedMonthTo:
        type: integer
        description: Month to which the comic series was published
      publishedDayTo:
        type: integer
        description: Day to which the comic series was published
      numberOfIssues:
        type: integer
        description: Number of issues
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of comic series stories
      stardateTo:
        type: number
        format: float
        description: Ending stardate of comic series stories
      yearFrom:
        type: integer
        description: Starting year of comic series stories
      yearTo:
        type: integer
        description: Ending year of comic series stories
      miniseries:
        type: boolean
        description: Whether it's a miniseries
      photonovelSeries:
        type: boolean
        description: Whether it's a photonovel series
      parentSeries:
        type: array
        items:
          $ref: '#/definitions/ComicSeriesBase'
        description: Comic series this comic series is included in
      childSeries:
        type: array
        items:
          $ref: '#/definitions/ComicSeriesBase'
        description: Child comic series included in this comic series
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Companies that published this comic series
      comics:
        type: array
        items:
          $ref: '#/definitions/ComicsBase'
        description: Comics included in this comic series
    required:
      - uid
      - title
  ComicSeriesBaseResponse:
    type: object
    description: Response object for comic series search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      comicSeries:
        type: array
        items:
          $ref: '#/definitions/ComicSeriesBase'
        description: List of comic series matching given criteria
  ComicSeriesFullResponse:
    type: object
    description: Response object for single comic series query
    properties:
      comicSeries:
        $ref: '#/definitions/ComicSeriesFull'
        description: Comic series, if found
  ComicStripHeader:
    type: object
    description: Header comic strip, embedded in other objects
    properties:
      uid:
        type: string
        description: Comic strip unique ID
      title:
        type: string
        description: Comic strip title
    required:
      - uid
      - title
  ComicStripBase:
    type: object
    description: Base comic strip, returned in search results
    properties:
      uid:
        type: string
        description: Comic strip unique ID
      title:
        type: string
        description: Comic strip title
      periodical:
        type: string
        description: Title of the periodical the comic strip was published in
      publishedYearFrom:
        type: integer
        description: Year from which the comic strip was published
      publishedMonthFrom:
        type: integer
        description: Month from which the comic strip was published
      publishedDayFrom:
        type: integer
        description: Day from which the comic strip was published
      publishedYearTo:
        type: integer
        description: Year to which the comic strip was published
      publishedMonthTo:
        type: integer
        description: Month to which the comic strip was published
      publishedDayTo:
        type: integer
        description: Day to which the comic strip was published
      numberOfPages:
        type: integer
        description: Number of pages
      yearFrom:
        type: integer
        description: Starting year of comic strip story
      yearTo:
        type: integer
        description: Ending year of comic strip story
    required:
      - uid
      - title
  ComicStripFull:
    type: object
    description: Full comic strip, returned when queried using UID
    properties:
      uid:
        type: string
        description: Comic strip unique ID
      title:
        type: string
        description: Comic strip title
      periodical:
        type: string
        description: Title of the periodical the comic strip was published in
      publishedYearFrom:
        type: integer
        description: Year from which the comic strip was published
      publishedMonthFrom:
        type: integer
        description: Month from which the comic strip was published
      publishedDayFrom:
        type: integer
        description: Day from which the comic strip was published
      publishedYearTo:
        type: integer
        description: Year to which the comic strip was published
      publishedMonthTo:
        type: integer
        description: Month to which the comic strip was published
      publishedDayTo:
        type: integer
        description: Day to which the comic strip was published
      numberOfPages:
        type: integer
        description: Number of pages
      yearFrom:
        type: integer
        description: Starting year of comic strip stories
      yearTo:
        type: integer
        description: Ending year of comic strip stories
      comicSeries:
        type: array
        items:
          $ref: '#/definitions/ComicSeriesBase'
        description: Comic series this comic strip is included in
      writers:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Writers involved in the comic strip
      artists:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Artists involved in the comic strip
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters appearing in the comic strip
    required:
      - uid
      - title
  ComicStripBaseResponse:
    type: object
    description: Response object for comic strip search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      comicStrips:
        type: array
        items:
          $ref: '#/definitions/ComicStripBase'
        description: List of comic strips matching given criteria
  ComicStripFullResponse:
    type: object
    description: Response object for single comic strip query
    properties:
      comicStrip:
        $ref: '#/definitions/ComicStripFull'
        description: Comic strip, if found
  CompanyHeader:
    type: object
    description: Header company, embedded in other objects
    properties:
      uid:
        type: string
        description: Company unique ID
      name:
        type: string
        description: Company title
    required:
      - uid
      - name
  CompanyBase:
    type: object
    description: Base company, returned in search results
    properties:
      uid:
        type: string
        description: Company unique ID
      name:
        type: string
        description: Company name
      broadcaster:
        type: boolean
        description: Whether it's a broadcaster
      collectibleCompany:
        type: boolean
        description: Whether it's a collectible company
      conglomerate:
        type: boolean
        description: Whether it's a conglomerate
      digitalVisualEffectsCompany:
        type: boolean
        description: Whether it's a digital visual effects company
      distributor:
        type: boolean
        description: Whether it's a distributor
      gameCompany:
        type: boolean
        description: Whether it's a game company
      filmEquipmentCompany:
        type: boolean
        description: Whether it's a film equipment company
      makeUpEffectsStudio:
        type: boolean
        description: Whether it's a make-up effects studio
      mattePaintingCompany:
        type: boolean
        description: Whether it's a matte painting company
      modelAndMiniatureEffectsCompany:
        type: boolean
        description: Whether it's a model and miniature effects company
      postProductionCompany:
        type: boolean
        description: Whether it's a post-production company
      productionCompany:
        type: boolean
        description: Whether it's a production company
      propCompany:
        type: boolean
        description: Whether it's a prop company
      recordLabel:
        type: boolean
        description: Whether it's a record label
      specialEffectsCompany:
        type: boolean
        description: Whether it's a special effects company
      tvAndFilmProductionCompany:
        type: boolean
        description: Whether it's a TV and film production company
      videoGameCompany:
        type: boolean
        description: Whether it's a video game company
    required:
      - uid
      - name
  CompanyFull:
    type: object
    description: Full company, returned when queried using UID
    properties:
      uid:
        type: string
        description: Company unique ID
      name:
        type: string
        description: Company name
      broadcaster:
        type: boolean
        description: Whether it's a broadcaster
      collectibleCompany:
        type: boolean
        description: Whether it's a collectible company
      conglomerate:
        type: boolean
        description: Whether it's a conglomerate
      digitalVisualEffectsCompany:
        type: boolean
        description: Whether it's a digital visual effects company
      distributor:
        type: boolean
        description: Whether it's a distributor
      gameCompany:
        type: boolean
        description: Whether it's a game company
      filmEquipmentCompany:
        type: boolean
        description: Whether it's a film equipment company
      makeUpEffectsStudio:
        type: boolean
        description: Whether it's a make-up effects studio
      mattePaintingCompany:
        type: boolean
        description: Whether it's a matte painting company
      modelAndMiniatureEffectsCompany:
        type: boolean
        description: Whether it's a model and miniature effects company
      postProductionCompany:
        type: boolean
        description: Whether it's a post-production company
      productionCompany:
        type: boolean
        description: Whether it's a production company
      propCompany:
        type: boolean
        description: Whether it's a prop company
      recordLabel:
        type: boolean
        description: Whether it's a record label
      specialEffectsCompany:
        type: boolean
        description: Whether it's a special effects company
      tvAndFilmProductionCompany:
        type: boolean
        description: Whether it's a TV and film production company
      videoGameCompany:
        type: boolean
        description: Whether it's a video game company
    required:
      - uid
      - name
  CompanyBaseResponse:
    type: object
    description: Response object for companies search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      companies:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: List of companies matching given criteria
  CompanyFullResponse:
    type: object
    description: Response object for single company query
    properties:
      company:
        $ref: '#/definitions/CompanyFull'
        description: Company, if found
  CompanyV2Base:
    type: object
    description: Base company, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Company unique ID
      name:
        type: string
        description: Company name
      broadcaster:
        type: boolean
        description: Whether it's a broadcaster
      streamingService:
        type: boolean
        description: Whether it's a streaming service
      collectibleCompany:
        type: boolean
        description: Whether it's a collectible company
      conglomerate:
        type: boolean
        description: Whether it's a conglomerate
      visualEffectsCompany:
        type: boolean
        description: Whether it's a visual effects company
      digitalVisualEffectsCompany:
        type: boolean
        description: Whether it's a digital visual effects company
      distributor:
        type: boolean
        description: Whether it's a distributor
      gameCompany:
        type: boolean
        description: Whether it's a game company
      filmEquipmentCompany:
        type: boolean
        description: Whether it's a film equipment company
      makeUpEffectsStudio:
        type: boolean
        description: Whether it's a make-up effects studio
      mattePaintingCompany:
        type: boolean
        description: Whether it's a matte painting company
      modelAndMiniatureEffectsCompany:
        type: boolean
        description: Whether it's a model and miniature effects company
      postProductionCompany:
        type: boolean
        description: Whether it's a post-production company
      productionCompany:
        type: boolean
        description: Whether it's a production company
      propCompany:
        type: boolean
        description: Whether it's a prop company
      recordLabel:
        type: boolean
        description: Whether it's a record label
      specialEffectsCompany:
        type: boolean
        description: Whether it's a special effects company
      tvAndFilmProductionCompany:
        type: boolean
        description: Whether it's a TV and film production company
      videoGameCompany:
        type: boolean
        description: Whether it's a video game company
      publisher:
        type: boolean
        description: Whether it's a publisher
      publicationArtStudio:
        type: boolean
        description: Whether it's a publication art studio
    required:
      - uid
      - name
  CompanyV2Full:
    type: object
    description: Full company, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Company unique ID
      name:
        type: string
        description: Company name
      broadcaster:
        type: boolean
        description: Whether it's a broadcaster
      streamingService:
        type: boolean
        description: Whether it's a streaming service
      collectibleCompany:
        type: boolean
        description: Whether it's a collectible company
      conglomerate:
        type: boolean
        description: Whether it's a conglomerate
      visualEffectsCompany:
        type: boolean
        description: Whether it's a visual effects company
      digitalVisualEffectsCompany:
        type: boolean
        description: Whether it's a digital visual effects company
      distributor:
        type: boolean
        description: Whether it's a distributor
      gameCompany:
        type: boolean
        description: Whether it's a game company
      filmEquipmentCompany:
        type: boolean
        description: Whether it's a film equipment company
      makeUpEffectsStudio:
        type: boolean
        description: Whether it's a make-up effects studio
      mattePaintingCompany:
        type: boolean
        description: Whether it's a matte painting company
      modelAndMiniatureEffectsCompany:
        type: boolean
        description: Whether it's a model and miniature effects company
      postProductionCompany:
        type: boolean
        description: Whether it's a post-production company
      productionCompany:
        type: boolean
        description: Whether it's a production company
      propCompany:
        type: boolean
        description: Whether it's a prop company
      recordLabel:
        type: boolean
        description: Whether it's a record label
      specialEffectsCompany:
        type: boolean
        description: Whether it's a special effects company
      tvAndFilmProductionCompany:
        type: boolean
        description: Whether it's a TV and film production company
      videoGameCompany:
        type: boolean
        description: Whether it's a video game company
      publisher:
        type: boolean
        description: Whether it's a publisher
      publicationArtStudio:
        type: boolean
        description: Whether it's a publication art studio
    required:
      - uid
      - name
  CompanyV2BaseResponse:
    type: object
    description: Response object for companies search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      companies:
        type: array
        items:
          $ref: '#/definitions/CompanyV2Base'
        description: List of companies matching given criteria
  CompanyV2FullResponse:
    type: object
    description: Response object for single company query (V2)
    properties:
      company:
        $ref: '#/definitions/CompanyV2Full'
        description: Company, if found
  ConflictHeader:
    type: object
    description: Header conflict, embedded in other objects
    properties:
      uid:
        type: string
        description: Conflict unique ID
      name:
        type: string
        description: Conflict name
    required:
      - uid
      - name
  ConflictBase:
    type: object
    description: Base conflict, returned in search results
    properties:
      uid:
        type: string
        description: Conflict unique ID
      name:
        type: string
        description: Conflict name
      yearFrom:
        type: integer
        description: Starting year of the conflict
      yearTo:
        type: integer
        description: Ending year of the conflict
      earthConflict:
        type: boolean
        description: Whether it was an Earth conflict
      federationWar:
        type: boolean
        description: Whether this conflict is part of war involving Federation
      klingonWar:
        type: boolean
        description: Whether this conflict is part of war involving the Klingons
      dominionWarBattle:
        type: boolean
        description: Whether this conflict is a Dominion war battle
      alternateReality:
        type: boolean
        description: Whether this conflict is from alternate reality
    required:
      - uid
      - name
  ConflictFull:
    type: object
    description: Base conflict, returned in search results
    properties:
      uid:
        type: string
        description: Conflict unique ID
      name:
        type: string
        description: Conflict name
      yearFrom:
        type: integer
        description: Starting year of the conflict
      yearTo:
        type: integer
        description: Ending year of the conflict
      earthConflict:
        type: boolean
        description: Whether it is an Earth conflict
      federationWar:
        type: boolean
        description: Whether this conflict is a part of war involving Federation
      klingonWar:
        type: boolean
        description: Whether this conflict is a part of war involving the Klingons
      dominionWarBattle:
        type: boolean
        description: Whether this conflict is a Dominion war battle
      alternateReality:
        type: boolean
        description: Whether this conflict is from alternate reality
      locations:
        type: array
        items:
          $ref: '#/definitions/LocationBase'
        description: Locations this conflict occurred at
      firstSideBelligerents:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Organization involved in conflict on first side
      firstSideCommanders:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Commanders involved in conflict on first side
      secondSideBelligerents:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Organization involved in conflict on second side
      secondSideCommanders:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Commanders involved in conflict on second side
    required:
      - uid
      - name
  ConflictBaseResponse:
    type: object
    description: Response object for conflicts search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      conflicts:
        type: array
        items:
          $ref: '#/definitions/ConflictBase'
        description: List of conflicts matching given criteria
  ConflictFullResponse:
    type: object
    description: Response object for single conflict query
    properties:
      conflict:
        $ref: '#/definitions/ConflictFull'
        description: Conflict, if found
  ConflictV2Full:
    type: object
    description: Base conflict, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Conflict unique ID
      name:
        type: string
        description: Conflict name
      yearFrom:
        type: integer
        description: Starting year of the conflict
      yearTo:
        type: integer
        description: Ending year of the conflict
      earthConflict:
        type: boolean
        description: Whether it is an Earth conflict
      federationWar:
        type: boolean
        description: Whether this conflict is a part of war involving Federation
      klingonWar:
        type: boolean
        description: Whether this conflict is a part of war involving the Klingons
      dominionWarBattle:
        type: boolean
        description: Whether this conflict is a Dominion war battle
      alternateReality:
        type: boolean
        description: Whether this conflict is from alternate reality
      locations:
        type: array
        items:
          $ref: '#/definitions/LocationBase'
        description: Locations this conflict occurred at
      firstSideBelligerents:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Organization involved in conflict on first side
      firstSideLocations:
        type: array
        items:
          $ref: '#/definitions/LocationV2Base'
        description: Locations involved in conflict on first side
      firstSideCommanders:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Commanders involved in conflict on first side
      secondSideBelligerents:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Organization involved in conflict on second side
      secondSideLocations:
        type: array
        items:
          $ref: '#/definitions/LocationV2Base'
        description: Locations involved in conflict on second side
      secondSideCommanders:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Commanders involved in conflict on second side
    required:
      - uid
      - name
  ConflictV2FullResponse:
    type: object
    description: Response object for single conflict query (V2)
    properties:
      conflict:
        $ref: '#/definitions/ConflictV2Full'
        description: Conflict, if found
  ContentLanguage:
    type: object
    description: Content langauge
    properties:
      uid:
        type: string
        description: Language unique ID
      name:
        type: string
        description: Language name
      iso6391Code:
        type: string
        description: ISO 639-1 code
  ContentRatingSystem:
    type: string
    description: Content rating system
    enum:
      - BBFC
      - OFLC
      - OFLCNZ
      - DJCTQ
      - MDA
      - MPAA
      - CHVRS
      - RCQ
      - IFCO
      - FSK
      - NICAM
      - MCCYP
      - EIRIN
      - HK
      - CBFC
      - NMHH
      - VRC
      - RSAC
      - ESRB
      - ELSPA
      - PEGI
      - USK
      - SELL
      - ADESE
      - GSRR
      - ITUNES
  ContentRating:
    type: object
    description: Rating of video release, etc.
    properties:
      uid:
        type: string
        description: Rating unique ID
      contentRatingSystem:
        $ref: '#/definitions/ContentRatingSystem'
        description: Content rating system
      rating:
        type: string
        description: Rating within specified content rating system
  Country:
    type: object
    description: Real-world country
    properties:
      uid:
        type: string
        description: Country unique ID
      name:
        type: string
        description: Country name
      iso31661Alpha2Code:
        type: string
        description: ISO 3166-1 alpha-2 code
  DataVersion:
    type: object
    description: Data version
    properties:
      dataVersion:
        type: string
        description: Version of the data served by this STAPI instance
    required:
      - dataVersion
  ElementHeader:
    type: object
    description: Header element, embedded in other objects
    properties:
      uid:
        type: string
        description: Element unique ID
      name:
        type: string
        description: Element name
    required:
      - uid
      - name
  ElementBase:
    type: object
    description: Base element, returned in search results
    properties:
      uid:
        type: string
        description: Element unique ID
      name:
        type: string
        description: Element name
      symbol:
        type: string
        description: Element symbol
      atomicNumber:
        type: integer
        description: Element atomic number
      atomicWeight:
        type: integer
        description: Element atomic weight
      transuranium:
        type: boolean
        description: Whether it's a transuranium
      gammaSeries:
        type: boolean
        description: Whether it belongs to Gamma series
      hypersonicSeries:
        type: boolean
        description: Whether it belongs to Hypersonic series
      megaSeries:
        type: boolean
        description: Whether it belongs to Mega series
      omegaSeries:
        type: boolean
        description: Whether it belongs to Omega series
      transonicSeries:
        type: boolean
        description: Whether it belongs to Transonic series
      worldSeries:
        type: boolean
        description: Whether it belongs to World series
    required:
      - uid
      - name
  ElementFull:
    type: object
    description: Full element, returned when queried using UID
    properties:
      uid:
        type: string
        description: Element unique ID
      name:
        type: string
        description: Element name
      symbol:
        type: string
        description: Element symbol
      atomicNumber:
        type: integer
        description: Element atomic number
      atomicWeight:
        type: integer
        description: Element atomic weight
      transuranium:
        type: boolean
        description: Whether it's a transuranium
      gammaSeries:
        type: boolean
        description: Whether it belongs to Gamma series
      hypersonicSeries:
        type: boolean
        description: Whether it belongs to Hypersonic series
      megaSeries:
        type: boolean
        description: Whether it belongs to Mega series
      omegaSeries:
        type: boolean
        description: Whether it belongs to Omega series
      transonicSeries:
        type: boolean
        description: Whether it belongs to Transonic series
      worldSeries:
        type: boolean
        description: Whether it belongs to World series
    required:
      - uid
      - name
  ElementBaseResponse:
    type: object
    description: Response object for elements search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      elements:
        type: array
        items:
          $ref: '#/definitions/ElementBase'
        description: List of elements matching given criteria
  ElementFullResponse:
    type: object
    description: Response object for single element query
    properties:
      element:
        $ref: '#/definitions/ElementFull'
        description: Element, if found
  ElementV2Base:
    type: object
    description: Base element, returned in search results (v2)
    properties:
      uid:
        type: string
        description: Element unique ID
      name:
        type: string
        description: Element name
      symbol:
        type: string
        description: Element symbol
      atomicNumber:
        type: integer
        description: Element atomic number
      atomicWeight:
        type: integer
        description: Element atomic weight
      transuranic:
        type: boolean
        description: Whether it's a transuranic
      gammaSeries:
        type: boolean
        description: Whether it belongs to Gamma series
      hypersonicSeries:
        type: boolean
        description: Whether it belongs to Hypersonic series
      megaSeries:
        type: boolean
        description: Whether it belongs to Mega series
      omegaSeries:
        type: boolean
        description: Whether it belongs to Omega series
      transonicSeries:
        type: boolean
        description: Whether it belongs to Transonic series
      worldSeries:
        type: boolean
        description: Whether it belongs to World series
    required:
      - uid
      - name
  ElementV2Full:
    type: object
    description: Full element, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Element unique ID
      name:
        type: string
        description: Element name
      symbol:
        type: string
        description: Element symbol
      atomicNumber:
        type: integer
        description: Element atomic number
      atomicWeight:
        type: integer
        description: Element atomic weight
      transuranic:
        type: boolean
        description: Whether it's a transuranic
      gammaSeries:
        type: boolean
        description: Whether it belongs to Gamma series
      hypersonicSeries:
        type: boolean
        description: Whether it belongs to Hypersonic series
      megaSeries:
        type: boolean
        description: Whether it belongs to Mega series
      omegaSeries:
        type: boolean
        description: Whether it belongs to Omega series
      transonicSeries:
        type: boolean
        description: Whether it belongs to Transonic series
      worldSeries:
        type: boolean
        description: Whether it belongs to World series
    required:
      - uid
      - name
  ElementV2BaseResponse:
    type: object
    description: Response object for elements search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      elements:
        type: array
        items:
          $ref: '#/definitions/ElementV2Base'
        description: List of elements matching given criteria
  ElementV2FullResponse:
    type: object
    description: Response object for single element query (V2)
    properties:
      element:
        $ref: '#/definitions/ElementV2Full'
        description: Element, if found
  EpisodeHeader:
    type: object
    description: Header episode, embedded in other objects
    properties:
      uid:
        type: string
        description: Episode unique ID
      title:
        type: string
        description: Episode title
    required:
      - uid
      - title
  EpisodeBase:
    type: object
    description: Base episode, returned in search results
    properties:
      uid:
        type: string
        description: Episode unique ID
      title:
        type: string
        description: Episode title
      titleGerman:
        type: string
        description: Episode title in German
      titleItalian:
        type: string
        description: Episode title in Italian
      titleJapanese:
        type: string
        description: Episode title in Japanese
      series:
        $ref: '#/definitions/SeriesHeader'
        description: Series this episode belongs to
      season:
        $ref: '#/definitions/SeasonHeader'
        description: Season this episode belongs to
      seasonNumber:
        type: integer
        description: Season number
      episodeNumber:
        type: integer
        description: Episode number in season
      productionSerialNumber:
        type: string
        description: Production serial number
      featureLength:
        type: boolean
        description: Whether it's a feature length episode
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of episode story
      stardateTo:
        type: number
        format: float
        description: Ending stardate of episode story
      yearFrom:
        type: integer
        description: Starting year of episode story
      yearTo:
        type: integer
        description: Ending year of episode story
      usAirDate:
        type: string
        format: date
        description: Date the episode was first aired in the United States
      finalScriptDate:
        type: string
        format: date
        description: Date the episode script was completed
    required:
      - uid
      - title
  EpisodeFull:
    type: object
    description: Full episode, returned when queried using UID
    properties:
      uid:
        type: string
        description: Episode unique ID
      title:
        type: string
        description: Episode title
      titleGerman:
        type: string
        description: Episode title in German
      titleItalian:
        type: string
        description: Episode title in Italian
      titleJapanese:
        type: string
        description: Episode title in Japanese
      series:
        $ref: '#/definitions/SeriesBase'
        description: Series this episode belongs to
      season:
        $ref: '#/definitions/SeasonBase'
        description: Season this episode belongs to
      seasonNumber:
        type: integer
        description: Season number
      episodeNumber:
        type: integer
        description: Episode number in season
      productionSerialNumber:
        type: string
        description: Production serial number
      featureLength:
        type: boolean
        description: Whether it's a feature length episode
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of episode story
      stardateTo:
        type: number
        format: float
        description: Ending stardate of episode story
      yearFrom:
        type: integer
        description: Starting year of episode story
      yearTo:
        type: integer
        description: Ending year of episode story
      usAirDate:
        type: string
        format: date
        description: Date the episode was first aired in the United States
      finalScriptDate:
        type: string
        format: date
        description: Date the episode script was completed
      writers:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Writers involved in the episode
      teleplayAuthors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Teleplay authors involved in the episode
      storyAuthors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Story authors involved in the episode
      directors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Directors authors involved in the episode
      performers:
        type: array
        items:
          $ref: '#/definitions/PerformerBase'
        description: Performers appearing in the episode
      stuntPerformers:
        type: array
        items:
          $ref: '#/definitions/PerformerBase'
        description: Stunt performers appearing in the episode
      standInPerformers:
        type: array
        items:
          $ref: '#/definitions/PerformerBase'
        description: Stand-in performers appearing in the episode
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters appearing in the episode
    required:
      - uid
      - title
  EpisodeBaseResponse:
    type: object
    description: Response object for episodes search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      episodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: List of episodes matching given criteria
  EpisodeFullResponse:
    type: object
    description: Response object for single episode query
    properties:
      episode:
        $ref: '#/definitions/EpisodeFull'
        description: Episode, if found
  Error:
    type: object
    description: Error object
    properties:
      code:
        type: string
        description: Error code
      message:
        type: string
        description: Error message
  FoodHeader:
    type: object
    description: Header food, embedded in other objects
    properties:
      uid:
        type: string
        description: Food unique ID
      name:
        type: string
        description: Food name
    required:
      - uid
      - name
  FoodBase:
    type: object
    description: Base food, returned in search results
    properties:
      uid:
        type: string
        description: Food unique ID
      name:
        type: string
        description: Food name
      earthlyOrigin:
        type: boolean
        description: Whether it's of earthly origin
      dessert:
        type: boolean
        description: Whether it's a dessert
      fruit:
        type: boolean
        description: Whether it's a fruit
      herbOrSpice:
        type: boolean
        description: Whether it's a herb or a spice
      sauce:
        type: boolean
        description: Whether it's a sauce
      soup:
        type: boolean
        description: Whether it's a soup
      beverage:
        type: boolean
        description: Whether it's a beverage
      alcoholicBeverage:
        type: boolean
        description: Whether it's an alcoholic beverage
      juice:
        type: boolean
        description: Whether it's a juice
      tea:
        type: boolean
        description: Whether it's a tea
    required:
      - uid
      - name
  FoodFull:
    type: object
    description: Full food, returned when queried using UID
    properties:
      uid:
        type: string
        description: Food unique ID
      name:
        type: string
        description: Food name
      earthlyOrigin:
        type: boolean
        description: Whether it's of earthly origin
      dessert:
        type: boolean
        description: Whether it's a dessert
      fruit:
        type: boolean
        description: Whether it's a fruit
      herbOrSpice:
        type: boolean
        description: Whether it's an herb or a spice
      sauce:
        type: boolean
        description: Whether it's a sauce
      soup:
        type: boolean
        description: Whether it's a soup
      beverage:
        type: boolean
        description: Whether it's a beverage
      alcoholicBeverage:
        type: boolean
        description: Whether it's an alcoholic beverage
      juice:
        type: boolean
        description: Whether it's a juice
      tea:
        type: boolean
        description: Whether it's a tea
    required:
      - uid
      - name
  FoodBaseResponse:
    type: object
    description: Response object for foods search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      foods:
        type: array
        items:
          $ref: '#/definitions/FoodBase'
        description: List of foods matching given criteria
  FoodFullResponse:
    type: object
    description: Response object for single food query
    properties:
      food:
        $ref: '#/definitions/FoodFull'
        description: Food, if found
  Gender:
    type: string
    description: Gender
    enum:
      - F
      - M
  Genre:
    type: object
    description: Genre of video games
    properties:
      uid:
        type: string
        description: Genre unique ID
      name:
        type: string
        description: Genre name
  LiteratureHeader:
    type: object
    description: Header literature, embedded in other objects
    properties:
      uid:
        type: string
        description: Literature unique ID
      title:
        type: string
        description: Literature title
    required:
      - uid
      - title
  LiteratureBase:
    type: object
    description: Base literature, returned in search results
    properties:
      uid:
        type: string
        description: Literature unique ID
      title:
        type: string
        description: Literature title
      earthlyOrigin:
        type: boolean
        description: Whether it's of earthly origin
      shakespeareanWork:
        type: boolean
        description: Whether it's a Shakespearean work
      report:
        type: boolean
        description: Whether it's a report
      scientificLiterature:
        type: boolean
        description: Whether it's a scientific literature
      technicalManual:
        type: boolean
        description: Whether it's a technical manual
      religiousLiterature:
        type: boolean
        description: Whether it's a religious literature
    required:
      - uid
      - title
  LiteratureFull:
    type: object
    description: Full literature, returned when queried using UID
    properties:
      uid:
        type: string
        description: Literature unique ID
      title:
        type: string
        description: Literature title
      earthlyOrigin:
        type: boolean
        description: Whether it's of earthly origin
      shakespeareanWork:
        type: boolean
        description: Whether it's a Shakespearean work
      report:
        type: boolean
        description: Whether it's a report
      scientificLiterature:
        type: boolean
        description: Whether it's a scientific literature
      technicalManual:
        type: boolean
        description: Whether it's a technical manual
      religiousLiterature:
        type: boolean
        description: Whether it's a religious literature
    required:
      - uid
      - title
  LiteratureBaseResponse:
    type: object
    description: Response object for literature search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      literature:
        type: array
        items:
          $ref: '#/definitions/LiteratureBase'
        description: List of literature matching given criteria
  LiteratureFullResponse:
    type: object
    description: Response object for single literature query
    properties:
      literature:
        $ref: '#/definitions/LiteratureFull'
        description: Literature, if found
  LocationHeader:
    type: object
    description: Header location, embedded in other objects
    properties:
      uid:
        type: string
        description: Location unique ID
      name:
        type: string
        description: Location name
    required:
      - uid
      - name
  LocationBase:
    type: object
    description: Base location, returned in search results
    properties:
      uid:
        type: string
        description: Location unique ID
      name:
        type: string
        description: Location name
      earthlyLocation:
        type: boolean
        description: Whether it's an earthly location
      fictionalLocation:
        type: boolean
        description: Whether it's a fictional location
      religiousLocation:
        type: boolean
        description: Whether it's a religious location
      geographicalLocation:
        type: boolean
        description: Whether it's a geographical location
      bodyOfWater:
        type: boolean
        description: Whether it's a body of water
      country:
        type: boolean
        description: Whether it's a country
      subnationalEntity:
        type: boolean
        description: Whether it's a subnational entity
      settlement:
        type: boolean
        description: Whether it's a settlement
      usSettlement:
        type: boolean
        description: Whether it's a US settlement
      bajoranSettlement:
        type: boolean
        description: Whether it's a Bajoran settlement
      colony:
        type: boolean
        description: Whether it's a colony
      landform:
        type: boolean
        description: Whether it's a landform
      landmark:
        type: boolean
        description: Whether it's a landmark
      road:
        type: boolean
        description: Whether it's a road
      structure:
        type: boolean
        description: Whether it's a structure
      shipyard:
        type: boolean
        description: Whether it's a shipyard
      buildingInterior:
        type: boolean
        description: Whether it's a building interior
      establishment:
        type: boolean
        description: Whether it's a establishment
      medicalEstablishment:
        type: boolean
        description: Whether it's a medical establishment
      ds9Establishment:
        type: boolean
        description: Whether it's a DS9 establishment
      school:
        type: boolean
        description: Whether it's a school
      mirror:
        type: boolean
        description: Whether this location is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this location is from alternate reality
    required:
      - uid
      - name
  LocationFull:
    type: object
    description: Full location, returned when queried using UID
    properties:
      uid:
        type: string
        description: Location unique ID
      name:
        type: string
        description: Location name
      earthlyLocation:
        type: boolean
        description: Whether it's an earthly location
      fictionalLocation:
        type: boolean
        description: Whether it's a fictional location
      religiousLocation:
        type: boolean
        description: Whether it's a religious location
      geographicalLocation:
        type: boolean
        description: Whether it's a geographical location
      bodyOfWater:
        type: boolean
        description: Whether it's a body of water
      country:
        type: boolean
        description: Whether it's a country
      subnationalEntity:
        type: boolean
        description: Whether it's a subnational entity
      settlement:
        type: boolean
        description: Whether it's a settlement
      usSettlement:
        type: boolean
        description: Whether it's a US settlement
      bajoranSettlement:
        type: boolean
        description: Whether it's a Bajoran settlement
      colony:
        type: boolean
        description: Whether it's a colony
      landform:
        type: boolean
        description: Whether it's a landform
      landmark:
        type: boolean
        description: Whether it's a landmark
      road:
        type: boolean
        description: Whether it's a road
      structure:
        type: boolean
        description: Whether it's a structure
      shipyard:
        type: boolean
        description: Whether it's a shipyard
      buildingInterior:
        type: boolean
        description: Whether it's a building interior
      establishment:
        type: boolean
        description: Whether it's a establishment
      medicalEstablishment:
        type: boolean
        description: Whether it's a medical establishment
      ds9Establishment:
        type: boolean
        description: Whether it's a DS9 establishment
      school:
        type: boolean
        description: Whether it's a school
      mirror:
        type: boolean
        description: Whether this location is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this location is from alternate reality
    required:
      - uid
      - name
  LocationBaseResponse:
    type: object
    description: Response object for locations search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      locations:
        type: array
        items:
          $ref: '#/definitions/LocationBase'
        description: List of locations matching given criteria
  LocationFullResponse:
    type: object
    description: Response object for single location query
    properties:
      location:
        $ref: '#/definitions/LocationFull'
        description: Location, if found
  LocationV2Base:
    type: object
    description: Base location, returned in search results (v2)
    properties:
      uid:
        type: string
        description: Location unique ID
      name:
        type: string
        description: Location name
      earthlyLocation:
        type: boolean
        description: Whether it's an earthly location
      qonosLocation:
        type: boolean
        description: "Whether it's a Qo'noS location"
      fictionalLocation:
        type: boolean
        description: Whether it's a fictional location
      mythologicalLocation:
        type: boolean
        description: Whether it's a mythological location
      religiousLocation:
        type: boolean
        description: Whether it's a religious location
      geographicalLocation:
        type: boolean
        description: Whether it's a geographical location
      bodyOfWater:
        type: boolean
        description: Whether it's a body of water
      country:
        type: boolean
        description: Whether it's a country
      subnationalEntity:
        type: boolean
        description: Whether it's a subnational entity
      settlement:
        type: boolean
        description: Whether it's a settlement
      usSettlement:
        type: boolean
        description: Whether it's a US settlement
      bajoranSettlement:
        type: boolean
        description: Whether it's a Bajoran settlement
      colony:
        type: boolean
        description: Whether it's a colony
      landform:
        type: boolean
        description: Whether it's a landform
      road:
        type: boolean
        description: Whether it's a road
      structure:
        type: boolean
        description: Whether it's a structure
      shipyard:
        type: boolean
        description: Whether it's a shipyard
      buildingInterior:
        type: boolean
        description: Whether it's a building interior
      establishment:
        type: boolean
        description: Whether it's a establishment
      medicalEstablishment:
        type: boolean
        description: Whether it's a medical establishment
      ds9Establishment:
        type: boolean
        description: Whether it's a DS9 establishment
      school:
        type: boolean
        description: Whether it's a school
      restaurant:
        type: boolean
        description: Whether it's a restaurant
      residence:
        type: boolean
        description: Whether it's a residence
      mirror:
        type: boolean
        description: Whether this location is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this location is from alternate reality
    required:
      - uid
      - name
  LocationV2Full:
    type: object
    description: Full location, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Location unique ID
      name:
        type: string
        description: Location name
      earthlyLocation:
        type: boolean
        description: Whether it's an earthly location
      qonosLocation:
        type: boolean
        description: "Whether it's a Qo'noS location"
      fictionalLocation:
        type: boolean
        description: Whether it's a fictional location
      mythologicalLocation:
        type: boolean
        description: Whether it's a mythological location
      religiousLocation:
        type: boolean
        description: Whether it's a religious location
      geographicalLocation:
        type: boolean
        description: Whether it's a geographical location
      bodyOfWater:
        type: boolean
        description: Whether it's a body of water
      country:
        type: boolean
        description: Whether it's a country
      subnationalEntity:
        type: boolean
        description: Whether it's a subnational entity
      settlement:
        type: boolean
        description: Whether it's a settlement
      usSettlement:
        type: boolean
        description: Whether it's a US settlement
      bajoranSettlement:
        type: boolean
        description: Whether it's a Bajoran settlement
      colony:
        type: boolean
        description: Whether it's a colony
      landform:
        type: boolean
        description: Whether it's a landform
      road:
        type: boolean
        description: Whether it's a road
      structure:
        type: boolean
        description: Whether it's a structure
      shipyard:
        type: boolean
        description: Whether it's a shipyard
      buildingInterior:
        type: boolean
        description: Whether it's a building interior
      establishment:
        type: boolean
        description: Whether it's a establishment
      medicalEstablishment:
        type: boolean
        description: Whether it's a medical establishment
      ds9Establishment:
        type: boolean
        description: Whether it's a DS9 establishment
      school:
        type: boolean
        description: Whether it's a school
      restaurant:
        type: boolean
        description: Whether it's a restaurant
      residence:
        type: boolean
        description: Whether it's a residence
      mirror:
        type: boolean
        description: Whether this location is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this location is from alternate reality
    required:
      - uid
      - name
  LocationV2BaseResponse:
    type: object
    description: Response object for locations search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      locations:
        type: array
        items:
          $ref: '#/definitions/LocationV2Base'
        description: List of locations matching given criteria
  LocationV2FullResponse:
    type: object
    description: Response object for single location query (V2)
    properties:
      location:
        $ref: '#/definitions/LocationV2Full'
        description: Location, if found
  MagazineHeader:
    type: object
    description: Header magazine, embedded in other objects
    properties:
      uid:
        type: string
        description: Magazine unique ID
      title:
        type: string
        description: Magazine title
    required:
      - uid
      - title
  MagazineBase:
    type: object
    description: Base magazine, returned in search results
    properties:
      uid:
        type: string
        description: Magazine unique ID
      title:
        type: string
        description: Magazine title
      publishedYear:
        type: integer
        description: Year the magazine was published
      publishedMonth:
        type: integer
        description: Month the magazine was published
      publishedDay:
        type: integer
        description: Day the magazine was published
      coverYear:
        type: integer
        description: Cover publication year
      coverMonth:
        type: integer
        description: Cover publication month
      coverDay:
        type: integer
        description: Cover publication day
      numberOfPages:
        type: integer
        description: Number of pages
      issueNumber:
        type: string
        description: Magazine issue number
    required:
      - uid
      - title
  MagazineFull:
    type: object
    description: Full magazine, returned when queried using UID
    properties:
      uid:
        type: string
        description: Magazine unique ID
      title:
        type: string
        description: Magazine title
      publishedYear:
        type: integer
        description: Year the magazine was published
      publishedMonth:
        type: integer
        description: Month the magazine was published
      publishedDay:
        type: integer
        description: Day the magazine was published
      coverYear:
        type: integer
        description: Cover publication year
      coverMonth:
        type: integer
        description: Cover publication month
      coverDay:
        type: integer
        description: Cover publication day
      numberOfPages:
        type: integer
        description: Number of pages
      issueNumber:
        type: string
        description: Magazine issue number
      magazineSeries:
        type: array
        items:
          $ref: '#/definitions/MagazineSeriesBase'
        description: Magazine series this magazine is included in
      editors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Editors involved in the magazine
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Magazine publishers
    required:
      - uid
      - title
  MagazineBaseResponse:
    type: object
    description: Response object for magazine search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      magazines:
        type: array
        items:
          $ref: '#/definitions/MagazineBase'
        description: List of magazines matching given criteria
  MagazineFullResponse:
    type: object
    description: Response object for single magazine query
    properties:
      magazine:
        $ref: '#/definitions/MagazineFull'
        description: Magazine, if found
  MagazineSeriesHeader:
    type: object
    description: Header book series, embedded in other objects
    properties:
      uid:
        type: string
        description: Magazine series unique ID
      title:
        type: string
        description: Magazine series title
    required:
      - uid
      - title
  MagazineSeriesBase:
    type: object
    description: Base magazine series, returned in search results
    properties:
      uid:
        type: string
        description: Magazine series unique ID
      title:
        type: string
        description: Magazine series title
      publishedYearFrom:
        type: integer
        description: Year from which the magazine series was published
      publishedMonthFrom:
        type: integer
        description: Month from which the magazine series was published
      publishedYearTo:
        type: integer
        description: Year to which the magazine series was published
      publishedMonthTo:
        type: integer
        description: Month to which the magazine series was published
      numberOfIssues:
        type: integer
        description: Number of issues
    required:
      - uid
      - title
  MagazineSeriesFull:
    type: object
    description: Full magazine series, returned when queried using UID
    properties:
      uid:
        type: string
        description: Magazine series unique ID
      title:
        type: string
        description: Magazine series title
      publishedYearFrom:
        type: integer
        description: Year from which the magazine series was published
      publishedMonthFrom:
        type: integer
        description: Month from which the magazine series was published
      publishedYearTo:
        type: integer
        description: Year to which the magazine series was published
      publishedMonthTo:
        type: integer
        description: Month to which the magazine series was published
      numberOfIssues:
        type: integer
        description: Number of issues
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Companies that published this magazine series
      editors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Editors involved in the magazine series
      magazines:
        type: array
        items:
          $ref: '#/definitions/MagazineBase'
        description: Magazines included in this magazine series
    required:
      - uid
      - title
  MagazineSeriesBaseResponse:
    type: object
    description: Response object for magazine series search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      magazineSeries:
        type: array
        items:
          $ref: '#/definitions/MagazineSeriesBase'
        description: List of magazine series matching given criteria
  MagazineSeriesFullResponse:
    type: object
    description: Response object for single magazine series query
    properties:
      magazineSeries:
        $ref: '#/definitions/MagazineSeriesFull'
        description: Magazine series, if found
  MaritalStatus:
    type: string
    description: Marital status
    enum:
      - SINGLE
      - ENGAGED
      - MARRIED
      - DIVORCED
      - REMARRIED
      - SEPARATED
      - WIDOWED
      - CAPTAINS_WOMAN
  MaterialHeader:
    type: object
    description: Header material, embedded in other objects
    properties:
      uid:
        type: string
        description: Material unique ID
      name:
        type: string
        description: Material name
    required:
      - uid
      - name
  MaterialBase:
    type: object
    description: Base material, returned in search results
    properties:
      uid:
        type: string
        description: Material unique ID
      name:
        type: string
        description: Material name
      chemicalCompound:
        type: boolean
        description: Whether it's a chemical compound
      biochemicalCompound:
        type: boolean
        description: Whether it's a biochemical compound
      drug:
        type: boolean
        description: Whether it's a drug
      poisonousSubstance:
        type: boolean
        description: Whether it's a poisonous substance
      explosive:
        type: boolean
        description: Whether it's an explosive
      gemstone:
        type: boolean
        description: Whether it's a gemstone
      alloyOrComposite:
        type: boolean
        description: Whether it's an alloy or a composite
      fuel:
        type: boolean
        description: Whether it's a fuel
      mineral:
        type: boolean
        description: Whether it's a mineral
      preciousMaterial:
        type: boolean
        description: Whether it's a precious material
    required:
      - uid
      - name
  MaterialFull:
    type: object
    description: Full material, returned when queried using UID
    properties:
      uid:
        type: string
        description: Material unique ID
      name:
        type: string
        description: Material name
      chemicalCompound:
        type: boolean
        description: Whether it's a chemical compound
      biochemicalCompound:
        type: boolean
        description: Whether it's a biochemical compound
      drug:
        type: boolean
        description: Whether it's a drug
      poisonousSubstance:
        type: boolean
        description: Whether it's a poisonous substance
      explosive:
        type: boolean
        description: Whether it's an explosive
      gemstone:
        type: boolean
        description: Whether it's a gemstone
      alloyOrComposite:
        type: boolean
        description: Whether it's an alloy or a composite
      fuel:
        type: boolean
        description: Whether it's a fuel
      mineral:
        type: boolean
        description: Whether it's a mineral
      preciousMaterial:
        type: boolean
        description: Whether it's a precious material
    required:
      - uid
      - name
  MaterialBaseResponse:
    type: object
    description: Response object for materials search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      materials:
        type: array
        items:
          $ref: '#/definitions/MaterialBase'
        description: List of materials matching given criteria
  MaterialFullResponse:
    type: object
    description: Response object for single material query
    properties:
      material:
        $ref: '#/definitions/MaterialFull'
        description: Material, if found
  MedicalConditionHeader:
    type: object
    description: Header medical condition, embedded in other objects
    properties:
      uid:
        type: string
        description: Medical condition unique ID
      name:
        type: string
        description: Medical condition name
    required:
      - uid
      - name
  MedicalConditionBase:
    type: object
    description: Base medical condition, returned in search results
    properties:
      uid:
        type: string
        description: Medical condition unique ID
      name:
        type: string
        description: Medical condition name
      psychologicalCondition:
        type: boolean
        description: Whether it's a psychological condition
    required:
      - uid
      - name
  MedicalConditionFull:
    type: object
    description: Full medical condition, returned when queried using UID
    properties:
      uid:
        type: string
        description: Medical condition unique ID
      name:
        type: string
        description: Medical condition name
      psychologicalCondition:
        type: boolean
        description: Whether it's a psychological condition
    required:
      - uid
      - name
  MedicalConditionBaseResponse:
    type: object
    description: Response object for medical conditions search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      medicalConditions:
        type: array
        items:
          $ref: '#/definitions/MedicalConditionBase'
        description: List of medical conditions matching given criteria
  MedicalConditionFullResponse:
    type: object
    description: Response object for single medical condition query
    properties:
      medicalCondition:
        $ref: '#/definitions/MedicalConditionFull'
        description: Medical condition, if found
  MovieHeader:
    type: object
    description: Header movie, embedded in other objects
    properties:
      uid:
        type: string
        description: Movie unique ID
      title:
        type: string
        description: Movie title
    required:
      - uid
      - title
  MovieBase:
    type: object
    description: Base movie, returned in search results
    properties:
      uid:
        type: string
        description: Movie unique ID
      title:
        type: string
        description: Movie title
      mainDirector:
        $ref: '#/definitions/StaffHeader'
        description: Director of the movie
      titleBulgarian:
        type: string
        description: Movie title in Bulgarian
      titleCatalan:
        type: string
        description: Movie title in Catalan
      titleChineseTraditional:
        type: string
        description: Movie title in Chinese traditional
      titleGerman:
        type: string
        description: Movie title in German
      titleItalian:
        type: string
        description: Movie title in Italian
      titleJapanese:
        type: string
        description: Movie title in Japanese
      titlePolish:
        type: string
        description: Movie title in Polish
      titleRussian:
        type: string
        description: Movie title in Russian
      titleSerbian:
        type: string
        description: Movie title in Serbian
      titleSpanish:
        type: string
        description: Movie title in Spanish
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of movie story
      stardateTo:
        type: number
        format: float
        description: Ending stardate of movie story
      yearFrom:
        type: integer
        description: Starting year of movie story
      yearTo:
        type: integer
        description: Ending year of movie story
      usReleaseDate:
        type: string
        format: date
        description: Date the movie was first released in the United States
    required:
      - uid
      - title
  MovieFull:
    type: object
    description: Full movie, returned when queried using UID
    properties:
      uid:
        type: string
        description: Movie unique ID
      title:
        type: string
        description: Movie title
      mainDirector:
        $ref: '#/definitions/StaffBase'
        description: Director of the movie
      titleBulgarian:
        type: string
        description: Movie title in Bulgarian
      titleCatalan:
        type: string
        description: Movie title in Catalan
      titleChineseTraditional:
        type: string
        description: Movie title in Chinese traditional
      titleGerman:
        type: string
        description: Movie title in German
      titleItalian:
        type: string
        description: Movie title in Italian
      titleJapanese:
        type: string
        description: Movie title in Japanese
      titlePolish:
        type: string
        description: Movie title in Polish
      titleRussian:
        type: string
        description: Movie title in Russian
      titleSerbian:
        type: string
        description: Movie title in Serbian
      titleSpanish:
        type: string
        description: Movie title in Spanish
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of movie story
      stardateTo:
        type: number
        format: float
        description: Ending stardate of movie story
      yearFrom:
        type: integer
        description: Starting year of movie story
      yearTo:
        type: integer
        description: Ending year of movie story
      usReleaseDate:
        type: string
        format: date
        description: Date the movie was first released in the United States
      writers:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Writers involved in the movie
      screenplayAuthors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Screenplay authors involved in the movie
      storyAuthors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Story authors authors involved in the movie
      directors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Directors authors involved in the movie
      producers:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Producers authors involved in the movie
      staff:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Other staff involved in the movie
      performers:
        type: array
        items:
          $ref: '#/definitions/PerformerBase'
        description: Performers appearing in the movie
      stuntPerformers:
        type: array
        items:
          $ref: '#/definitions/PerformerBase'
        description: Stunt performers appearing in the movie
      standInPerformers:
        type: array
        items:
          $ref: '#/definitions/PerformerBase'
        description: Stand-in performers appearing in the movie
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters appearing in the movie
    required:
      - uid
      - title
  MovieBaseResponse:
    type: object
    description: Response object for movies search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      movies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: List of movies matching given criteria
  MovieFullResponse:
    type: object
    description: Response object for single movie query
    properties:
      movie:
        $ref: '#/definitions/MovieFull'
        description: Movie, if found
  OccupationHeader:
    type: object
    description: Header occupation, embedded in other objects
    properties:
      uid:
        type: string
        description: Occupation unique ID
      name:
        type: string
        description: Occupation name
    required:
      - uid
      - name
  OccupationBase:
    type: object
    description: Base occupations, returned in search results
    properties:
      uid:
        type: string
        description: Occupation unique ID
      name:
        type: string
        description: Occupation name
      legalOccupation:
        type: boolean
        description: Whether it's a legal occupation
      medicalOccupation:
        type: boolean
        description: Whether it's a medical occupation
      scientificOccupation:
        type: boolean
        description: Whether it's a scientific occupation
    required:
      - uid
      - name
  OccupationFull:
    type: object
    description: Full occupation, returned when queried using UID
    properties:
      uid:
        type: string
        description: Occupation unique ID
      name:
        type: string
        description: Occupation name
      legalOccupation:
        type: boolean
        description: Whether it's a legal occupation
      medicalOccupation:
        type: boolean
        description: Whether it's a medical occupation
      scientificOccupation:
        type: boolean
        description: Whether it's a scientific occupation
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters with this occupation
    required:
      - uid
      - name
  OccupationBaseResponse:
    type: object
    description: Response object for occupations search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      occupations:
        type: array
        items:
          $ref: '#/definitions/OccupationBase'
        description: List of occupations matching given criteria
  OccupationFullResponse:
    type: object
    description: Response object for single occupation query
    properties:
      occupation:
        $ref: '#/definitions/OccupationFull'
        description: Occupation, if found
  OccupationV2Base:
    type: object
    description: Base occupations, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Occupation unique ID
      name:
        type: string
        description: Occupation name
      artsOccupation:
        type: boolean
        description: Whether it's an arts occupation
      communicationOccupation:
        type: boolean
        description: Whether it's a communication occupation
      economicOccupation:
        type: boolean
        description: Whether it's an economic occupation
      educationOccupation:
        type: boolean
        description: Whether it's an education occupation
      entertainmentOccupation:
        type: boolean
        description: Whether it's an entertainment occupation
      illegalOccupation:
        type: boolean
        description: Whether it's an illegal occupation
      legalOccupation:
        type: boolean
        description: Whether it's a legal occupation
      medicalOccupation:
        type: boolean
        description: Whether it's a medical occupation
      scientificOccupation:
        type: boolean
        description: Whether it's a scientific occupation
      sportsOccupation:
        type: boolean
        description: Whether it's a sports occupation
      victualOccupation:
        type: boolean
        description: Whether it's a victual occupation
    required:
      - uid
      - name
  OccupationV2Full:
    type: object
    description: Full occupation, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Occupation unique ID
      name:
        type: string
        description: Occupation name
      artsOccupation:
        type: boolean
        description: Whether it's an arts occupation
      communicationOccupation:
        type: boolean
        description: Whether it's a communication occupation
      economicOccupation:
        type: boolean
        description: Whether it's an economic occupation
      educationOccupation:
        type: boolean
        description: Whether it's an education occupation
      entertainmentOccupation:
        type: boolean
        description: Whether it's an entertainment occupation
      illegalOccupation:
        type: boolean
        description: Whether it's an illegal occupation
      legalOccupation:
        type: boolean
        description: Whether it's a legal occupation
      medicalOccupation:
        type: boolean
        description: Whether it's a medical occupation
      scientificOccupation:
        type: boolean
        description: Whether it's a scientific occupation
      sportsOccupation:
        type: boolean
        description: Whether it's a sports occupation
      victualOccupation:
        type: boolean
        description: Whether it's a victual occupation
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters with this occupation
    required:
      - uid
      - name
  OccupationV2BaseResponse:
    type: object
    description: Response object for occupations search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      occupations:
        type: array
        items:
          $ref: '#/definitions/OccupationV2Base'
        description: List of occupations matching given criteria
  OccupationV2FullResponse:
    type: object
    description: Response object for single occupation query (V2)
    properties:
      occupation:
        $ref: '#/definitions/OccupationV2Full'
        description: Occupation, if found
  OrganizationHeader:
    type: object
    description: Header organization, embedded in other objects
    properties:
      uid:
        type: string
        description: Organization unique ID
      name:
        type: string
        description: Organization name
    required:
      - uid
      - name
  OrganizationBase:
    type: object
    description: Base organization, returned in search results
    properties:
      uid:
        type: string
        description: Organization unique ID
      name:
        type: string
        description: Organization name
      government:
        type: boolean
        description: Whether it's a government
      intergovernmentalOrganization:
        type: boolean
        description: Whether it's an intergovernmental organization
      researchOrganization:
        type: boolean
        description: Whether it's a research organization
      sportOrganization:
        type: boolean
        description: Whether it's a sport organization
      medicalOrganization:
        type: boolean
        description: Whether it's a medical organization
      militaryOrganization:
        type: boolean
        description: Whether it's a military organization
      militaryUnit:
        type: boolean
        description: Whether it's a military unit
      governmentAgency:
        type: boolean
        description: Whether it's a government agency
      lawEnforcementAgency:
        type: boolean
        description: Whether it's a law enforcement agency
      prisonOrPenalColony:
        type: boolean
        description: Whether it's a prison or penal colony
      mirror:
        type: boolean
        description: Whether this organization is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this location is from alternate reality
    required:
      - uid
      - name
  OrganizationFull:
    type: object
    description: Full organization, returned when queried using UID
    properties:
      uid:
        type: string
        description: Organization unique ID
      name:
        type: string
        description: Organization name
      government:
        type: boolean
        description: Whether it's a government
      intergovernmentalOrganization:
        type: boolean
        description: Whether it's an intergovernmental organization
      researchOrganization:
        type: boolean
        description: Whether it's a research organization
      sportOrganization:
        type: boolean
        description: Whether it's a sport organization
      medicalOrganization:
        type: boolean
        description: Whether it's a medical organization
      militaryOrganization:
        type: boolean
        description: Whether it's a military organization
      militaryUnit:
        type: boolean
        description: Whether it's a military unit
      governmentAgency:
        type: boolean
        description: Whether it's a government agency
      lawEnforcementAgency:
        type: boolean
        description: Whether it's a law enforcement agency
      prisonOrPenalColony:
        type: boolean
        description: Whether it's a prison or penal colony
      mirror:
        type: boolean
        description: Whether this organization is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this organization is from alternate reality
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters belonging to this organization
    required:
      - uid
      - name
  OrganizationBaseResponse:
    type: object
    description: Response object for organizations search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      organizations:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: List of organizations matching given criteria
  OrganizationFullResponse:
    type: object
    description: Response object for single organization query
    properties:
      organization:
        $ref: '#/definitions/OrganizationFull'
        description: Organization, if found
  PerformerHeader:
    type: object
    description: Header performer, embedded in other objects
    properties:
      uid:
        type: string
        description: Performer unique ID
      name:
        type: string
        description: Performer name
    required:
      - uid
      - name
  PerformerBase:
    type: object
    description: Base performer, returned in search results
    properties:
      uid:
        type: string
        description: Performer unique ID
      name:
        type: string
        description: Performer name
      birthName:
        type: string
        description: Performer birth name
      gender:
        $ref: '#/definitions/Gender'
        description: Performer gender
      dateOfBirth:
        type: string
        format: date
        description: Date the performer was born
      placeOfBirth:
        type: string
        description: Place the performer was born
      dateOfDeath:
        type: string
        format: date
        description: Date the performer died
      placeOfDeath:
        type: string
        description: Place the performer died
      animalPerformer:
        type: boolean
        description: Whether it's an animal performer
      disPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Discovery"
      ds9Performer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Deep Space Nine"
      entPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Enterprise"
      filmPerformer:
        type: boolean
        description: Whether it's a performer that appeared in a Star Trek movie
      standInPerformer:
        type: boolean
        description: Whether it's a stand-in performer
      stuntPerformer:
        type: boolean
        description: Whether it's a stunt performer
      tasPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Animated Series"
      tngPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Next Generation"
      tosPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Original Series"
      videoGamePerformer:
        type: boolean
        description: Whether it's a video game performer
      voicePerformer:
        type: boolean
        description: Whether it's a voice performer
      voyPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Voyager"
    required:
      - uid
      - name
  PerformerFull:
    type: object
    description: Full performer, returned when queried using UID
    properties:
      uid:
        type: string
        description: Performer unique ID
      name:
        type: string
        description: Performer name
      birthName:
        type: string
        description: Performer birth name
      gender:
        $ref: '#/definitions/Gender'
        description: Performer gender
      dateOfBirth:
        type: string
        format: date
        description: Date the performer was born
      placeOfBirth:
        type: string
        description: Place the performer was born
      dateOfDeath:
        type: string
        format: date
        description: Date the performer died
      placeOfDeath:
        type: string
        description: Place the performer died
      animalPerformer:
        type: boolean
        description: Whether it's an animal performer
      disPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Discovery"
      ds9Performer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Deep Space Nine"
      entPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Enterprise"
      filmPerformer:
        type: boolean
        description: Whether it's a performer that appeared in a Star Trek movie
      standInPerformer:
        type: boolean
        description: Whether it's a stand-in performer
      stuntPerformer:
        type: boolean
        description: Whether it's a stunt performer
      tasPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Animated Series"
      tngPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Next Generation"
      tosPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Original Series"
      videoGamePerformer:
        type: boolean
        description: Whether it's a video game performer
      voicePerformer:
        type: boolean
        description: Whether it's a voice performer
      voyPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Voyager"
      episodesPerformances:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes in which this person appeared as a performer
      episodesStuntPerformances:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes in which this person appeared as a stunt performer
      episodesStandInPerformances:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes in which this person appeared as a stand-in performer
      moviesPerformances:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies in which this person appeared as a performer
      moviesStuntPerformances:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies in which this person appeared as a stunt performer
      moviesStandInPerformances:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies in which this person appeared as a stand-in performer
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters played by this performer
    required:
      - uid
      - name
  PerformerBaseResponse:
    type: object
    description: Response object for performers search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      performers:
        type: array
        items:
          $ref: '#/definitions/PerformerBase'
        description: List of performers matching given criteria
  PerformerFullResponse:
    type: object
    description: Response object for single performer query
    properties:
      performer:
        $ref: '#/definitions/PerformerFull'
        description: Performer, if found
  PerformerV2Base:
    type: object
    description: Base performer, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Performer unique ID
      name:
        type: string
        description: Performer name
      birthName:
        type: string
        description: Performer birth name
      gender:
        $ref: '#/definitions/Gender'
        description: Performer gender
      dateOfBirth:
        type: string
        format: date
        description: Date the performer was born
      placeOfBirth:
        type: string
        description: Place the performer was born
      dateOfDeath:
        type: string
        format: date
        description: Date the performer died
      placeOfDeath:
        type: string
        description: Place the performer died
      animalPerformer:
        type: boolean
        description: Whether it's an animal performer
      audiobookPerformer:
        type: boolean
        description: Whether it's an audiobook performer
      cutPerformer:
        type: boolean
        description: Whether it's a cut performer
      disPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Discovery"
      ds9Performer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Deep Space Nine"
      entPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Enterprise"
      filmPerformer:
        type: boolean
        description: Whether it's a performer that appeared in a Star Trek movie
      ldPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Lower Decks"
      picPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Picard"
      proPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Prodigy"
      puppeteer:
        type: boolean
        description: Whether it's a puppeteer
      snwPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Strange New Worlds"
      standInPerformer:
        type: boolean
        description: Whether it's a stand-in performer
      stPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Short Treks"
      stuntPerformer:
        type: boolean
        description: Whether it's a stunt performer
      tasPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Animated Series"
      tngPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Next Generation"
      tosPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Original Series"
      videoGamePerformer:
        type: boolean
        description: Whether it's a video game performer
      voicePerformer:
        type: boolean
        description: Whether it's a voice performer
      voyPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Voyager"
    required:
      - uid
      - name
  PerformerV2Full:
    type: object
    description: Full performer, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Performer unique ID
      name:
        type: string
        description: Performer name
      birthName:
        type: string
        description: Performer birth name
      gender:
        $ref: '#/definitions/Gender'
        description: Performer gender
      dateOfBirth:
        type: string
        format: date
        description: Date the performer was born
      placeOfBirth:
        type: string
        description: Place the performer was born
      dateOfDeath:
        type: string
        format: date
        description: Date the performer died
      placeOfDeath:
        type: string
        description: Place the performer died
      animalPerformer:
        type: boolean
        description: Whether it's an animal performer
      audiobookPerformer:
        type: boolean
        description: Whether it's an audiobook performer
      cutPerformer:
        type: boolean
        description: Whether it's a cut performer
      disPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Discovery"
      ds9Performer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Deep Space Nine"
      entPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Enterprise"
      filmPerformer:
        type: boolean
        description: Whether it's a performer that appeared in a Star Trek movie
      ldPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Lower Decks"
      picPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Picard"
      proPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Prodigy"
      puppeteer:
        type: boolean
        description: Whether it's a stand-in puppeteer
      snwPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Strange New Worlds"
      standInPerformer:
        type: boolean
        description: Whether it's a stand-in performer
      stPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Short Treks"
      stuntPerformer:
        type: boolean
        description: Whether it's a stunt performer
      tasPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Animated Series"
      tngPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Next Generation"
      tosPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: The Original Series"
      videoGamePerformer:
        type: boolean
        description: Whether it's a video game performer
      voicePerformer:
        type: boolean
        description: Whether it's a voice performer
      voyPerformer:
        type: boolean
        description: "Whether it's a performer that appeared in Star Trek: Voyager"
      episodesPerformances:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes in which this person appeared as a performer
      episodesStuntPerformances:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes in which this person appeared as a stunt performer
      episodesStandInPerformances:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes in which this person appeared as a stand-in performer
      moviesPerformances:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies in which this person appeared as a performer
      moviesStuntPerformances:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies in which this person appeared as a stunt performer
      moviesStandInPerformances:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies in which this person appeared as a stand-in performer
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters played by this performer
    required:
      - uid
      - name
  PerformerV2BaseResponse:
    type: object
    description: Response object for performers search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      performers:
        type: array
        items:
          $ref: '#/definitions/PerformerV2Base'
        description: List of performers matching given criteria
  PerformerV2FullResponse:
    type: object
    description: Response object for single performer query (V2)
    properties:
      performer:
        $ref: '#/definitions/PerformerV2Full'
        description: Performer, if found
  Platform:
    type: object
    description: Platform of video games
    properties:
      uid:
        type: string
        description: Platform unique ID
      name:
        type: string
        description: Platform name
  ProductionRunUnit:
    type: string
    description: Production run unit
    enum:
      - BOX
      - SET
  Reference:
    type: object
    description: Reference of book, comics, video release, etc.
    properties:
      uid:
        type: string
        description: Reference unique ID
      referenceType:
        $ref: '#/definitions/ReferenceType'
        description: Reference type
      referenceNumber:
        type: string
        description: Reference number
  ReferenceType:
    type: string
    description: Reference type
    enum:
      - ASIN
      - ISBN
      - EAN
      - ISRC
  ResponsePage:
    type: object
    description: Object describing response page
    properties:
      pageNumber:
        type: integer
        format: int32
        description: Zero-based page number
      pageSize:
        type: integer
        format: int32
        description: Page size
      numberOfElements:
        type: integer
        format: int32
        description: Number of elements in page
      totalElements:
        type: integer
        format: int32
        description: Total elements found
      totalPages:
        type: integer
        format: int32
        description: Total pages found
      firstPage:
        type: boolean
        description: Whether it is the first page
      lastPage:
        type: boolean
        description: Whether it is the last page
  ResponseSort:
    type: object
    description: Response sort
    properties:
      clauses:
        type: array
        items:
          $ref: '#/definitions/ResponseSortClause'
        description: List of response sort rules
  ResponseSortClause:
    type: object
    description: Single response sort clause
    properties:
      name:
        type: string
        description: Field name results are sorted by
      direction:
        $ref: '#/definitions/ResponseSortDirection'
        description: Sort direction
      clauseOrder:
        type: integer
        description: Order in which this clause was applied

    required:
      - name
      - direction
      - clauseOrder
  ResponseSortDirection:
    type: string
    description: Sort direction
    enum:
      - ASC
      - DESC
  SeasonHeader:
    type: object
    description: Header season, embedded in other objects
    properties:
      uid:
        type: string
        description: Season unique ID
      title:
        type: string
        description: Season title
    required:
      - uid
      - title
  SeasonBase:
    type: object
    description: Base season, returned in search results
    properties:
      uid:
        type: string
        description: Season unique ID
      title:
        type: string
        description: Season title
      series:
        $ref: '#/definitions/SeriesHeader'
        description: Series this season belongs to
      seasonNumber:
        type: integer
        description: Season number in series
      numberOfEpisodes:
        type: integer
        description: Number of episodes in this season
    required:
      - uid
      - title
  SeasonFull:
    type: object
    description: Full location, returned when queried using UID
    properties:
      uid:
        type: string
        description: Season unique ID
      title:
        type: string
        description: Season title
      series:
        $ref: '#/definitions/SeriesBase'
        description: Series this season belongs to
      seasonNumber:
        type: integer
        description: Season number in series
      numberOfEpisodes:
        type: integer
        description: Number of episodes in this season
      episodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes in this season
    required:
      - uid
      - title
  SeasonBaseResponse:
    type: object
    description: Response object for seasons search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      seasons:
        type: array
        items:
          $ref: '#/definitions/SeasonBase'
        description: List of seasons matching given criteria
  SeasonFullResponse:
    type: object
    description: Response object for single season query
    properties:
      season:
        $ref: '#/definitions/SeasonFull'
        description: Season, if found
  SeriesHeader:
    type: object
    description: Header series, embedded in other objects
    properties:
      uid:
        type: string
        description: Series unique ID
      title:
        type: string
        description: Series title
    required:
      - uid
      - title
  SeriesBase:
    type: object
    description: Base series, returned in search results
    properties:
      uid:
        type: string
        description: Series unique ID
      title:
        type: string
        description: Series title
      abbreviation:
        type: string
        description: Series abbreviation
      productionStartYear:
        type: integer
        description: Year the series production started
      productionEndYear:
        type: integer
        description: Year the series production ended
      originalRunStartDate:
        type: string
        format: date
        description: Date the series originally ran from
      originalRunEndDate:
        type: string
        format: date
        description: Date the series originally ran to
      seasonsCount:
        type: integer
        description: Number of seasons
      episodesCount:
        type: integer
        description: Number of episodes
      featureLengthEpisodesCount:
        type: integer
        description: Number of feature length episodes
      productionCompany:
        $ref: '#/definitions/CompanyHeader'
        description: Company that produced the series
      originalBroadcaster:
        $ref: '#/definitions/CompanyHeader'
        description: Company that originally broadcasted the series
    required:
      - uid
      - title
      - abbreviation
  SeriesFull:
    type: object
    description: Full series, returned when queried using UID
    properties:
      uid:
        type: string
        description: Series unique ID
      title:
        type: string
        description: Series title
      abbreviation:
        type: string
        description: Series abbreviation
      productionStartYear:
        type: integer
        description: Year the series production started
      productionEndYear:
        type: integer
        description: Year the series production ended
      originalRunStartDate:
        type: string
        format: date
        description: Date the series originally ran from
      originalRunEndDate:
        type: string
        format: date
        description: Date the series originally ran to
      seasonsCount:
        type: integer
        description: Number of seasons
      episodesCount:
        type: integer
        description: Number of episodes
      featureLengthEpisodesCount:
        type: integer
        description: Number of feature length episodes
      productionCompany:
        $ref: '#/definitions/CompanyBase'
        description: Company that produced the series
      originalBroadcaster:
        $ref: '#/definitions/CompanyBase'
        description: Company that originally broadcasted the series
      episodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes in the series
      seasons:
        type: array
        items:
          $ref: '#/definitions/SeasonBase'
        description: Seasons in the series
    required:
      - uid
      - title
  SeriesBaseResponse:
    type: object
    description: Response object for series search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      series:
        type: array
        items:
          $ref: '#/definitions/SeriesBase'
        description: List of series matching given criteria
  SeriesFullResponse:
    type: object
    description: Response object for single series query
    properties:
      series:
        $ref: '#/definitions/SeriesFull'
        description: Series, if found
  SoundtrackHeader:
    type: object
    description: Header soundtrack, embedded in other objects
    properties:
      uid:
        type: string
        description: Soundtrack unique ID
      title:
        type: string
        description: Soundtrack title
    required:
      - uid
      - title
  SoundtrackBase:
    type: object
    description: Base soundtrack, returned in search results
    properties:
      uid:
        type: string
        description: Soundtrack unique ID
      title:
        type: string
        description: Soundtrack title
      releaseDate:
        type: string
        format: date
        description: Release date
      length:
        type: integer
        description: Length, in seconds
    required:
      - uid
      - title
  SoundtrackFull:
    type: object
    description: Full soundtrack, returned when queried using UID
    properties:
      uid:
        type: string
        description: Soundtrack unique ID
      title:
        type: string
        description: Soundtrack title
      releaseDate:
        type: string
        format: date
        description: Release date
      length:
        type: integer
        description: Length, in seconds
      labels:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Labels this soundtrack was relesed by
      composers:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Composers
      contributors:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Other musicians that contributed to this soundtrack
      orchestrators:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: Orchestrators
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: References
    required:
      - uid
      - title
  SoundtrackBaseResponse:
    type: object
    description: Response object for soundtracks search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      soundtracks:
        type: array
        items:
          $ref: '#/definitions/SoundtrackBase'
        description: List of soundtracks matching given criteria
  SoundtrackFullResponse:
    type: object
    description: Response object for single soundtrack query
    properties:
      soundtrack:
        $ref: '#/definitions/SoundtrackFull'
        description: Soundtrack, if found
  SpacecraftHeader:
    type: object
    description: Header spacecraft, embedded in other objects
    properties:
      uid:
        type: string
        description: Spacecraft unique ID
      name:
        type: string
        description: Spacecraft name
    required:
      - uid
      - name
  SpacecraftBase:
    type: object
    description: Base spacecraft, returned in search results
    properties:
      uid:
        type: string
        description: Spacecraft unique ID
      name:
        type: string
        description: Spacecraft name
      registry:
        type: string
        description: Spacecraft registry
      status:
        type: string
        description: Status of a spacecraft (in prime reality, if spacecraft was in more than one realities)
      dateStatus:
        type: string
        description: Date the spacecraft status was last known
      spacecraftClass:
        $ref: '#/definitions/SpacecraftClassHeader'
        description: Spacecraft class
      owner:
        $ref: '#/definitions/OrganizationHeader'
        description: Owner
      operator:
        $ref: '#/definitions/OrganizationHeader'
        description: Operator
    required:
      - uid
      - name
  SpacecraftFull:
    type: object
    description: Full spacecraft, returned when queried using UID
    properties:
      uid:
        type: string
        description: Spacecraft unique ID
      name:
        type: string
        description: Spacecraft name
      registry:
        type: string
        description: Spacecraft registry
      status:
        type: string
        description: Status of a spacecraft (in prime reality, if spacecraft was in more than one realities)
      dateStatus:
        type: string
        description: Date the spacecraft status was last known
      spacecraftClass:
        $ref: '#/definitions/SpacecraftClassBase'
        description: Spacecraft class
      owner:
        $ref: '#/definitions/OrganizationBase'
        description: Owner
      operator:
        $ref: '#/definitions/OrganizationBase'
        description: Operator
      spacecraftTypes:
        type: array
        items:
          $ref: '#/definitions/SpacecraftType'
        description: Spacecraft types
    required:
      - uid
      - name
  SpacecraftBaseResponse:
    type: object
    description: Response object for spacecrafts search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      spacecrafts:
        type: array
        items:
          $ref: '#/definitions/SpacecraftBase'
        description: List of spacecrafts matching given criteria
  SpacecraftFullResponse:
    type: object
    description: Response object for single spacecraft query
    properties:
      spacecraft:
        $ref: '#/definitions/SpacecraftFull'
        description: Spacecraft, if found
  SpacecraftV2Base:
    type: object
    description: Base spacecraft, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Spacecraft unique ID
      name:
        type: string
        description: Spacecraft name
      registry:
        type: string
        description: Spacecraft registry
      status:
        type: string
        description: Status of a spacecraft (in prime reality, if spacecraft was in more than one realities)
      dateStatus:
        type: string
        description: Date the spacecraft status was last known
      spacecraftClass:
        $ref: '#/definitions/SpacecraftClassHeader'
        description: Spacecraft class
      owner:
        $ref: '#/definitions/OrganizationHeader'
        description: Owner
      operator:
        $ref: '#/definitions/OrganizationHeader'
        description: Operator
      affiliation:
        $ref: '#/definitions/OrganizationHeader'
        description: Affiliation
    required:
      - uid
      - name
  SpacecraftV2Full:
    type: object
    description: Full spacecraft, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Spacecraft unique ID
      name:
        type: string
        description: Spacecraft name
      registry:
        type: string
        description: Spacecraft registry
      status:
        type: string
        description: Status of a spacecraft (in prime reality, if spacecraft was in more than one realities)
      dateStatus:
        type: string
        description: Date the spacecraft status was last known
      spacecraftClass:
        $ref: '#/definitions/SpacecraftClassV2Base'
        description: Spacecraft class
      owner:
        $ref: '#/definitions/OrganizationBase'
        description: Owner
      operator:
        $ref: '#/definitions/OrganizationBase'
        description: Operator
      affiliation:
        $ref: '#/definitions/OrganizationBase'
        description: Affiliation
      spacecraftTypes:
        type: array
        items:
          $ref: '#/definitions/SpacecraftType'
        description: Spacecraft types
    required:
      - uid
      - name
  SpacecraftV2BaseResponse:
    type: object
    description: Response object for spacecrafts search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      spacecrafts:
        type: array
        items:
          $ref: '#/definitions/SpacecraftV2Base'
        description: List of spacecrafts matching given criteria
  SpacecraftV2FullResponse:
    type: object
    description: Response object for single spacecraft query (V2)
    properties:
      spacecraft:
        $ref: '#/definitions/SpacecraftV2Full'
        description: Spacecraft, if found
  SpacecraftClassHeader:
    type: object
    description: Header spacecraft class, embedded in other objects
    properties:
      uid:
        type: string
        description: Spacecraft class unique ID
      name:
        type: string
        description: Spacecraft class name
    required:
      - uid
      - name
  SpacecraftClassBase:
    type: object
    description: Base spacecraft class, returned in search results
    properties:
      uid:
        type: string
        description: Spacecraft class unique ID
      name:
        type: string
        description: Spacecraft class name
      numberOfDecks:
        type: integer
        description: Number of decks
      warpCapable:
        type: boolean
        description: Whether it's a warp-capable spacecraft class
      alternateReality:
        type: boolean
        description: Whether this spacecraft class is from alternate reality
      activeFrom:
        type: string
        description: Starting period when this spacecraft class was in use
      activeTo:
        type: string
        description: Ending period when this spacecraft class was in use
      species:
        $ref: '#/definitions/SpeciesHeader'
        description: Main species affiliated
      owner:
        $ref: '#/definitions/OrganizationHeader'
        description: Owner
      operator:
        $ref: '#/definitions/OrganizationHeader'
        description: Operator
      affiliation:
        $ref: '#/definitions/OrganizationHeader'
        description: Affiliation
    required:
      - uid
      - name
  SpacecraftClassFull:
    type: object
    description: Full spacecraft class, returned when queried using UID
    properties:
      uid:
        type: string
        description: Spacecraft class unique ID
      name:
        type: string
        description: Spacecraft class name
      numberOfDecks:
        type: integer
        description: Number of decks
      warpCapable:
        type: boolean
        description: Whether it's a warp-capable spacecraft class
      alternateReality:
        type: boolean
        description: Whether this spacecraft class is from alternate reality
      activeFrom:
        type: string
        description: Starting period when this spacecraft class was in use
      activeTo:
        type: string
        description: Ending period when this spacecraft class was in use
      species:
        $ref: '#/definitions/SpeciesHeader'
        description: Main species affiliated
      owner:
        $ref: '#/definitions/OrganizationBase'
        description: Owner
      operator:
        $ref: '#/definitions/OrganizationBase'
        description: Operator
      affiliation:
        $ref: '#/definitions/OrganizationBase'
        description: Affiliation
      spacecraftTypes:
        type: array
        items:
          $ref: '#/definitions/SpacecraftType'
        description: Spacecraft types
      spacecrafts:
        type: array
        items:
          $ref: '#/definitions/SpacecraftBase'
        description: Spacecrafts
    required:
      - uid
      - name
  SpacecraftClassBaseResponse:
    type: object
    description: Response object for spacecraft classes search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      spacecraftClasses:
        type: array
        items:
          $ref: '#/definitions/SpacecraftClassBase'
        description: List of spacecraft classes matching given criteria
  SpacecraftClassFullResponse:
    type: object
    description: Response object for single spacecraft class query
    properties:
      spacecraftClass:
        $ref: '#/definitions/SpacecraftClassFull'
        description: Spacecraft class, if found
  SpacecraftClassV2Base:
    type: object
    description: Base spacecraft class, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Spacecraft class unique ID
      name:
        type: string
        description: Spacecraft class name
      numberOfDecks:
        type: integer
        description: Number of decks
      crew:
        type: string
        description: Crew
      warpCapable:
        type: boolean
        description: Whether it's a warp-capable spacecraft class
      mirror:
        type: boolean
        description: Whether this spacecraft class is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this spacecraft class is from alternate reality
      activeFrom:
        type: string
        description: Starting period when this spacecraft class was in use
      activeTo:
        type: string
        description: Ending period when this spacecraft class was in use
      species:
        $ref: '#/definitions/SpeciesHeader'
        description: Main species affiliated
    required:
      - uid
      - name
  SpacecraftClassV2Full:
    type: object
    description: Full spacecraft class, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Spacecraft class unique ID
      name:
        type: string
        description: Spacecraft class name
      numberOfDecks:
        type: integer
        description: Number of decks
      crew:
        type: string
        description: Crew
      warpCapable:
        type: boolean
        description: Whether it's a warp-capable spacecraft class
      mirror:
        type: boolean
        description: Whether this spacecraft class is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this spacecraft class is from alternate reality
      activeFrom:
        type: string
        description: Starting period when this spacecraft class was in use
      activeTo:
        type: string
        description: Ending period when this spacecraft class was in use
      species:
        $ref: '#/definitions/SpeciesBase'
        description: Main species affiliated
      owners:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Owners
      operators:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Operators
      affiliations:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Affiliations
      spacecraftTypes:
        type: array
        items:
          $ref: '#/definitions/SpacecraftType'
        description: Spacecraft types
      armaments:
        type: array
        items:
          $ref: '#/definitions/WeaponV2Base'
        description: Armaments
      spacecrafts:
        type: array
        items:
          $ref: '#/definitions/SpacecraftV2Base'
        description: Spacecrafts
    required:
      - uid
      - name
  SpacecraftClassV2BaseResponse:
    type: object
    description: Response object for spacecraft classes search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      spacecraftClasses:
        type: array
        items:
          $ref: '#/definitions/SpacecraftClassV2Base'
        description: List of spacecraft classes matching given criteria
  SpacecraftClassV2FullResponse:
    type: object
    description: Response object for single spacecraft class query (V2)
    properties:
      spacecraftClass:
        $ref: '#/definitions/SpacecraftClassV2Full'
        description: Spacecraft class, if found
  SpacecraftClassV3Full:
    type: object
    description: Full spacecraft class, returned when queried using UID (V3)
    properties:
      uid:
        type: string
        description: Spacecraft class unique ID
      name:
        type: string
        description: Spacecraft class name
      numberOfDecks:
        type: integer
        description: Number of decks
      crew:
        type: string
        description: Crew
      warpCapable:
        type: boolean
        description: Whether it's a warp-capable spacecraft class
      mirror:
        type: boolean
        description: Whether this spacecraft class is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this spacecraft class is from alternate reality
      activeFrom:
        type: string
        description: Starting period when this spacecraft class was in use
      activeTo:
        type: string
        description: Ending period when this spacecraft class was in use
      species:
        $ref: '#/definitions/SpeciesBase'
        description: Main species affiliated
      owners:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Owners
      operators:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Operators
      affiliations:
        type: array
        items:
          $ref: '#/definitions/OrganizationBase'
        description: Affiliations
      spacecraftTypes:
        type: array
        items:
          $ref: '#/definitions/SpacecraftType'
        description: Spacecraft types
      armaments:
        type: array
        items:
          $ref: '#/definitions/WeaponV2Base'
        description: Armaments
      defenses:
        type: array
        items:
          $ref: '#/definitions/TechnologyV2Base'
        description: Defenses
      spacecrafts:
        type: array
        items:
          $ref: '#/definitions/SpacecraftV2Base'
        description: Spacecrafts
    required:
      - uid
      - name
  SpacecraftClassV3FullResponse:
    type: object
    description: Response object for single spacecraft class query (V3)
    properties:
      spacecraftClass:
        $ref: '#/definitions/SpacecraftClassV3Full'
        description: Spacecraft class, if found
  SpacecraftType:
    type: object
    description: Spacecraft type
    properties:
      uid:
        type: string
        description: Spacecraft type unique ID
      name:
        type: string
        description: Spacecraft type name
  SpeciesHeader:
    type: object
    description: Header species, embedded in other objects
    properties:
      uid:
        type: string
        description: Species unique ID
      name:
        type: string
        description: Species name
    required:
      - uid
      - name
  SpeciesBase:
    type: object
    description: Base species, returned in search results
    properties:
      uid:
        type: string
        description: Species unique ID
      name:
        type: string
        description: Species name
      homeworld:
        $ref: '#/definitions/AstronomicalObjectHeader'
        description: Homeworld of the species
      quadrant:
        $ref: '#/definitions/AstronomicalObjectHeader'
        description: Quadrant the species originates from
      extinctSpecies:
        type: boolean
        description: Whether it's an extinct species
      warpCapableSpecies:
        type: boolean
        description: Whether it's a warp-capable species
      extraGalacticSpecies:
        type: boolean
        description: Whether it's an extra-galactic species
      humanoidSpecies:
        type: boolean
        description: Whether it's a humanoid species
      reptilianSpecies:
        type: boolean
        description: Whether it's a reptilian species
      nonCorporealSpecies:
        type: boolean
        description: Whether it's a non-corporeal species
      shapeshiftingSpecies:
        type: boolean
        description: Whether it's a shapeshifting species
      spaceborneSpecies:
        type: boolean
        description: Whether it's a spaceborne species
      telepathicSpecies:
        type: boolean
        description: Whether it's a telepathic species
      transDimensionalSpecies:
        type: boolean
        description: Whether it's a trans-dimensional species
      unnamedSpecies:
        type: boolean
        description: Whether it's a unnamed species
      alternateReality:
        type: boolean
        description: Whether this species is from alternate reality
    required:
      - uid
      - name
  SpeciesFull:
    type: object
    description: Full species, returned when queried using UID
    properties:
      uid:
        type: string
        description: Species unique ID
      name:
        type: string
        description: Species name
      homeworld:
        $ref: '#/definitions/AstronomicalObjectBase'
        description: Homeworld of the species
      quadrant:
        $ref: '#/definitions/AstronomicalObjectBase'
        description: Quadrant the species originates from
      extinctSpecies:
        type: boolean
        description: Whether it's an extinct species
      warpCapableSpecies:
        type: boolean
        description: Whether it's a warp-capable species
      extraGalacticSpecies:
        type: boolean
        description: Whether it's an extra-galactic species
      humanoidSpecies:
        type: boolean
        description: Whether it's a humanoid species
      reptilianSpecies:
        type: boolean
        description: Whether it's a reptilian species
      nonCorporealSpecies:
        type: boolean
        description: Whether it's a non-corporeal species
      shapeshiftingSpecies:
        type: boolean
        description: Whether it's a shapeshifting species
      spaceborneSpecies:
        type: boolean
        description: Whether it's a spaceborne species
      telepathicSpecies:
        type: boolean
        description: Whether it's a telepathic species
      transDimensionalSpecies:
        type: boolean
        description: Whether it's a trans-dimensional species
      unnamedSpecies:
        type: boolean
        description: Whether it's a unnamed species
      alternateReality:
        type: boolean
        description: Whether this species is from alternate reality
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters belonging to the species
    required:
      - uid
      - name
  SpeciesBaseResponse:
    type: object
    description: Response object for species search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      species:
        type: array
        items:
          $ref: '#/definitions/SpeciesBase'
        description: List of species matching given criteria
  SpeciesFullResponse:
    type: object
    description: Response object for single species query
    properties:
      species:
        $ref: '#/definitions/SpeciesFull'
        description: Species, if found
  SpeciesV2Base:
    type: object
    description: Base species, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Species unique ID
      name:
        type: string
        description: Species name
      homeworld:
        $ref: '#/definitions/AstronomicalObjectHeader'
        description: Homeworld of the species
      quadrant:
        $ref: '#/definitions/AstronomicalObjectHeader'
        description: Quadrant the species originates from
      extinctSpecies:
        type: boolean
        description: Whether it's an extinct species
      warpCapableSpecies:
        type: boolean
        description: Whether it's a warp-capable species
      extraGalacticSpecies:
        type: boolean
        description: Whether it's an extra-galactic species
      humanoidSpecies:
        type: boolean
        description: Whether it's a humanoid species
      reptilianSpecies:
        type: boolean
        description: Whether it's a reptilian species
      avianSpecies:
        type: boolean
        description: Whether it's an avian species
      nonCorporealSpecies:
        type: boolean
        description: Whether it's a non-corporeal species
      shapeshiftingSpecies:
        type: boolean
        description: Whether it's a shapeshifting species
      spaceborneSpecies:
        type: boolean
        description: Whether it's a spaceborne species
      telepathicSpecies:
        type: boolean
        description: Whether it's a telepathic species
      transDimensionalSpecies:
        type: boolean
        description: Whether it's a trans-dimensional species
      unnamedSpecies:
        type: boolean
        description: Whether it's a unnamed species
      alternateReality:
        type: boolean
        description: Whether this species is from alternate reality
    required:
      - uid
      - name
  SpeciesV2Full:
    type: object
    description: Full species, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Species unique ID
      name:
        type: string
        description: Species name
      homeworld:
        $ref: '#/definitions/AstronomicalObjectV2Base'
        description: Homeworld of the species
      quadrant:
        $ref: '#/definitions/AstronomicalObjectV2Base'
        description: Quadrant the species originates from
      extinctSpecies:
        type: boolean
        description: Whether it's an extinct species
      warpCapableSpecies:
        type: boolean
        description: Whether it's a warp-capable species
      extraGalacticSpecies:
        type: boolean
        description: Whether it's an extra-galactic species
      humanoidSpecies:
        type: boolean
        description: Whether it's a humanoid species
      reptilianSpecies:
        type: boolean
        description: Whether it's a reptilian species
      avianSpecies:
        type: boolean
        description: Whether it's an avian species
      nonCorporealSpecies:
        type: boolean
        description: Whether it's a non-corporeal species
      shapeshiftingSpecies:
        type: boolean
        description: Whether it's a shapeshifting species
      spaceborneSpecies:
        type: boolean
        description: Whether it's a spaceborne species
      telepathicSpecies:
        type: boolean
        description: Whether it's a telepathic species
      transDimensionalSpecies:
        type: boolean
        description: Whether it's a trans-dimensional species
      unnamedSpecies:
        type: boolean
        description: Whether it's a unnamed species
      alternateReality:
        type: boolean
        description: Whether this species is from alternate reality
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters belonging to the species
    required:
      - uid
      - name
  SpeciesV2BaseResponse:
    type: object
    description: Response object for species search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      species:
        type: array
        items:
          $ref: '#/definitions/SpeciesV2Base'
        description: List of species matching given criteria
  SpeciesV2FullResponse:
    type: object
    description: Response object for single species query (V2)
    properties:
      species:
        $ref: '#/definitions/SpeciesV2Full'
        description: Species, if found
  StaffHeader:
    type: object
    description: Header staff, embedded in other objects
    properties:
      uid:
        type: string
        description: Staff unique ID
      name:
        type: string
        description: Staff name
    required:
      - uid
      - name
  StaffBase:
    type: object
    description: Base staff, returned in search results
    properties:
      uid:
        type: string
        description: Staff unique ID
      name:
        type: string
        description: Staff name
      birthName:
        type: string
        description: Staff birth name
      gender:
        $ref: '#/definitions/Gender'
        description: Staff gender
      dateOfBirth:
        type: string
        format: date
        description: Date the staff was born
      placeOfBirth:
        type: string
        description: Place the staff was born
      dateOfDeath:
        type: string
        format: date
        description: Date the staff died
      placeOfDeath:
        type: string
        description: Place the staff died
      artDepartment:
        type: boolean
        description: Whether this person if from art department
      artDirector:
        type: boolean
        description: Whether this person is an art director
      productionDesigner:
        type: boolean
        description: Whether this person is a production designer
      cameraAndElectricalDepartment:
        type: boolean
        description: Whether this person is from camera and electrical department
      cinematographer:
        type: boolean
        description: Whether this person is a cinematographer
      castingDepartment:
        type: boolean
        description: Whether this person is from casting department
      costumeDepartment:
        type: boolean
        description: Whether this person is from costume department
      costumeDesigner:
        type: boolean
        description: Whether this person is a custume designer
      director:
        type: boolean
        description: Whether this person is a director
      assistantOrSecondUnitDirector:
        type: boolean
        description: Whether this person is an assistant or secound unit director director
      exhibitAndAttractionStaff:
        type: boolean
        description: Whether this person is an exhibit and tttraction staff
      filmEditor:
        type: boolean
        description: Whether this person is a film editor
      linguist:
        type: boolean
        description: Whether this person is a linguist
      locationStaff:
        type: boolean
        description: Whether this person is a location staff
      makeupStaff:
        type: boolean
        description: Whether this person is a make-up staff
      musicDepartment:
        type: boolean
        description: Whether this person is from music department
      composer:
        type: boolean
        description: Whether this person is a composer
      personalAssistant:
        type: boolean
        description: Whether this person is a personal assistant
      producer:
        type: boolean
        description: Whether this person is a producer
      productionAssociate:
        type: boolean
        description: Whether this person is a production associate
      productionStaff:
        type: boolean
        description: Whether this person is a production staff
      publicationStaff:
        type: boolean
        description: Whether this person is a publication staff
      scienceConsultant:
        type: boolean
        description: Whether this person is a science consultant
      soundDepartment:
        type: boolean
        description: Whether this person is from sound department
      specialAndVisualEffectsStaff:
        type: boolean
        description: Whether this person is a special and visual effects staff
      author:
        type: boolean
        description: Whether this person is an author
      audioAuthor:
        type: boolean
        description: Whether this person is an audio author
      calendarArtist:
        type: boolean
        description: Whether this person is a calendar artist
      comicArtist:
        type: boolean
        description: Whether this person is a comic artist
      comicAuthor:
        type: boolean
        description: Whether this person is a comic author
      comicColorArtist:
        type: boolean
        description: Whether this person is a comic color artist
      comicInteriorArtist:
        type: boolean
        description: Whether this person is a comic interior artist
      comicInkArtist:
        type: boolean
        description: Whether this person is a comic ink artist
      comicPencilArtist:
        type: boolean
        description: Whether this person is a comic pencil artist
      comicLetterArtist:
        type: boolean
        description: Whether this person is a comic letter artist
      comicStripArtist:
        type: boolean
        description: Whether this person is a comic strip artist
      gameArtist:
        type: boolean
        description: Whether this person is a game artist
      gameAuthor:
        type: boolean
        description: Whether this person is a game author
      novelArtist:
        type: boolean
        description: Whether this person is a novel artist
      novelAuthor:
        type: boolean
        description: Whether this person is a novel author
      referenceArtist:
        type: boolean
        description: Whether this person is a reference artist
      referenceAuthor:
        type: boolean
        description: Whether this person is a reference author
      publicationArtist:
        type: boolean
        description: Whether this person is a publication artist
      publicationDesigner:
        type: boolean
        description: Whether this person is a publication designer
      publicationEditor:
        type: boolean
        description: Whether this person is a publication editor
      publicityArtist:
        type: boolean
        description: Whether this person is a publication artist
      cbsDigitalStaff:
        type: boolean
        description: Whether this person is a part of CBS digital staff
      ilmProductionStaff:
        type: boolean
        description: Whether this person is a part of ILM production staff
      specialFeaturesStaff:
        type: boolean
        description: Whether this person is a special features artist
      storyEditor:
        type: boolean
        description: Whether this person is a story editor
      studioExecutive:
        type: boolean
        description: Whether this person is a studio executive
      stuntDepartment:
        type: boolean
        description: Whether this person is from stunt department
      transportationDepartment:
        type: boolean
        description: Whether this person is from transportation department
      videoGameProductionStaff:
        type: boolean
        description: Whether this person is video game production staff
      writer:
        type: boolean
        description: Whether this person is a writer
    required:
      - uid
      - name
  StaffFull:
    type: object
    description: Full staff, returned when queried using UID
    properties:
      uid:
        type: string
        description: Staff unique ID
      name:
        type: string
        description: Staff name
      birthName:
        type: string
        description: Staff birth name
      gender:
        $ref: '#/definitions/Gender'
        description: Staff gender
      dateOfBirth:
        type: string
        format: date
        description: Date the staff was born
      placeOfBirth:
        type: string
        description: Place the staff was born
      dateOfDeath:
        type: string
        format: date
        description: Date the staff died
      placeOfDeath:
        type: string
        description: Place the staff died
      artDepartment:
        type: boolean
        description: Whether this person is from art department
      artDirector:
        type: boolean
        description: Whether this person is an art director
      productionDesigner:
        type: boolean
        description: Whether this person is a production designer
      cameraAndElectricalDepartment:
        type: boolean
        description: Whether this person is from camera and electrical department
      cinematographer:
        type: boolean
        description: Whether this person is a cinematographer
      castingDepartment:
        type: boolean
        description: Whether this person is from casting department
      costumeDepartment:
        type: boolean
        description: Whether this person is from costume department
      costumeDesigner:
        type: boolean
        description: Whether this person is a custume designer
      director:
        type: boolean
        description: Whether this person is a director
      assistantOrSecondUnitDirector:
        type: boolean
        description: Whether this person is an assistant or secound unit director director
      exhibitAndAttractionStaff:
        type: boolean
        description: Whether this person is an exhibit and attraction staff
      filmEditor:
        type: boolean
        description: Whether this person is a film editor
      linguist:
        type: boolean
        description: Whether this person is a linguist
      locationStaff:
        type: boolean
        description: Whether this person is a location staff
      makeupStaff:
        type: boolean
        description: Whether this person is a make-up staff
      musicDepartment:
        type: boolean
        description: Whether this person is from music department
      composer:
        type: boolean
        description: Whether this person is a composer
      personalAssistant:
        type: boolean
        description: Whether this person is a personal assistant
      producer:
        type: boolean
        description: Whether this person is a producer
      productionAssociate:
        type: boolean
        description: Whether this person is a production associate
      productionStaff:
        type: boolean
        description: Whether this person is a production staff
      publicationStaff:
        type: boolean
        description: Whether this person is a publication staff
      scienceConsultant:
        type: boolean
        description: Whether this person is a science consultant
      soundDepartment:
        type: boolean
        description: Whether this person is from sound department
      specialAndVisualEffectsStaff:
        type: boolean
        description: Whether this person is a special and visual effects staff
      author:
        type: boolean
        description: Whether this person is an author
      audioAuthor:
        type: boolean
        description: Whether this person is an audio author
      calendarArtist:
        type: boolean
        description: Whether this person is a calendar artist
      comicArtist:
        type: boolean
        description: Whether this person is a comic artist
      comicAuthor:
        type: boolean
        description: Whether this person is a comic author
      comicColorArtist:
        type: boolean
        description: Whether this person is a comic color artist
      comicInteriorArtist:
        type: boolean
        description: Whether this person is a comic interior artist
      comicInkArtist:
        type: boolean
        description: Whether this person is a comic ink artist
      comicPencilArtist:
        type: boolean
        description: Whether this person is a comic pencil artist
      comicLetterArtist:
        type: boolean
        description: Whether this person is a comic letter artist
      comicStripArtist:
        type: boolean
        description: Whether this person is a comic strip artist
      gameArtist:
        type: boolean
        description: Whether this person is a game artist
      gameAuthor:
        type: boolean
        description: Whether this person is a game author
      novelArtist:
        type: boolean
        description: Whether this person is a novel artist
      novelAuthor:
        type: boolean
        description: Whether this person is a novel author
      referenceArtist:
        type: boolean
        description: Whether this person is a reference artist
      referenceAuthor:
        type: boolean
        description: Whether this person is a reference author
      publicationArtist:
        type: boolean
        description: Whether this person is a publication artist
      publicationDesigner:
        type: boolean
        description: Whether this person is a publication designer
      publicationEditor:
        type: boolean
        description: Whether this person is a publication editor
      publicityArtist:
        type: boolean
        description: Whether this person is a publicity artist
      cbsDigitalStaff:
        type: boolean
        description: Whether this person is a part of CBS digital staff
      ilmProductionStaff:
        type: boolean
        description: Whether this person is a part of ILM production staff
      specialFeaturesStaff:
        type: boolean
        description: Whether this person is a special features artist
      storyEditor:
        type: boolean
        description: Whether this person is a story editor
      studioExecutive:
        type: boolean
        description: Whether this person is a studio executive
      stuntDepartment:
        type: boolean
        description: Whether this person is from stunt department
      transportationDepartment:
        type: boolean
        description: Whether this person is from transportation department
      videoGameProductionStaff:
        type: boolean
        description: Whether this person is video game production staff
      writer:
        type: boolean
        description: Whether this person is a writer
      writtenEpisodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes written by this person
      teleplayAuthoredEpisodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes to which this person has written teleplay
      storyAuthoredEpisodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes to which this person has written story
      directedEpisodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes directed by this person
      episodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes on which this person worked
      writtenMovies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies written by this person
      screenplayAuthoredMovies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies to which this person has written screenplay
      storyAuthoredMovies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies to which this person has written story
      directedMovies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies directed by this person
      producedMovies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies produced by this person
      movies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies on which this person worked
    required:
      - uid
      - name
  StaffBaseResponse:
    type: object
    description: Response object for staff search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      staff:
        type: array
        items:
          $ref: '#/definitions/StaffBase'
        description: List of staff matching given criteria
  StaffFullResponse:
    type: object
    description: Response object for single staff query
    properties:
      staff:
        $ref: '#/definitions/StaffFull'
        description: Staff, if found
  StaffV2Base:
    type: object
    description: Base staff, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Staff unique ID
      name:
        type: string
        description: Staff name
      birthName:
        type: string
        description: Staff birth name
      gender:
        $ref: '#/definitions/Gender'
        description: Staff gender
      dateOfBirth:
        type: string
        format: date
        description: Date the staff was born
      placeOfBirth:
        type: string
        description: Place the staff was born
      dateOfDeath:
        type: string
        format: date
        description: Date the staff died
      placeOfDeath:
        type: string
        description: Place the staff died
      artDepartment:
        type: boolean
        description: Whether this person if from art department
      artDirector:
        type: boolean
        description: Whether this person is an art director
      productionDesigner:
        type: boolean
        description: Whether this person is a production designer
      cameraAndElectricalDepartment:
        type: boolean
        description: Whether this person is from camera and electrical department
      cinematographer:
        type: boolean
        description: Whether this person is a cinematographer
      castingDepartment:
        type: boolean
        description: Whether this person is from casting department
      costumeDepartment:
        type: boolean
        description: Whether this person is from costume department
      costumeDesigner:
        type: boolean
        description: Whether this person is a custume designer
      director:
        type: boolean
        description: Whether this person is a director
      assistantOrSecondUnitDirector:
        type: boolean
        description: Whether this person is an assistant or secound unit director director
      exhibitAndAttractionStaff:
        type: boolean
        description: Whether this person is an exhibit and attraction staff
      filmEditor:
        type: boolean
        description: Whether this person is a film editor
      filmationProductionStaff:
        type: boolean
        description: Whether this person is a part of Filmation production staff
      linguist:
        type: boolean
        description: Whether this person is a linguist
      locationStaff:
        type: boolean
        description: Whether this person is a location staff
      makeupStaff:
        type: boolean
        description: Whether this person is a make-up staff
      merchandiseStaff:
        type: boolean
        description: Whether this person is a merchandise staff
      musicDepartment:
        type: boolean
        description: Whether this person is from music department
      composer:
        type: boolean
        description: Whether this person is a composer
      personalAssistant:
        type: boolean
        description: Whether this person is a personal assistant
      producer:
        type: boolean
        description: Whether this person is a producer
      productionAssociate:
        type: boolean
        description: Whether this person is a production associate
      productionStaff:
        type: boolean
        description: Whether this person is a production staff
      publicationStaff:
        type: boolean
        description: Whether this person is a publication staff
      scienceConsultant:
        type: boolean
        description: Whether this person is a science consultant
      soundDepartment:
        type: boolean
        description: Whether this person is from sound department
      specialAndVisualEffectsStaff:
        type: boolean
        description: Whether this person is a special and visual effects staff
      author:
        type: boolean
        description: Whether this person is an author
      audioAuthor:
        type: boolean
        description: Whether this person is an audio author
      calendarArtist:
        type: boolean
        description: Whether this person is a calendar artist
      comicArtist:
        type: boolean
        description: Whether this person is a comic artist
      comicAuthor:
        type: boolean
        description: Whether this person is a comic author
      comicColorArtist:
        type: boolean
        description: Whether this person is a comic color artist
      comicCoverArtist:
        type: boolean
        description: Whether this person is a comic cover artist
      comicInteriorArtist:
        type: boolean
        description: Whether this person is a comic interior artist
      comicInkArtist:
        type: boolean
        description: Whether this person is a comic ink artist
      comicPencilArtist:
        type: boolean
        description: Whether this person is a comic pencil artist
      comicLetterArtist:
        type: boolean
        description: Whether this person is a comic letter artist
      comicStripArtist:
        type: boolean
        description: Whether this person is a comic strip artist
      gameArtist:
        type: boolean
        description: Whether this person is a game artist
      gameAuthor:
        type: boolean
        description: Whether this person is a game author
      novelArtist:
        type: boolean
        description: Whether this person is a novel artist
      novelAuthor:
        type: boolean
        description: Whether this person is a novel author
      referenceArtist:
        type: boolean
        description: Whether this person is a reference artist
      referenceAuthor:
        type: boolean
        description: Whether this person is a reference author
      publicationArtist:
        type: boolean
        description: Whether this person is a publication artist
      publicationDesigner:
        type: boolean
        description: Whether this person is a publication designer
      publicationEditor:
        type: boolean
        description: Whether this person is a publication editor
      publicityArtist:
        type: boolean
        description: Whether this person is a publication artist
      cbsDigitalStaff:
        type: boolean
        description: Whether this person is a part of CBS digital staff
      ilmProductionStaff:
        type: boolean
        description: Whether this person is a part of ILM production staff
      specialFeaturesStaff:
        type: boolean
        description: Whether this person is a special features artist
      storyEditor:
        type: boolean
        description: Whether this person is a story editor
      studioExecutive:
        type: boolean
        description: Whether this person is a studio executive
      stuntDepartment:
        type: boolean
        description: Whether this person is from stunt department
      transportationDepartment:
        type: boolean
        description: Whether this person is from transportation department
      videoGameProductionStaff:
        type: boolean
        description: Whether this person is video game production staff
      writer:
        type: boolean
        description: Whether this person is a writer
    required:
      - uid
      - name
  StaffV2Full:
    type: object
    description: Full staff, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Staff unique ID
      name:
        type: string
        description: Staff name
      birthName:
        type: string
        description: Staff birth name
      gender:
        $ref: '#/definitions/Gender'
        description: Staff gender
      dateOfBirth:
        type: string
        format: date
        description: Date the staff was born
      placeOfBirth:
        type: string
        description: Place the staff was born
      dateOfDeath:
        type: string
        format: date
        description: Date the staff died
      placeOfDeath:
        type: string
        description: Place the staff died
      artDepartment:
        type: boolean
        description: Whether this person if from art department
      artDirector:
        type: boolean
        description: Whether this person is an art director
      productionDesigner:
        type: boolean
        description: Whether this person is a production designer
      cameraAndElectricalDepartment:
        type: boolean
        description: Whether this person is from camera and electrical department
      cinematographer:
        type: boolean
        description: Whether this person is a cinematographer
      castingDepartment:
        type: boolean
        description: Whether this person is from casting department
      costumeDepartment:
        type: boolean
        description: Whether this person is from costume department
      costumeDesigner:
        type: boolean
        description: Whether this person is a custume designer
      director:
        type: boolean
        description: Whether this person is a director
      assistantOrSecondUnitDirector:
        type: boolean
        description: Whether this person is an assistant or secound unit director director
      exhibitAndAttractionStaff:
        type: boolean
        description: Whether this person is an exhibit and attraction staff
      filmEditor:
        type: boolean
        description: Whether this person is a film editor
      filmationProductionStaff:
        type: boolean
        description: Whether this person is a part of Filmation production staff
      linguist:
        type: boolean
        description: Whether this person is a linguist
      locationStaff:
        type: boolean
        description: Whether this person is a location staff
      makeupStaff:
        type: boolean
        description: Whether this person is a make-up staff
      merchandiseStaff:
        type: boolean
        description: Whether this person is a merchandise staff
      musicDepartment:
        type: boolean
        description: Whether this person is from music department
      composer:
        type: boolean
        description: Whether this person is a composer
      personalAssistant:
        type: boolean
        description: Whether this person is a personal assistant
      producer:
        type: boolean
        description: Whether this person is a producer
      productionAssociate:
        type: boolean
        description: Whether this person is a production associate
      productionStaff:
        type: boolean
        description: Whether this person is a production staff
      publicationStaff:
        type: boolean
        description: Whether this person is a publication staff
      scienceConsultant:
        type: boolean
        description: Whether this person is a science consultant
      soundDepartment:
        type: boolean
        description: Whether this person is from sound department
      specialAndVisualEffectsStaff:
        type: boolean
        description: Whether this person is a special and visual effects staff
      author:
        type: boolean
        description: Whether this person is an author
      audioAuthor:
        type: boolean
        description: Whether this person is an audio author
      calendarArtist:
        type: boolean
        description: Whether this person is a calendar artist
      comicArtist:
        type: boolean
        description: Whether this person is a comic artist
      comicAuthor:
        type: boolean
        description: Whether this person is a comic author
      comicColorArtist:
        type: boolean
        description: Whether this person is a comic color artist
      comicCoverArtist:
        type: boolean
        description: Whether this person is a comic cover artist
      comicInteriorArtist:
        type: boolean
        description: Whether this person is a comic interior artist
      comicInkArtist:
        type: boolean
        description: Whether this person is a comic ink artist
      comicPencilArtist:
        type: boolean
        description: Whether this person is a comic pencil artist
      comicLetterArtist:
        type: boolean
        description: Whether this person is a comic letter artist
      comicStripArtist:
        type: boolean
        description: Whether this person is a comic strip artist
      gameArtist:
        type: boolean
        description: Whether this person is a game artist
      gameAuthor:
        type: boolean
        description: Whether this person is a game author
      novelArtist:
        type: boolean
        description: Whether this person is a novel artist
      novelAuthor:
        type: boolean
        description: Whether this person is a novel author
      referenceArtist:
        type: boolean
        description: Whether this person is a reference artist
      referenceAuthor:
        type: boolean
        description: Whether this person is a reference author
      publicationArtist:
        type: boolean
        description: Whether this person is a publication artist
      publicationDesigner:
        type: boolean
        description: Whether this person is a publication designer
      publicationEditor:
        type: boolean
        description: Whether this person is a publication editor
      publicityArtist:
        type: boolean
        description: Whether this person is a publication artist
      cbsDigitalStaff:
        type: boolean
        description: Whether this person is a part of CBS digital staff
      ilmProductionStaff:
        type: boolean
        description: Whether this person is a part of ILM production staff
      specialFeaturesStaff:
        type: boolean
        description: Whether this person is a special features artist
      storyEditor:
        type: boolean
        description: Whether this person is a story editor
      studioExecutive:
        type: boolean
        description: Whether this person is a studio executive
      stuntDepartment:
        type: boolean
        description: Whether this person is from stunt department
      transportationDepartment:
        type: boolean
        description: Whether this person is from transportation department
      videoGameProductionStaff:
        type: boolean
        description: Whether this person is video game production staff
      writer:
        type: boolean
        description: Whether this person is a writer
      writtenEpisodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes written by this person
      teleplayAuthoredEpisodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes to which this person has written teleplay
      storyAuthoredEpisodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes to which this person has written story
      directedEpisodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes directed by this person
      episodes:
        type: array
        items:
          $ref: '#/definitions/EpisodeBase'
        description: Episodes on which this person worked
      writtenMovies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies written by this person
      screenplayAuthoredMovies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies to which this person has written screenplay
      storyAuthoredMovies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies to which this person has written story
      directedMovies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies directed by this person
      producedMovies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies produced by this person
      movies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies on which this person worked
    required:
      - uid
      - name
  StaffV2BaseResponse:
    type: object
    description: Response object for staff search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      staff:
        type: array
        items:
          $ref: '#/definitions/StaffV2Base'
        description: List of staff matching given criteria
  StaffV2FullResponse:
    type: object
    description: Response object for single staff query (V2)
    properties:
      staff:
        $ref: '#/definitions/StaffV2Full'
        description: Staff, if found
  TechnologyHeader:
    type: object
    description: Header technology, embedded in other objects
    properties:
      uid:
        type: string
        description: Technology unique ID
      name:
        type: string
        description: Technology name
    required:
      - uid
      - name
  TechnologyBase:
    type: object
    description: Base technology, returned in search results
    properties:
      uid:
        type: string
        description: Technology unique ID
      name:
        type: string
        description: Technology name
      borgTechnology:
        type: boolean
        description: Whether it's a Borg technology
      borgComponent:
        type: boolean
        description: Whether it's a Borg component
      communicationsTechnology:
        type: boolean
        description: Whether it's a communications technology
      computerTechnology:
        type: boolean
        description: Whether it's a computer technology
      computerProgramming:
        type: boolean
        description: Whether it's a technology related to computer programming
      subroutine:
        type: boolean
        description: Whether it's a subroutine
      database:
        type: boolean
        description: Whether it's a database
      energyTechnology:
        type: boolean
        description: Whether it's a energy technology
      fictionalTechnology:
        type: boolean
        description: Whether it's a fictional technology
      holographicTechnology:
        type: boolean
        description: Whether it's a holographic technology
      identificationTechnology:
        type: boolean
        description: Whether it's a identification technology
      lifeSupportTechnology:
        type: boolean
        description: Whether it's a life support technology
      sensorTechnology:
        type: boolean
        description: Whether it's a sensor technology
      shieldTechnology:
        type: boolean
        description: Whether it's a shield technology
      tool:
        type: boolean
        description: Whether it's a tool
      culinaryTool:
        type: boolean
        description: Whether it's a culinary tool
      engineeringTool:
        type: boolean
        description: Whether it's a engineering tool
      householdTool:
        type: boolean
        description: Whether it's a household tool
      medicalEquipment:
        type: boolean
        description: Whether it's a medical equipment
      transporterTechnology:
        type: boolean
        description: Whether it's a transporter technology
    required:
      - uid
      - name
  TechnologyFull:
    type: object
    description: Full technology, returned when queried using UID
    properties:
      uid:
        type: string
        description: Technology unique ID
      name:
        type: string
        description: Technology name
      borgTechnology:
        type: boolean
        description: Whether it's a Borg technology
      borgComponent:
        type: boolean
        description: Whether it's a Borg component
      communicationsTechnology:
        type: boolean
        description: Whether it's a communications technology
      computerTechnology:
        type: boolean
        description: Whether it's a computer technology
      computerProgramming:
        type: boolean
        description: Whether it's a technology related to computer programming
      subroutine:
        type: boolean
        description: Whether it's a subroutine
      database:
        type: boolean
        description: Whether it's a database
      energyTechnology:
        type: boolean
        description: Whether it's a energy technology
      fictionalTechnology:
        type: boolean
        description: Whether it's a fictional technology
      holographicTechnology:
        type: boolean
        description: Whether it's a holographic technology
      identificationTechnology:
        type: boolean
        description: Whether it's a identification technology
      lifeSupportTechnology:
        type: boolean
        description: Whether it's a life support technology
      sensorTechnology:
        type: boolean
        description: Whether it's a sensor technology
      shieldTechnology:
        type: boolean
        description: Whether it's a shield technology
      tool:
        type: boolean
        description: Whether it's a tool
      culinaryTool:
        type: boolean
        description: Whether it's a culinary tool
      engineeringTool:
        type: boolean
        description: Whether it's a engineering tool
      householdTool:
        type: boolean
        description: Whether it's a household tool
      medicalEquipment:
        type: boolean
        description: Whether it's a medical equipment
      transporterTechnology:
        type: boolean
        description: Whether it's a transporter technology
    required:
      - uid
      - name
  TechnologyBaseResponse:
    type: object
    description: Response object for technology search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      technology:
        type: array
        items:
          $ref: '#/definitions/TechnologyBase'
        description: List of technology matching given criteria
  TechnologyFullResponse:
    type: object
    description: Response object for single technology query
    properties:
      technology:
        $ref: '#/definitions/TechnologyFull'
        description: Technology, if found
  TechnologyV2Base:
    type: object
    description: Base technology, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Technology unique ID
      name:
        type: string
        description: Technology name
      borgTechnology:
        type: boolean
        description: Whether it's a Borg technology
      borgComponent:
        type: boolean
        description: Whether it's a Borg component
      communicationsTechnology:
        type: boolean
        description: Whether it's a communications technology
      computerTechnology:
        type: boolean
        description: Whether it's a computer technology
      computerProgramming:
        type: boolean
        description: Whether it's a technology related to computer programming
      subroutine:
        type: boolean
        description: Whether it's a subroutine
      database:
        type: boolean
        description: Whether it's a database
      energyTechnology:
        type: boolean
        description: Whether it's a energy technology
      fictionalTechnology:
        type: boolean
        description: Whether it's a fictional technology
      holographicTechnology:
        type: boolean
        description: Whether it's a holographic technology
      identificationTechnology:
        type: boolean
        description: Whether it's a identification technology
      lifeSupportTechnology:
        type: boolean
        description: Whether it's a life support technology
      sensorTechnology:
        type: boolean
        description: Whether it's a sensor technology
      shieldTechnology:
        type: boolean
        description: Whether it's a shield technology
      securityTechnology:
        type: boolean
        description: Whether it's a security technology
      propulsionTechnology:
        type: boolean
        description: Whether it's a propulsion technology
      spacecraftComponent:
        type: boolean
        description: Whether it's a spacecraft component
      warpTechnology:
        type: boolean
        description: Whether it's a warp technology
      transwarpTechnology:
        type: boolean
        description: Whether it's a transwarp technology
      timeTravelTechnology:
        type: boolean
        description: Whether it's a time travel technology
      militaryTechnology:
        type: boolean
        description: Whether it's a military technology
      victualTechnology:
        type: boolean
        description: Whether it's a victual technology
      tool:
        type: boolean
        description: Whether it's a tool
      culinaryTool:
        type: boolean
        description: Whether it's a culinary tool
      engineeringTool:
        type: boolean
        description: Whether it's a engineering tool
      householdTool:
        type: boolean
        description: Whether it's a household tool
      medicalEquipment:
        type: boolean
        description: Whether it's a medical equipment
      transporterTechnology:
        type: boolean
        description: Whether it's a transporter technology
      transportationTechnology:
        type: boolean
        description: Whether it's a transportation technology
      weaponComponent:
        type: boolean
        description: Whether it's a weapon component
      artificialLifeformComponent:
        type: boolean
        description: Whether it's an artificial lifeform component
    required:
      - uid
      - name
  TechnologyV2Full:
    type: object
    description: Full technology, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Technology unique ID
      name:
        type: string
        description: Technology name
      borgTechnology:
        type: boolean
        description: Whether it's a Borg technology
      borgComponent:
        type: boolean
        description: Whether it's a Borg component
      communicationsTechnology:
        type: boolean
        description: Whether it's a communications technology
      computerTechnology:
        type: boolean
        description: Whether it's a computer technology
      computerProgramming:
        type: boolean
        description: Whether it's a technology related to computer programming
      subroutine:
        type: boolean
        description: Whether it's a subroutine
      database:
        type: boolean
        description: Whether it's a database
      energyTechnology:
        type: boolean
        description: Whether it's a energy technology
      fictionalTechnology:
        type: boolean
        description: Whether it's a fictional technology
      holographicTechnology:
        type: boolean
        description: Whether it's a holographic technology
      identificationTechnology:
        type: boolean
        description: Whether it's a identification technology
      lifeSupportTechnology:
        type: boolean
        description: Whether it's a life support technology
      sensorTechnology:
        type: boolean
        description: Whether it's a sensor technology
      shieldTechnology:
        type: boolean
        description: Whether it's a shield technology
      securityTechnology:
        type: boolean
        description: Whether it's a security technology
      propulsionTechnology:
        type: boolean
        description: Whether it's a propulsion technology
      spacecraftComponent:
        type: boolean
        description: Whether it's a spacecraft component
      warpTechnology:
        type: boolean
        description: Whether it's a warp technology
      transwarpTechnology:
        type: boolean
        description: Whether it's a transwarp technology
      timeTravelTechnology:
        type: boolean
        description: Whether it's a time travel technology
      militaryTechnology:
        type: boolean
        description: Whether it's a military technology
      victualTechnology:
        type: boolean
        description: Whether it's a victual technology
      tool:
        type: boolean
        description: Whether it's a tool
      culinaryTool:
        type: boolean
        description: Whether it's a culinary tool
      engineeringTool:
        type: boolean
        description: Whether it's a engineering tool
      householdTool:
        type: boolean
        description: Whether it's a household tool
      medicalEquipment:
        type: boolean
        description: Whether it's a medical equipment
      transporterTechnology:
        type: boolean
        description: Whether it's a transporter technology
      transportationTechnology:
        type: boolean
        description: Whether it's a transportation technology
      weaponComponent:
        type: boolean
        description: Whether it's a weapon component
      artificialLifeformComponent:
        type: boolean
        description: Whether it's an artificial lifeform component
    required:
      - uid
      - name
  TechnologyV2BaseResponse:
    type: object
    description: Response object for technology search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      technology:
        type: array
        items:
          $ref: '#/definitions/TechnologyV2Base'
        description: List of technology matching given criteria
  TechnologyV2FullResponse:
    type: object
    description: Response object for single technology query (V2)
    properties:
      technology:
        $ref: '#/definitions/TechnologyV2Full'
        description: Technology, if found
  TitleHeader:
    type: object
    description: Header title, embedded in other objects
    properties:
      uid:
        type: string
        description: Title unique ID
      name:
        type: string
        description: Title name
    required:
      - uid
      - name
  TitleBase:
    type: object
    description: Base title, returned in search results
    properties:
      uid:
        type: string
        description: Title unique ID
      name:
        type: string
        description: Title name
      militaryRank:
        type: boolean
        description: Whether it's a military rank
      fleetRank:
        type: boolean
        description: Whether it's a fleet rank
      religiousTitle:
        type: boolean
        description: Whether it's a religious title
      position:
        type: boolean
        description: Whether it's a position
      mirror:
        type: boolean
        description: Whether this title is from mirror universe
    required:
      - uid
      - name
  TitleFull:
    type: object
    description: Full title, returned when queried using UID
    properties:
      uid:
        type: string
        description: Title unique ID
      name:
        type: string
        description: Title name
      militaryRank:
        type: boolean
        description: Whether it's a military rank
      fleetRank:
        type: boolean
        description: Whether it's a fleet rank
      religiousTitle:
        type: boolean
        description: Whether it's a religious title
      position:
        type: boolean
        description: Whether it's a position
      mirror:
        type: boolean
        description: Whether this title is from mirror universe
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters that holds this title
    required:
      - uid
      - name
  TitleBaseResponse:
    type: object
    description: Response object for titles search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      titles:
        type: array
        items:
          $ref: '#/definitions/TitleBase'
        description: List of titles matching given criteria
  TitleFullResponse:
    type: object
    description: Response object for single title query
    properties:
      title:
        $ref: '#/definitions/TitleFull'
        description: Title, if found
  TitleV2Base:
    type: object
    description: Base title, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Title unique ID
      name:
        type: string
        description: Title name
      militaryRank:
        type: boolean
        description: Whether it's a military rank
      fleetRank:
        type: boolean
        description: Whether it's a fleet rank
      religiousTitle:
        type: boolean
        description: Whether it's a religious title
      educationTitle:
        type: boolean
        description: Whether it's a education title
      mirror:
        type: boolean
        description: Whether this title is from mirror universe
    required:
      - uid
      - name
  TitleV2Full:
    type: object
    description: Full title, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Title unique ID
      name:
        type: string
        description: Title name
      militaryRank:
        type: boolean
        description: Whether it's a military rank
      fleetRank:
        type: boolean
        description: Whether it's a fleet rank
      religiousTitle:
        type: boolean
        description: Whether it's a religious title
      educationTitle:
        type: boolean
        description: Whether it's a education title
      mirror:
        type: boolean
        description: Whether this title is from mirror universe
      characters:
        type: array
        items:
          $ref: '#/definitions/CharacterBase'
        description: Characters that holds this title
    required:
      - uid
      - name
  TitleV2BaseResponse:
    type: object
    description: Response object for titles search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      titles:
        type: array
        items:
          $ref: '#/definitions/TitleV2Base'
        description: List of titles matching given criteria
  TitleV2FullResponse:
    type: object
    description: Response object for single title query (V2)
    properties:
      title:
        $ref: '#/definitions/TitleV2Full'
        description: Title, if found
  TradingCardHeader:
    type: object
    description: Header trading card, embedded in other objects
    properties:
      uid:
        type: string
        description: Trading card unique ID
      name:
        type: string
        description: Trading card name
    required:
      - uid
      - name
  TradingCardBase:
    type: object
    description: Base trading card, returned in search results
    properties:
      uid:
        type: string
        description: Trading card unique ID
      name:
        type: string
        description: Trading card name
      number:
        type: string
        description: Trading card number
      releaseYear:
        type: integer
        description: Release year, if set was releases over multiple years
      productionRun:
        type: integer
        description: Production run, if different from trading card set production run
      tradingCardSet:
        $ref: '#/definitions/TradingCardSetHeader'
        description: Trading card set this card belongs to
      tradingCardDeck:
        $ref: '#/definitions/TradingCardDeckHeader'
        description: Trading card deck this card belongs to
    required:
      - uid
      - name
  TradingCardFull:
    type: object
    description: Full trading card, returned when queried using UID
    properties:
      uid:
        type: string
        description: Trading card unique ID
      name:
        type: string
        description: Trading card name
      tradingCardSet:
        $ref: '#/definitions/TradingCardSetBase'
        description: Trading card set this card belongs to
      tradingCardDeck:
        $ref: '#/definitions/TradingCardDeckBase'
        description: Trading card deck this card belongs to
      number:
        type: string
        description: Trading card number
      releaseYear:
        type: integer
        description: Release year, if set was releases over multiple years
      productionRun:
        type: integer
        description: Production run, if different from trading card set production run
    required:
      - uid
      - name
  TradingCardBaseResponse:
    type: object
    description: Response object for trading cards search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      tradingCards:
        type: array
        items:
          $ref: '#/definitions/TradingCardBase'
        description: List of trading cards matching given criteria
  TradingCardFullResponse:
    type: object
    description: Response object for single trading card query
    properties:
      tradingCard:
        $ref: '#/definitions/TradingCardFull'
        description: Trading card, if found
  TradingCardDeckHeader:
    type: object
    description: Header trading card deck, embedded in other objects
    properties:
      uid:
        type: string
        description: Trading card deck unique ID
      name:
        type: string
        description: Trading card deck name
    required:
      - uid
      - name
  TradingCardDeckBase:
    type: object
    description: Base trading card deck, returned in search results
    properties:
      uid:
        type: string
        description: Trading card deck unique ID
      name:
        type: string
        description: Trading card deck name
      frequency:
        type: string
        description: "Frequency with which this deck occur in it's set"
      tradingCardSet:
        $ref: '#/definitions/TradingCardSetHeader'
        description: Trading card set this deck belongs to
    required:
      - uid
      - name
  TradingCardDeckFull:
    type: object
    description: Full trading card deck, returned when queried using UID
    properties:
      uid:
        type: string
        description: Trading card deck unique ID
      name:
        type: string
        description: Trading card deck name
      frequency:
        type: string
        description: "Frequency with which this deck occur in it's set"
      tradingCardSet:
        $ref: '#/definitions/TradingCardSetHeader'
        description: Trading card set this deck belongs to
      tradingCards:
        type: array
        items:
          $ref: '#/definitions/TradingCardBase'
        description: Trading cards in this deck
    required:
      - uid
      - name
  TradingCardDeckBaseResponse:
    type: object
    description: Response object for trading card decks search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      tradingCardDecks:
        type: array
        items:
          $ref: '#/definitions/TradingCardDeckBase'
        description: List of trading card decks matching given criteria
  TradingCardDeckFullResponse:
    type: object
    description: Response object for single trading card deck query
    properties:
      tradingCardDeck:
        $ref: '#/definitions/TradingCardDeckFull'
        description: Trading card deck, if found
  TradingCardSetHeader:
    type: object
    description: Header trading card set, embedded in other objects
    properties:
      uid:
        type: string
        description: Trading card set unique ID
      name:
        type: string
        description: Trading card set name
    required:
      - uid
      - name
  TradingCardSetBase:
    type: object
    description: Base trading card set, returned in search results
    properties:
      uid:
        type: string
        description: Trading card set unique ID
      name:
        type: string
        description: Trading card set name
      releaseYear:
        type: integer
        description: Release year
      releaseMonth:
        type: integer
        description: Release month
      releaseDay:
        type: integer
        description: Release day
      cardsPerPack:
        type: integer
        description: Cards per deck
      packsPerBox:
        type: integer
        description: Packs per box
      boxesPerCase:
        type: integer
        description: Boxes per case
      productionRun:
        type: integer
        description: Production run
      productionRunUnit:
        $ref: '#/definitions/ProductionRunUnit'
        description: Production run unit
      cardWidth:
        type: number
        format: double
        description: Card width, in inches
      cardHeight:
        type: number
        format: double
        description: Card height, in inches
    required:
      - uid
      - name
  TradingCardSetFull:
    type: object
    description: Full trading card set, returned when queried using UID
    properties:
      uid:
        type: string
        description: Trading card set unique ID
      name:
        type: string
        description: Trading card set name
      releaseYear:
        type: integer
        description: Release year
      releaseMonth:
        type: integer
        description: Release month
      releaseDay:
        type: integer
        description: Release day
      cardsPerPack:
        type: integer
        description: Cards per deck
      packsPerBox:
        type: integer
        description: Packs per box
      boxesPerCase:
        type: integer
        description: Boxes per case
      productionRun:
        type: integer
        description: Production run
      productionRunUnit:
        $ref: '#/definitions/ProductionRunUnit'
        description: Production run unit
      cardWidth:
        type: number
        format: double
        description: Card width, in inches
      cardHeight:
        type: number
        format: double
        description: Card height, in inches
      manufacturers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Manufacturers
      tradingCardDecks:
        type: array
        items:
          $ref: '#/definitions/TradingCardDeckBase'
        description: Trading card decks in this set
      tradingCards:
        type: array
        items:
          $ref: '#/definitions/TradingCardBase'
        description: Trading cards in this set
      countriesOfOrigin:
        type: array
        items:
          $ref: '#/definitions/Country'
        description: Countries of origin
    required:
      - uid
      - name
  TradingCardSetBaseResponse:
    type: object
    description: Response object for trading card sets search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      tradingCardSets:
        type: array
        items:
          $ref: '#/definitions/TradingCardSetBase'
        description: List of trading card sets matching given criteria
  TradingCardSetFullResponse:
    type: object
    description: Response object for single trading card set query
    properties:
      tradingCardSet:
        $ref: '#/definitions/TradingCardSetFull'
        description: Trading card set, if found
  VideoGameHeader:
    type: object
    description: Header video game, embedded in other objects
    properties:
      uid:
        type: string
        description: Video game unique ID
      title:
        type: string
        description: Video game title
    required:
      - uid
      - title
  VideoGameBase:
    type: object
    description: Base video game, returned in search results
    properties:
      uid:
        type: string
        description: Video game unique ID
      title:
        type: string
        description: Video game title
      releaseDate:
        type: string
        format: date
        description: Release date
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of video game story
      stardateTo:
        type: number
        format: float
        description: Ending stardate of video game story
      yearFrom:
        type: integer
        description: Starting year of video game story
      yearTo:
        type: integer
        description: Ending year of video game story
      systemRequirements:
        type: string
        description: System requirements
    required:
      - uid
      - title
  VideoGameFull:
    type: object
    description: Full video game, returned when queried using UID
    properties:
      uid:
        type: string
        description: Video game unique ID
      title:
        type: string
        description: Video game title
      releaseDate:
        type: string
        format: date
        description: Release date
      stardateFrom:
        type: number
        format: float
        description: Starting stardate of video game story
      stardateTo:
        type: number
        format: float
        description: Ending stardate of video game story
      yearFrom:
        type: integer
        description: Starting year of video game story
      yearTo:
        type: integer
        description: Ending year of video game story
      systemRequirements:
        type: string
        description: System requirements
      publishers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Publishers
      developers:
        type: array
        items:
          $ref: '#/definitions/CompanyBase'
        description: Developers
      platforms:
        type: array
        items:
          $ref: '#/definitions/Platform'
        description: Platforms
      genres:
        type: array
        items:
          $ref: '#/definitions/Genre'
        description: Genres
      ratings:
        type: array
        items:
          $ref: '#/definitions/ContentRating'
        description: Ratings
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: References
    required:
      - uid
      - title
  VideoGameBaseResponse:
    type: object
    description: Response object for video games search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      videoGames:
        type: array
        items:
          $ref: '#/definitions/VideoGameBase'
        description: List of video games matching given criteria
  VideoGameFullResponse:
    type: object
    description: Response object for single video game query
    properties:
      videoGame:
        $ref: '#/definitions/VideoGameFull'
        description: Video game, if found
  VideoReleaseHeader:
    type: object
    description: Header video release, embedded in other objects
    properties:
      uid:
        type: string
        description: Video release unique ID
      title:
        type: string
        description: Video release title
    required:
      - uid
      - title
  VideoReleaseBase:
    type: object
    description: Base video release, returned in search results
    properties:
      uid:
        type: string
        description: Video release unique ID
      title:
        type: string
        description: Video release title
      series:
        $ref: '#/definitions/SeriesHeader'
        description: Series this video release is associated with
      season:
        $ref: '#/definitions/SeasonHeader'
        description: Season this video release is associated with
      format:
        $ref: '#/definitions/VideoReleaseFormat'
        description: Video release format
      numberOfEpisodes:
        type: integer
        description: Number of episodes
      numberOfFeatureLengthEpisodes:
        type: integer
        description: Number of feature-length episodes
      numberOfDataCarriers:
        type: integer
        description: Number of data carriers (like DVD, VCD, VHS etc.)
      runTime:
        type: integer
        description: Run time, in minutes
      yearFrom:
        type: integer
        description: Starting year of video release story
      yearTo:
        type: integer
        description: Ending year of video release story
      regionFreeReleaseDate:
        type: string
        format: date
        description: Region free release date
      region1AReleaseDate:
        type: string
        format: date
        description: Region 1/A release date
      region1SlimlineReleaseDate:
        type: string
        format: date
        description: Region 1 slimline release date
      region2BReleaseDate:
        type: string
        format: date
        description: Region 2/B release date
      region2SlimlineReleaseDate:
        type: string
        format: date
        description: Region 2 slimline release date
      region4AReleaseDate:
        type: string
        format: date
        description: Region 4 release date
      region4SlimlineReleaseDate:
        type: string
        format: date
        description: Region 4 slimline release date
      amazonDigitalRelease:
        type: boolean
        description: Whether this video has been release on Amazon.com
      dailymotionDigitalRelease:
        type: boolean
        description: Whether this video has been release on Dailymotion
      googlePlayDigitalRelease:
        type: boolean
        description: Whether this video has been release on Google Play
      iTunesDigitalRelease:
        type: boolean
        description: Whether this video has been release on iTunes
      ultraVioletDigitalRelease:
        type: boolean
        description: Whether this video has been release on UltraViolet
      vimeoDigitalRelease:
        type: boolean
        description: Whether this video has been release on Vimeo
      vuduDigitalRelease:
        type: boolean
        description: Whether this video has been release on VUDU
      xboxSmartGlassDigitalRelease:
        type: boolean
        description: Whether this video has been release on Xbox SmartGlass
      youTubeDigitalRelease:
        type: boolean
        description: Whether this video has been release on YouTube
      netflixDigitalRelease:
        type: boolean
        description: Whether this video has been release on Netflix
    required:
      - uid
      - title
  VideoReleaseFormat:
    type: string
    description: Video release format
    enum:
      - SUPER_8
      - BETAMAX
      - VHS
      - CED
      - LD
      - VHD
      - VCD
      - VIDEO_8
      - DVD
      - UMD
      - HD_DVD
      - BLU_RAY
      - BLU_RAY_4K_UHD
      - DIGITAL_FORMAT
  VideoReleaseFull:
    type: object
    description: Full video release, returned when queried using UID
    properties:
      uid:
        type: string
        description: Video release unique ID
      title:
        type: string
        description: Video release title
      series:
        $ref: '#/definitions/SeriesBase'
        description: Series this video release is associated with
      season:
        $ref: '#/definitions/SeasonBase'
        description: Season this video release is associated with
      format:
        $ref: '#/definitions/VideoReleaseFormat'
        description: Video release format
      numberOfEpisodes:
        type: integer
        description: Number of episodes
      numberOfFeatureLengthEpisodes:
        type: integer
        description: Number of feature-length episodes
      numberOfDataCarriers:
        type: integer
        description: Number of data carriers (like DVD, VCD, VHS etc.)
      runTime:
        type: integer
        description: Run time, in minutes
      yearFrom:
        type: integer
        description: Starting year of video release story
      yearTo:
        type: integer
        description: Ending year of video release story
      regionFreeReleaseDate:
        type: string
        format: date
        description: Region free release date
      region1AReleaseDate:
        type: string
        format: date
        description: Region 1/A release date
      region1SlimlineReleaseDate:
        type: string
        format: date
        description: Region 1 slimline release date
      region2BReleaseDate:
        type: string
        format: date
        description: Region 2/B release date
      region2SlimlineReleaseDate:
        type: string
        format: date
        description: Region 2 slimline release date
      region4AReleaseDate:
        type: string
        format: date
        description: Region 4 release date
      region4SlimlineReleaseDate:
        type: string
        format: date
        description: Region 4 slimline release date
      amazonDigitalRelease:
        type: boolean
        description: Whether this video has been release on Amazon.com
      dailymotionDigitalRelease:
        type: boolean
        description: Whether this video has been release on Dailymotion
      googlePlayDigitalRelease:
        type: boolean
        description: Whether this video has been release on Google Play
      iTunesDigitalRelease:
        type: boolean
        description: Whether this video has been release on iTunes
      ultraVioletDigitalRelease:
        type: boolean
        description: Whether this video has been release on UltraViolet
      vimeoDigitalRelease:
        type: boolean
        description: Whether this video has been release on Vimeo
      vuduDigitalRelease:
        type: boolean
        description: Whether this video has been release on VUDU
      xboxSmartGlassDigitalRelease:
        type: boolean
        description: Whether this video has been release on Xbox SmartGlass
      youTubeDigitalRelease:
        type: boolean
        description: Whether this video has been release on YouTube
      netflixDigitalRelease:
        type: boolean
        description: Whether this video has been release on Netflix
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: References
      ratings:
        type: array
        items:
          $ref: '#/definitions/ContentRating'
        description: Ratings
      languages:
        type: array
        items:
          $ref: '#/definitions/ContentLanguage'
        description: Languages of audio track
      languagesSubtitles:
        type: array
        items:
          $ref: '#/definitions/ContentLanguage'
        description: Languages of subtitles
      languagesDubbed:
        type: array
        items:
          $ref: '#/definitions/ContentLanguage'
        description: Languages that are available with dubbing
    required:
      - uid
      - title
  VideoReleaseBaseResponse:
    type: object
    description: Response object for video releases search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      videoReleases:
        type: array
        items:
          $ref: '#/definitions/VideoReleaseBase'
        description: List of video releases matching given criteria
  VideoReleaseFullResponse:
    type: object
    description: Response object for single video release query
    properties:
      videoRelease:
        $ref: '#/definitions/VideoReleaseFull'
        description: Video release, if found
  VideoReleaseV2Base:
    type: object
    description: Base video release, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Video release unique ID
      title:
        type: string
        description: Video release title
      format:
        $ref: '#/definitions/VideoReleaseFormat'
        description: Video release format
      numberOfEpisodes:
        type: integer
        description: Number of episodes
      numberOfFeatureLengthEpisodes:
        type: integer
        description: Number of feature-length episodes
      numberOfDataCarriers:
        type: integer
        description: Number of data carriers (like DVD, VCD, VHS etc.)
      runTime:
        type: integer
        description: Run time, in minutes
      yearFrom:
        type: integer
        description: Starting year of video release story
      yearTo:
        type: integer
        description: Ending year of video release story
      regionFreeReleaseDate:
        type: string
        format: date
        description: Region free release date
      region1AReleaseDate:
        type: string
        format: date
        description: Region 1/A release date
      region1SlimlineReleaseDate:
        type: string
        format: date
        description: Region 1 slimline release date
      region2BReleaseDate:
        type: string
        format: date
        description: Region 2/B release date
      region2SlimlineReleaseDate:
        type: string
        format: date
        description: Region 2 slimline release date
      region4AReleaseDate:
        type: string
        format: date
        description: Region 4 release date
      region4SlimlineReleaseDate:
        type: string
        format: date
        description: Region 4 slimline release date
      amazonDigitalRelease:
        type: boolean
        description: Whether this video has been release on Amazon.com
      dailymotionDigitalRelease:
        type: boolean
        description: Whether this video has been release on Dailymotion
      googlePlayDigitalRelease:
        type: boolean
        description: Whether this video has been release on Google Play
      iTunesDigitalRelease:
        type: boolean
        description: Whether this video has been release on iTunes
      ultraVioletDigitalRelease:
        type: boolean
        description: Whether this video has been release on UltraViolet
      vimeoDigitalRelease:
        type: boolean
        description: Whether this video has been release on Vimeo
      vuduDigitalRelease:
        type: boolean
        description: Whether this video has been release on VUDU
      xboxSmartGlassDigitalRelease:
        type: boolean
        description: Whether this video has been release on Xbox SmartGlass
      youTubeDigitalRelease:
        type: boolean
        description: Whether this video has been release on YouTube
      netflixDigitalRelease:
        type: boolean
        description: Whether this video has been release on Netflix
      documentary:
        type: boolean
        description: Whether this is a documentary
      specialFeatures:
        type: boolean
        description: Whether this contains special features
    required:
      - uid
      - title
  VideoReleaseV2Full:
    type: object
    description: Full video release, returned when queried using UID
    properties:
      uid:
        type: string
        description: Video release unique ID
      title:
        type: string
        description: Video release title
      series:
        type: array
        items:
          $ref: '#/definitions/SeriesBase'
        description: Series with which this video release is associated, so that it contains part of all of it
      seasons:
        type: array
        items:
          $ref: '#/definitions/SeasonBase'
        description: Seasons with which this video release is associated, so that it contains part of all of it
      movies:
        type: array
        items:
          $ref: '#/definitions/MovieBase'
        description: Movies with which this video release is associated, so that it contains the full movie
      format:
        $ref: '#/definitions/VideoReleaseFormat'
        description: Video release format
      numberOfEpisodes:
        type: integer
        description: Number of episodes
      numberOfFeatureLengthEpisodes:
        type: integer
        description: Number of feature-length episodes
      numberOfDataCarriers:
        type: integer
        description: Number of data carriers (like DVD, VCD, VHS etc.)
      runTime:
        type: integer
        description: Run time, in minutes
      yearFrom:
        type: integer
        description: Starting year of video release story
      yearTo:
        type: integer
        description: Ending year of video release story
      regionFreeReleaseDate:
        type: string
        format: date
        description: Region free release date
      region1AReleaseDate:
        type: string
        format: date
        description: Region 1/A release date
      region1SlimlineReleaseDate:
        type: string
        format: date
        description: Region 1 slimline release date
      region2BReleaseDate:
        type: string
        format: date
        description: Region 2/B release date
      region2SlimlineReleaseDate:
        type: string
        format: date
        description: Region 2 slimline release date
      region4AReleaseDate:
        type: string
        format: date
        description: Region 4 release date
      region4SlimlineReleaseDate:
        type: string
        format: date
        description: Region 4 slimline release date
      amazonDigitalRelease:
        type: boolean
        description: Whether this video has been release on Amazon.com
      dailymotionDigitalRelease:
        type: boolean
        description: Whether this video has been release on Dailymotion
      googlePlayDigitalRelease:
        type: boolean
        description: Whether this video has been release on Google Play
      iTunesDigitalRelease:
        type: boolean
        description: Whether this video has been release on iTunes
      ultraVioletDigitalRelease:
        type: boolean
        description: Whether this video has been release on UltraViolet
      vimeoDigitalRelease:
        type: boolean
        description: Whether this video has been release on Vimeo
      vuduDigitalRelease:
        type: boolean
        description: Whether this video has been release on VUDU
      xboxSmartGlassDigitalRelease:
        type: boolean
        description: Whether this video has been release on Xbox SmartGlass
      youTubeDigitalRelease:
        type: boolean
        description: Whether this video has been release on YouTube
      netflixDigitalRelease:
        type: boolean
        description: Whether this video has been release on Netflix
      documentary:
        type: boolean
        description: Whether this is a documentary
      specialFeatures:
        type: boolean
        description: Whether this contains special features
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
        description: References
      ratings:
        type: array
        items:
          $ref: '#/definitions/ContentRating'
        description: Ratings
      languages:
        type: array
        items:
          $ref: '#/definitions/ContentLanguage'
        description: Languages of audio track
      languagesSubtitles:
        type: array
        items:
          $ref: '#/definitions/ContentLanguage'
        description: Languages of subtitles
      languagesDubbed:
        type: array
        items:
          $ref: '#/definitions/ContentLanguage'
        description: Languages that are available with dubbing
    required:
      - uid
      - title
  VideoReleaseV2BaseResponse:
    type: object
    description: Response object for video releases search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      videoReleases:
        type: array
        items:
          $ref: '#/definitions/VideoReleaseV2Base'
        description: List of video releases matching given criteria
  VideoReleaseV2FullResponse:
    type: object
    description: Response object for single video release query (V2)
    properties:
      videoRelease:
        $ref: '#/definitions/VideoReleaseV2Full'
        description: Video release, if found
  WeaponHeader:
    type: object
    description: Header weapon, embedded in other objects
    properties:
      uid:
        type: string
        description: Weapon unique ID
      name:
        type: string
        description: Weapon name
    required:
      - uid
      - name
  WeaponBase:
    type: object
    description: Base weapon, returned in search results
    properties:
      uid:
        type: string
        description: Weapon unique ID
      name:
        type: string
        description: Weapon name
      handHeldWeapon:
        type: boolean
        description: Whether it's hand-help weapon
      laserTechnology:
        type: boolean
        description: Whether it's a laser technology
      plasmaTechnology:
        type: boolean
        description: Whether it's a plasma technology
      photonicTechnology:
        type: boolean
        description: Whether it's a photonic technology
      phaserTechnology:
        type: boolean
        description: Whether it's a phaser technology
      mirror:
        type: boolean
        description: Whether this weapon is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this weapon is from alternate reality
    required:
      - uid
      - name
  WeaponFull:
    type: object
    description: Full weapon, returned when queried using UID
    properties:
      uid:
        type: string
        description: Weapon unique ID
      name:
        type: string
        description: Weapon name
      handHeldWeapon:
        type: boolean
        description: Whether it's a hand-help weapon
      laserTechnology:
        type: boolean
        description: Whether it's a laser technology
      plasmaTechnology:
        type: boolean
        description: Whether it's a plasma technology
      photonicTechnology:
        type: boolean
        description: Whether it's a photonic technology
      phaserTechnology:
        type: boolean
        description: Whether it's a phaser technology
      mirror:
        type: boolean
        description: Whether this weapon is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this weapon is from alternate reality
    required:
      - uid
      - name
  WeaponBaseResponse:
    type: object
    description: Response object for weapons search
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      weapons:
        type: array
        items:
          $ref: '#/definitions/WeaponBase'
        description: List of weapons matching given criteria
  WeaponFullResponse:
    type: object
    description: Response object for single weapon query
    properties:
      weapon:
        $ref: '#/definitions/WeaponFull'
        description: Weapon, if found
  WeaponV2Base:
    type: object
    description: Base weapon, returned in search results (V2)
    properties:
      uid:
        type: string
        description: Weapon unique ID
      name:
        type: string
        description: Weapon name
      handHeldWeapon:
        type: boolean
        description: Whether it's hand-help weapon
      laserTechnology:
        type: boolean
        description: Whether it's a laser technology
      plasmaTechnology:
        type: boolean
        description: Whether it's a plasma technology
      photonicTechnology:
        type: boolean
        description: Whether it's a photonic technology
      phaserTechnology:
        type: boolean
        description: Whether it's a phaser technology
      directedEnergyWeapon:
        type: boolean
        description: Whether it's a directed energy weapon
      explosiveWeapon:
        type: boolean
        description: Whether it's an explosive weapon
      projectileWeapon:
        type: boolean
        description: Whether it's a projectile weapon
      fictionalWeapon:
        type: boolean
        description: Whether it's a fictional weapon
      mirror:
        type: boolean
        description: Whether this weapon is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this weapon is from alternate reality
    required:
      - uid
      - name
  WeaponV2Full:
    type: object
    description: Full weapon, returned when queried using UID (V2)
    properties:
      uid:
        type: string
        description: Weapon unique ID
      name:
        type: string
        description: Weapon name
      handHeldWeapon:
        type: boolean
        description: Whether it's a hand-help weapon
      laserTechnology:
        type: boolean
        description: Whether it's a laser technology
      plasmaTechnology:
        type: boolean
        description: Whether it's a plasma technology
      photonicTechnology:
        type: boolean
        description: Whether it's a photonic technology
      phaserTechnology:
        type: boolean
        description: Whether it's a phaser technology
      directedEnergyWeapon:
        type: boolean
        description: Whether it's a directed energy weapon
      explosiveWeapon:
        type: boolean
        description: Whether it's an explosive weapon
      projectileWeapon:
        type: boolean
        description: Whether it's a projectile weapon
      fictionalWeapon:
        type: boolean
        description: Whether it's a fictional weapon
      mirror:
        type: boolean
        description: Whether this weapon is from mirror universe
      alternateReality:
        type: boolean
        description: Whether this weapon is from alternate reality
    required:
      - uid
      - name
  WeaponV2BaseResponse:
    type: object
    description: Response object for weapons search (V2)
    properties:
      page:
        $ref: '#/definitions/ResponsePage'
        description: Response page
      sort:
        $ref: '#/definitions/ResponseSort'
        description: Response sort
      weapons:
        type: array
        items:
          $ref: '#/definitions/WeaponV2Base'
        description: List of weapons matching given criteria
  WeaponV2FullResponse:
    type: object
    description: Response object for single weapon query (V2)
    properties:
      weapon:
        $ref: '#/definitions/WeaponV2Full'
        description: Weapon, if found
