get:
  description: Pagination over books
  parameters:
    - name: pageNumber
      in: query
      type: integer
      format: int32
      description: Zero-based page number
    - name: pageSize
      in: query
      type: integer
      format: int32
      description: Page size
    - name: apiKey
      in: query
      type: string
      description: API key
  responses:
    200:
      schema:
        $ref: '#/definitions/BookBaseResponse'
    default:
      description: Unexpected error
      schema:
        $ref: '#/definitions/Error'
  tags:
  - Book
post:
  description: Searching books
  consumes:
    - application/x-www-form-urlencoded
  producers:
    - application/json
  parameters:
    - name: pageNumber
      in: query
      type: integer
      format: int32
      description: Zero-based page number
    - name: pageSize
      in: query
      type: integer
      format: int32
      description: Page size
    - name: sort
      type: string
      in: query
      description: "Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC"
    - name: apiKey
      in: query
      type: string
      description: API key
    - name: title
      in: formData
      type: string
      description: Book title
    - name: publishedYearFrom
      in: formData
      type: integer
      format: int32
      description: Starting year the book was published
    - name: publishedYearTo
      in: formData
      type: integer
      format: int32
      description: Ending year the book was published
    - name: numberOfPagesFrom
      in: formData
      type: integer
      format: int32
      description: Minimal number of pages
    - name: numberOfPagesTo
      in: formData
      type: integer
      format: int32
      description: Maximal number of pages
    - name: stardateFrom
      in: formData
      type: number
      format: float
      description: Starting stardate of book story
    - name: stardateTo
      in: formData
      type: number
      format: float
      description: Ending stardate of book story
    - name: yearFrom
      in: formData
      type: integer
      format: int32
      description: Starting year of book story
    - name: yearTo
      in: formData
      type: integer
      format: int32
      description: Ending year of book story
    - name: novel
      in: formData
      type: boolean
      description: Whether it should be a novel
    - name: referenceBook
      in: formData
      type: boolean
      description: Whether it should be a reference book
    - name: biographyBook
      in: formData
      type: boolean
      description: Whether it should be a biography book
    - name: rolePlayingBook
      in: formData
      type: boolean
      description: Whether it should be a role playing book
    - name: eBook
      in: formData
      type: boolean
      description: Whether it should be an e-book
    - name: anthology
      in: formData
      type: boolean
      description: Whether it should be an anthology
    - name: novelization
      in: formData
      type: boolean
      description: Whether it should be novelization
    - name: audiobook
      in: formData
      type: boolean
      description: Whether it should be an audiobook
    - name: audiobookAbridged
      in: formData
      type: boolean
      description: Whether it should be an audiobook, abridged
    - name: audiobookPublishedYearFrom
      in: formData
      type: integer
      format: int32
      description: Starting year the audiobook was published
    - name: audiobookPublishedYearTo
      in: formData
      type: integer
      format: int32
      description: Ending year the audiobook was published
    - name: audiobookRunTimeFrom
      in: formData
      type: integer
      format: int32
      description: Minimal audiobook run time, in minutes
    - name: audiobookRunTimeTo
      in: formData
      type: integer
      format: int32
      description: Maximal audiobook run time, in minutes
  responses:
    200:
      schema:
        $ref: '#/definitions/BookBaseResponse'
  tags:
    - Book
