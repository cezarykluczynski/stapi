openapi: 3.0.3
info:
  title: STAPI
  description: STAPI, a Star Trek API
  version: 0.1.3-SNAPSHOT
servers:
  - url: https://stapi.co/api
    description: STAPI over secure HTTPS protocol
  - url: http://stapi.co/api
    description: STAPI over plain HTTP protocol
paths:
  /v1/rest/animal:
    get:
      tags:
        - Animal
      description: Retrieval of a single animal
      operationId: v1GetAnimal
      parameters:
        - name: uid
          in: query
          description: Animal unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/animal/search:
    get:
      tags:
        - Animal
      description: Pagination over animals
      operationId: v1PageAnimals
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Animal
      description: Searching animals
      operationId: v1SearchAnimals
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Animal name
                earthAnimal:
                  type: boolean
                  description: Whether it should be an earth animal
                earthInsect:
                  type: boolean
                  description: Whether it should be an earth insect
                avian:
                  type: boolean
                  description: Whether it should be an avian
                canine:
                  type: boolean
                  description: Whether it should be a canine
                feline:
                  type: boolean
                  description: Whether it should be a feline
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimalBaseResponse'
  /v1/rest/astronomicalObject:
    get:
      tags:
        - AstronomicalObject
      description: Retrieval of a single astronomical object
      operationId: v1GetAstronomicalObject
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Astronomical object's unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomicalObjectFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/astronomicalObject/search:
    get:
      tags:
        - AstronomicalObject
      description: Pagination over astronomical objects
      operationId: v1PageAstronomicalObjects
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomicalObjectBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - AstronomicalObject
      description: Searching astronomical objects
      operationId: v1SearchAstronomicalObjects
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Astronomical object name
                astronomicalObjectType:
                  type: string
                  description: Type of astronomical object
                locationUid:
                  type: string
                  description: Unique ID of astronomical object containing objects
                    being searched
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomicalObjectBaseResponse'
  /v2/rest/astronomicalObject:
    get:
      tags:
        - AstronomicalObject
      description: Retrieval of a single astronomical object (V2)
      operationId: v2GetAstronomicalObject
      parameters:
        - name: uid
          in: query
          description: Astronomical object's unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomicalObjectV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/astronomicalObject/search:
    get:
      tags:
        - AstronomicalObject
      description: Pagination over astronomical objects (V2)
      operationId: v2PageAstronomicalObjects
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomicalObjectV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - AstronomicalObject
      description: Searching astronomical objects (v2)
      operationId: v2SearchAstronomicalObjects
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Astronomical object name
                astronomicalObjectType:
                  type: string
                  description: Type of astronomical object
                locationUid:
                  type: string
                  description: Unique ID of astronomical object containing objects
                    being searched
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AstronomicalObjectV2BaseResponse'
  /v1/rest/book:
    get:
      tags:
        - Book
      description: Retrieval of a single book
      operationId: v1GetBook
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Book unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/book/search:
    get:
      tags:
        - Book
      description: Pagination over books
      operationId: v1PageBooks
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Book
      description: Searching books
      operationId: v1SearchBooks
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Book title
                publishedYearFrom:
                  type: integer
                  description: Starting year the book was published
                  format: int32
                publishedYearTo:
                  type: integer
                  description: Ending year the book was published
                  format: int32
                numberOfPagesFrom:
                  type: integer
                  description: Minimal number of pages
                  format: int32
                numberOfPagesTo:
                  type: integer
                  description: Maximal number of pages
                  format: int32
                stardateFrom:
                  type: number
                  description: Starting stardate of book story
                  format: float
                stardateTo:
                  type: number
                  description: Ending stardate of book story
                  format: float
                yearFrom:
                  type: integer
                  description: Starting year of book story
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of book story
                  format: int32
                novel:
                  type: boolean
                  description: Whether it should be a novel
                referenceBook:
                  type: boolean
                  description: Whether it should be a reference book
                biographyBook:
                  type: boolean
                  description: Whether it should be a biography book
                rolePlayingBook:
                  type: boolean
                  description: Whether it should be a role playing book
                eBook:
                  type: boolean
                  description: Whether it should be an e-book
                anthology:
                  type: boolean
                  description: Whether it should be an anthology
                novelization:
                  type: boolean
                  description: Whether it should be novelization
                audiobook:
                  type: boolean
                  description: Whether it should be an audiobook
                audiobookAbridged:
                  type: boolean
                  description: Whether it should be an audiobook, abridged
                audiobookPublishedYearFrom:
                  type: integer
                  description: Starting year the audiobook was published
                  format: int32
                audiobookPublishedYearTo:
                  type: integer
                  description: Ending year the audiobook was published
                  format: int32
                audiobookRunTimeFrom:
                  type: integer
                  description: Minimal audiobook run time, in minutes
                  format: int32
                audiobookRunTimeTo:
                  type: integer
                  description: Maximal audiobook run time, in minutes
                  format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBaseResponse'
  /v2/rest/book:
    get:
      tags:
        - Book
      description: Retrieval of a single book (V2)
      operationId: v2GetBook
      parameters:
        - name: uid
          in: query
          description: Book unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/book/search:
    get:
      tags:
        - Book
      description: Pagination over books (V2)
      operationId: v2PageBooks
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Book
      description: Searching books (V2)
      operationId: v2SearchBooks
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Book title
                publishedYearFrom:
                  type: integer
                  description: Starting year the book was published
                  format: int32
                publishedYearTo:
                  type: integer
                  description: Ending year the book was published
                  format: int32
                numberOfPagesFrom:
                  type: integer
                  description: Minimal number of pages
                  format: int32
                numberOfPagesTo:
                  type: integer
                  description: Maximal number of pages
                  format: int32
                stardateFrom:
                  type: number
                  description: Starting stardate of book story
                  format: float
                stardateTo:
                  type: number
                  description: Ending stardate of book story
                  format: float
                yearFrom:
                  type: integer
                  description: Starting year of book story
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of book story
                  format: int32
                novel:
                  type: boolean
                  description: Whether it should be a novel
                referenceBook:
                  type: boolean
                  description: Whether it should be a reference book
                biographyBook:
                  type: boolean
                  description: Whether it should be a biography book
                rolePlayingBook:
                  type: boolean
                  description: Whether it should be a role playing book
                eBook:
                  type: boolean
                  description: Whether it should be an e-book
                anthology:
                  type: boolean
                  description: Whether it should be an anthology
                novelization:
                  type: boolean
                  description: Whether it should be novelization
                unauthorizedPublication:
                  type: boolean
                  description: Whether it should be an unauthorized publication
                audiobook:
                  type: boolean
                  description: Whether it should be an audiobook
                audiobookAbridged:
                  type: boolean
                  description: Whether it should be an audiobook, abridged
                audiobookPublishedYearFrom:
                  type: integer
                  description: Starting year the audiobook was published
                  format: int32
                audiobookPublishedYearTo:
                  type: integer
                  description: Ending year the audiobook was published
                  format: int32
                audiobookRunTimeFrom:
                  type: integer
                  description: Minimal audiobook run time, in minutes
                  format: int32
                audiobookRunTimeTo:
                  type: integer
                  description: Maximal audiobook run time, in minutes
                  format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookV2BaseResponse'
  /v1/rest/bookCollection:
    get:
      tags:
        - BookCollection
      description: Retrieval of a single book collection
      operationId: v1GetBookCollection
      parameters:
        - name: uid
          in: query
          description: Book collection unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCollectionFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/bookCollection/search:
    get:
      tags:
        - BookCollection
      description: Pagination over book collections
      operationId: v1PageBookCollections
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCollectionBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - BookCollection
      description: Searching book collections
      operationId: v1SearchBookCollections
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Book collection title
                publishedYearFrom:
                  type: integer
                  description: Starting year the book collection was published
                  format: int32
                publishedYearTo:
                  type: integer
                  description: Ending year the book collection was published
                  format: int32
                numberOfPagesFrom:
                  type: integer
                  description: Minimal number of pages
                  format: int32
                numberOfPagesTo:
                  type: integer
                  description: Maximal number of pages
                  format: int32
                stardateFrom:
                  type: number
                  description: Starting stardate of book collection stories
                  format: float
                stardateTo:
                  type: number
                  description: Ending stardate of book collections stories
                  format: float
                yearFrom:
                  type: integer
                  description: Starting year of book collection stories
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of book collections stories
                  format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCollectionBaseResponse'
  /v1/rest/bookSeries:
    get:
      tags:
        - BookSeries
      description: Retrieval of a single book series
      operationId: v1GetBookSeries
      parameters:
        - name: uid
          in: query
          description: Book series unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookSeriesFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/bookSeries/search:
    get:
      tags:
        - BookSeries
      description: Pagination over book series
      operationId: v1PageBookSeries
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookSeriesBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - BookSeries
      description: Searching book series
      operationId: v1SearchBookSeries
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Book series title
                publishedYearFrom:
                  type: integer
                  description: Starting year the book series was published
                  format: int32
                publishedYearTo:
                  type: integer
                  description: Ending year the book series was published
                  format: int32
                numberOfBooksFrom:
                  type: integer
                  description: Minimal number of books
                  format: int32
                numberOfBooksTo:
                  type: integer
                  description: Maximal number of books
                  format: int32
                yearFrom:
                  type: integer
                  description: Starting year of book series stories
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of book series stories
                  format: int32
                miniseries:
                  type: boolean
                  description: Whether it should be a miniseries
                eBookSeries:
                  type: boolean
                  description: Whether it should be an e-book series
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookSeriesBaseResponse'
  /v1/rest/character:
    get:
      tags:
        - Character
      description: Retrieval of a single character
      operationId: v1GetCharacter
      parameters:
        - name: uid
          in: query
          description: Character unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/character/search:
    get:
      tags:
        - Character
      description: Pagination over characters
      operationId: v1PageCharacter
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Character
      description: Searching characters
      operationId: v1SearchCharacters
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Character name
                gender:
                  type: string
                  description: Character gender
                deceased:
                  type: boolean
                  description: Whether it should be a deceased character
                hologram:
                  type: boolean
                  description: Whether it should be a hologram
                fictionalCharacter:
                  type: boolean
                  description: Whether it should be a fictional character (from universe
                    point of view)
                mirror:
                  type: boolean
                  description: Whether it should be a mirror universe character
                alternateReality:
                  type: boolean
                  description: Whether it should be a alternate reality character
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterBaseResponse'
  /v1/rest/comics:
    get:
      tags:
        - Comics
      description: Retrieval of a single comics
      operationId: v1GetComics
      parameters:
        - name: uid
          in: query
          description: Comics unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicsFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/comics/search:
    get:
      tags:
        - Comics
      description: Pagination over comics
      operationId: v1PageComics
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicsBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Comics
      description: Searching comics
      operationId: v1SearchComics
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Comics title
                publishedYearFrom:
                  type: integer
                  description: Starting year the comics was published
                  format: int32
                publishedYearTo:
                  type: integer
                  description: Ending year the comics was published
                  format: int32
                numberOfPagesFrom:
                  type: integer
                  description: Minimal number of pages
                  format: int32
                numberOfPagesTo:
                  type: integer
                  description: Maximal number of pages
                  format: int32
                stardateFrom:
                  type: number
                  description: Starting stardate of comics story
                  format: float
                stardateTo:
                  type: number
                  description: Ending stardate of comics story
                  format: float
                yearFrom:
                  type: integer
                  description: Starting year of comics story
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of comics story
                  format: int32
                photonovel:
                  type: boolean
                  description: Whether it should be a photonovel
                adaptation:
                  type: boolean
                  description: Whether it should be an adaptation of an episode or
                    a movie
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicsBaseResponse'
  /v1/rest/comicCollection:
    get:
      tags:
        - ComicCollection
      description: Retrieval of a single comic collection
      operationId: v1GetComicCollection
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Comic collection unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicCollectionFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/comicCollection/search:
    get:
      tags:
        - ComicCollection
      description: Pagination over comic collections
      operationId: v1PageComicCollections
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicCollectionBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - ComicCollection
      description: Searching comic collections
      operationId: v1SearchComicCollections
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Comic collection title
                publishedYearFrom:
                  type: integer
                  description: Starting year the comic collection was published
                  format: int32
                publishedYearTo:
                  type: integer
                  description: Ending year the comic collection was published
                  format: int32
                numberOfPagesFrom:
                  type: integer
                  description: Minimal number of pages
                  format: int32
                numberOfPagesTo:
                  type: integer
                  description: Maximal number of pages
                  format: int32
                stardateFrom:
                  type: number
                  description: Starting stardate of comic collection stories
                  format: float
                stardateTo:
                  type: number
                  description: Ending stardate of comic collections stories
                  format: float
                yearFrom:
                  type: integer
                  description: Starting year of comic collection stories
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of comic collections stories
                  format: int32
                photonovel:
                  type: boolean
                  description: Whether it should be an photonovel collection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicCollectionBaseResponse'
  /v2/rest/comicCollection:
    get:
      tags:
        - ComicCollection
      description: Retrieval of a single comic collection (V2)
      operationId: v2GetComicCollection
      parameters:
        - name: uid
          in: query
          description: Comic collection unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicCollectionV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/comicSeries:
    get:
      tags:
        - ComicSeries
      description: Retrieval of a single comic series
      operationId: v1GetComicSeries
      parameters:
        - name: uid
          in: query
          description: Comic series unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicSeriesFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/comicSeries/search:
    get:
      tags:
        - ComicSeries
      description: Pagination over comic series
      operationId: v1PageComicSeries
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicSeriesBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - ComicSeries
      description: Searching comic series
      operationId: v1SearchComicSeries
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Comic series title
                publishedYearFrom:
                  type: integer
                  description: Starting year the comic series was published
                  format: int32
                publishedYearTo:
                  type: integer
                  description: Ending year the comic series was published
                  format: int32
                numberOfIssuesFrom:
                  type: integer
                  description: Minimal number of issues
                  format: int32
                numberOfIssuesTo:
                  type: integer
                  description: Maximal number of issues
                  format: int32
                stardateFrom:
                  type: number
                  description: Starting stardate of comic series stories
                  format: float
                stardateTo:
                  type: number
                  description: Starting stardate of comic series stories
                  format: float
                yearFrom:
                  type: integer
                  description: Starting year of comic series stories
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of comic series stories
                  format: int32
                miniseries:
                  type: boolean
                  description: Whether it should be a miniseries
                photonovelSeries:
                  type: boolean
                  description: Whether it should be photonovel series
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicSeriesBaseResponse'
  /v1/rest/comicStrip:
    get:
      tags:
        - ComicStrip
      description: Retrieval of a single comic strip
      operationId: v1GetComicStrip
      parameters:
        - name: uid
          in: query
          description: Comic strip unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicStripFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/comicStrip/search:
    get:
      tags:
        - ComicStrip
      description: Pagination over comic strips
      operationId: v1PageComicStrips
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicStripBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - ComicStrip
      description: Searching comic strips
      operationId: v1SearchComicStrips
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Comic strip title
                publishedYearFrom:
                  type: integer
                  description: Starting year the comic strip was published
                  format: int32
                publishedYearTo:
                  type: integer
                  description: Ending year the comic strip was published
                  format: int32
                numberOfPagesFrom:
                  type: integer
                  description: Minimal number of pages
                  format: int32
                numberOfPagesTo:
                  type: integer
                  description: Maximal number of pages
                  format: int32
                yearFrom:
                  type: integer
                  description: Starting year of comic strip story
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of comic strip story
                  format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComicStripBaseResponse'
  /v1/rest/company:
    get:
      tags:
        - Company
      description: Retrieval of a single company
      operationId: v1GetCompany
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Company unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/company/search:
    get:
      tags:
        - Company
      description: Pagination over companies
      operationId: v1PageCompanies
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Company
      description: Searching companies
      operationId: v1SearchCompanies
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Company name
                broadcaster:
                  type: boolean
                  description: Whether it should be a broadcaster
                collectibleCompany:
                  type: boolean
                  description: Whether it should be a collectible company
                conglomerate:
                  type: boolean
                  description: Whether it should be a conglomerate
                digitalVisualEffectsCompany:
                  type: boolean
                  description: Whether it should be a digital visual effects company
                distributor:
                  type: boolean
                  description: Whether it should be a distributor
                gameCompany:
                  type: boolean
                  description: Whether it should be a game company
                filmEquipmentCompany:
                  type: boolean
                  description: Whether it should be a film equipment company
                makeUpEffectsStudio:
                  type: boolean
                  description: Whether it should be a make-up effects studio
                mattePaintingCompany:
                  type: boolean
                  description: Whether it should be a matte painting company
                modelAndMiniatureEffectsCompany:
                  type: boolean
                  description: Whether it should be a model and miniature effects
                    company
                postProductionCompany:
                  type: boolean
                  description: Whether it should be a post-production company
                productionCompany:
                  type: boolean
                  description: Whether it should be a production company
                propCompany:
                  type: boolean
                  description: Whether it should be a prop company
                recordLabel:
                  type: boolean
                  description: Whether it should be a record label
                specialEffectsCompany:
                  type: boolean
                  description: Whether it should be a special effects company
                tvAndFilmProductionCompany:
                  type: boolean
                  description: Whether it should be a TV and film production company
                videoGameCompany:
                  type: boolean
                  description: Whether it should be a video game company
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBaseResponse'
  /v2/rest/company:
    get:
      tags:
        - Company
      description: Retrieval of a single company (V2)
      operationId: v2GetCompany
      parameters:
        - name: uid
          in: query
          description: Company unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/company/search:
    get:
      tags:
        - Company
      description: Pagination over companies (V2)
      operationId: v2PageCompanies
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Company
      description: Searching companies (V2)
      operationId: v2SearchCompanies
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Company name
                broadcaster:
                  type: boolean
                  description: Whether it should be a broadcaster
                streamingService:
                  type: boolean
                  description: Whether it should be a streaming service
                collectibleCompany:
                  type: boolean
                  description: Whether it should be a collectible company
                conglomerate:
                  type: boolean
                  description: Whether it should be a conglomerate
                visualEffectsCompany:
                  type: boolean
                  description: Whether it should be a visual effects company
                digitalVisualEffectsCompany:
                  type: boolean
                  description: Whether it should be a digital visual effects company
                distributor:
                  type: boolean
                  description: Whether it should be a distributor
                gameCompany:
                  type: boolean
                  description: Whether it should be a game company
                filmEquipmentCompany:
                  type: boolean
                  description: Whether it should be a film equipment company
                makeUpEffectsStudio:
                  type: boolean
                  description: Whether it should be a make-up effects studio
                mattePaintingCompany:
                  type: boolean
                  description: Whether it should be a matte painting company
                modelAndMiniatureEffectsCompany:
                  type: boolean
                  description: Whether it should be a model and miniature effects
                    company
                postProductionCompany:
                  type: boolean
                  description: Whether it should be a post-production company
                productionCompany:
                  type: boolean
                  description: Whether it should be a production company
                propCompany:
                  type: boolean
                  description: Whether it should be a prop company
                recordLabel:
                  type: boolean
                  description: Whether it should be a record label
                specialEffectsCompany:
                  type: boolean
                  description: Whether it should be a special effects company
                tvAndFilmProductionCompany:
                  type: boolean
                  description: Whether it should be a TV and film production company
                videoGameCompany:
                  type: boolean
                  description: Whether it should be a video game company
                publisher:
                  type: boolean
                  description: Whether it should be a publisher
                publicationArtStudio:
                  type: boolean
                  description: Whether it should be a publication art studio
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyV2BaseResponse'
  /v1/rest/conflict:
    get:
      tags:
        - Conflict
      description: Retrieval of a single conflict
      operationId: v1GetConflict
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Conflict unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/conflict/search:
    get:
      tags:
        - Conflict
      description: Pagination over conflicts
      operationId: v1PageConflicts
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Conflict
      description: Searching conflicts
      operationId: v1SearchConflicts
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Conflict name
                yearFrom:
                  type: integer
                  description: Starting year of the conflict
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of the conflict
                  format: int32
                earthConflict:
                  type: boolean
                  description: Whether it should be an Earth conflict
                federationWar:
                  type: boolean
                  description: Whether this conflict should be a part of war involving
                    Federation
                klingonWar:
                  type: boolean
                  description: Whether this conflict should be a part of war involving
                    the Klingons
                dominionWarBattle:
                  type: boolean
                  description: Whether this conflict should be a Dominion war battle
                alternateReality:
                  type: boolean
                  description: Whether this conflict should be from alternate reality
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictBaseResponse'
  /v2/rest/conflict:
    get:
      tags:
        - Conflict
      description: Retrieval of a single conflict (V2)
      operationId: v2GetConflict
      parameters:
        - name: uid
          in: query
          description: Conflict unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/common/dataVersion:
    get:
      tags:
        - DataVersion
      description: Retrieval of a data version
      operationId: v1GetDataVersion
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataVersion'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/element:
    get:
      tags:
        - Element
      description: Retrieval of a single element
      operationId: v1GetElement
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Element unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/element/search:
    get:
      tags:
        - Element
      description: Pagination over elements
      operationId: v1PageElements
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Element
      description: Searching elements
      operationId: v1SearchElements
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Element name
                symbol:
                  type: string
                  description: Element symbol
                transuranium:
                  type: boolean
                  description: Whether it should be a transuranium
                gammaSeries:
                  type: boolean
                  description: Whether it should belong to Gamma series
                hypersonicSeries:
                  type: boolean
                  description: Whether it should belong to Hypersonic series
                megaSeries:
                  type: boolean
                  description: Whether it should belong to Mega series
                omegaSeries:
                  type: boolean
                  description: Whether it should belong to Omega series
                transonicSeries:
                  type: boolean
                  description: Whether it should belong to Transonic series
                worldSeries:
                  type: boolean
                  description: Whether it should belong to World series
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementBaseResponse'
  /v2/rest/element:
    get:
      tags:
        - Element
      description: Retrieval of a single element (V2)
      operationId: v2GetElement
      parameters:
        - name: uid
          in: query
          description: Element unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/element/search:
    get:
      tags:
        - Element
      description: Pagination over elements (V2)
      operationId: v2PageElements
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Element
      description: Searching elements (V2)
      operationId: v2SearchElements
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Element name
                symbol:
                  type: string
                  description: Element symbol
                transuranic:
                  type: boolean
                  description: Whether it should be a transuranic
                gammaSeries:
                  type: boolean
                  description: Whether it should belong to Gamma series
                hypersonicSeries:
                  type: boolean
                  description: Whether it should belong to Hypersonic series
                megaSeries:
                  type: boolean
                  description: Whether it should belong to Mega series
                omegaSeries:
                  type: boolean
                  description: Whether it should belong to Omega series
                transonicSeries:
                  type: boolean
                  description: Whether it should belong to Transonic series
                worldSeries:
                  type: boolean
                  description: Whether it should belong to World series
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementV2BaseResponse'
  /v1/rest/episode:
    get:
      tags:
        - Episode
      description: Retrieval of a single episode
      operationId: v1GetEpisode
      parameters:
        - name: uid
          in: query
          description: Episode unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpisodeFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/episode/search:
    get:
      tags:
        - Episode
      description: Pagination over episodes
      operationId: v1PageEpisodes
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpisodeBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Episode
      description: Searching episodes
      operationId: v1SearchEpisodes
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Episode title
                seasonNumberFrom:
                  type: integer
                  description: Minimal season number
                  format: int32
                seasonNumberTo:
                  type: integer
                  description: Maximal season number
                  format: int32
                episodeNumberFrom:
                  type: integer
                  description: Minimal episode number in season
                  format: int32
                episodeNumberTo:
                  type: integer
                  description: Maximal episode number in season
                  format: int32
                productionSerialNumber:
                  type: string
                  description: Production serial number
                featureLength:
                  type: boolean
                  description: Whether it should be a feature length episode
                stardateFrom:
                  type: number
                  description: Starting stardate of episode story
                  format: float
                stardateTo:
                  type: number
                  description: Ending stardate of episode story
                  format: float
                yearFrom:
                  type: integer
                  description: Starting year of episode story
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of episode story
                  format: int32
                usAirDateFrom:
                  type: string
                  description: Minimal date the episode was first aired in the United
                    States
                  format: date
                usAirDateTo:
                  type: string
                  description: Maximal date the episode was first aired in the United
                    States
                  format: date
                finalScriptDateFrom:
                  type: string
                  description: Minimal date the episode script was completed
                  format: date
                finalScriptDateTo:
                  type: string
                  description: Maximal date the episode script was completed
                  format: date
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpisodeBaseResponse'
  /v1/rest/food:
    get:
      tags:
        - Food
      description: Retrieval of a single food
      operationId: v1GetFood
      parameters:
        - name: uid
          in: query
          description: Food unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/food/search:
    get:
      tags:
        - Food
      description: Pagination over foods
      operationId: v1PageFoods
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Food
      description: Searching foods
      operationId: v1SearchFoods
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Food name
                earthlyOrigin:
                  type: boolean
                  description: Whether it should be of earthly origin
                dessert:
                  type: boolean
                  description: Whether it should be a dessert
                fruit:
                  type: boolean
                  description: Whether it should be a fruit
                herbOrSpice:
                  type: boolean
                  description: Whether it should be an herb or a spice
                sauce:
                  type: boolean
                  description: Whether it should be a sauce
                soup:
                  type: boolean
                  description: Whether it should be a soup
                beverage:
                  type: boolean
                  description: Whether it should be a beverage
                alcoholicBeverage:
                  type: boolean
                  description: Whether it should be an alcoholic beverage
                juice:
                  type: boolean
                  description: Whether it should be a juice
                tea:
                  type: boolean
                  description: Whether it should be a tea
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodBaseResponse'
  /v1/rest/literature:
    get:
      tags:
        - Literature
      description: Retrieval of a single literature
      operationId: v1GetLiterature
      parameters:
        - name: uid
          in: query
          description: Literature unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiteratureFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/literature/search:
    get:
      tags:
        - Literature
      description: Pagination over literature
      operationId: v1PageLiterature
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiteratureBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Literature
      description: Searching literature
      operationId: v1SearchLiterature
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Literature title
                earthlyOrigin:
                  type: boolean
                  description: Whether it should be of earthly origin
                shakespeareanWork:
                  type: boolean
                  description: Whether it should be a Shakespearean work
                report:
                  type: boolean
                  description: Whether it should be a report
                scientificLiterature:
                  type: boolean
                  description: Whether it should be a scientific literature
                technicalManual:
                  type: boolean
                  description: Whether it should be a technical manual
                religiousLiterature:
                  type: boolean
                  description: Whether it should be a religious literature
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiteratureBaseResponse'
  /v1/rest/location:
    get:
      tags:
        - Location
      description: Retrieval of a single location
      operationId: v1GetLocation
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Location unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/location/search:
    get:
      tags:
        - Location
      description: Pagination over locations
      operationId: v1PageLocations
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Location
      description: Searching locations
      operationId: v1SearchLocations
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Location name
                earthlyLocation:
                  type: boolean
                  description: Whether it should be an earthly location
                fictionalLocation:
                  type: boolean
                  description: Whether it should be a fictional location
                religiousLocation:
                  type: boolean
                  description: Whether it should be a religious location
                geographicalLocation:
                  type: boolean
                  description: Whether it should be a geographical location
                bodyOfWater:
                  type: boolean
                  description: Whether it should be a body of water
                country:
                  type: boolean
                  description: Whether it should be a country
                subnationalEntity:
                  type: boolean
                  description: Whether it should be a subnational entity
                settlement:
                  type: boolean
                  description: Whether it should be a settlement
                usSettlement:
                  type: boolean
                  description: Whether it should be a US settlement
                bajoranSettlement:
                  type: boolean
                  description: Whether it should be a Bajoran settlement
                colony:
                  type: boolean
                  description: Whether it should be a colony
                landform:
                  type: boolean
                  description: Whether it should be a landform
                landmark:
                  type: boolean
                  description: Whether it should be a landmark
                road:
                  type: boolean
                  description: Whether it should be a road
                structure:
                  type: boolean
                  description: Whether it should be a structure
                shipyard:
                  type: boolean
                  description: Whether it should be a shipyard
                buildingInterior:
                  type: boolean
                  description: Whether it should be a building interior
                establishment:
                  type: boolean
                  description: Whether it should be a establishment
                medicalEstablishment:
                  type: boolean
                  description: Whether it should be a medical establishment
                ds9Establishment:
                  type: boolean
                  description: Whether it should be a DS9 establishment
                school:
                  type: boolean
                  description: Whether it should be a school
                mirror:
                  type: boolean
                  description: Whether this location should be from mirror universe
                alternateReality:
                  type: boolean
                  description: Whether this location should be from alternate reality
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationBaseResponse'
  /v2/rest/location:
    get:
      tags:
        - Location
      description: Retrieval of a single location (V2)
      operationId: v2GetLocation
      parameters:
        - name: uid
          in: query
          description: Location unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/location/search:
    get:
      tags:
        - Location
      description: Pagination over locations (V2)
      operationId: v2PageLocations
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Location
      description: Searching locations (V2)
      operationId: v2SearchLocations
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Location name
                earthlyLocation:
                  type: boolean
                  description: Whether it should be an earthly location
                qonosLocation:
                  type: boolean
                  description: Whether it should be a Qo'nos location
                fictionalLocation:
                  type: boolean
                  description: Whether it should be a fictional location
                mythologicalLocation:
                  type: boolean
                  description: Whether it should be a mythological location
                religiousLocation:
                  type: boolean
                  description: Whether it should be a religious location
                geographicalLocation:
                  type: boolean
                  description: Whether it should be a geographical location
                bodyOfWater:
                  type: boolean
                  description: Whether it should be a body of water
                country:
                  type: boolean
                  description: Whether it should be a country
                subnationalEntity:
                  type: boolean
                  description: Whether it should be a subnational entity
                settlement:
                  type: boolean
                  description: Whether it should be a settlement
                usSettlement:
                  type: boolean
                  description: Whether it should be a US settlement
                bajoranSettlement:
                  type: boolean
                  description: Whether it should be a Bajoran settlement
                colony:
                  type: boolean
                  description: Whether it should be a colony
                landform:
                  type: boolean
                  description: Whether it should be a landform
                road:
                  type: boolean
                  description: Whether it should be a road
                structure:
                  type: boolean
                  description: Whether it should be a structure
                shipyard:
                  type: boolean
                  description: Whether it should be a shipyard
                buildingInterior:
                  type: boolean
                  description: Whether it should be a building interior
                establishment:
                  type: boolean
                  description: Whether it should be a establishment
                medicalEstablishment:
                  type: boolean
                  description: Whether it should be a medical establishment
                ds9Establishment:
                  type: boolean
                  description: Whether it should be a DS9 establishment
                school:
                  type: boolean
                  description: Whether it should be a school
                restaurant:
                  type: boolean
                  description: Whether it should be a restaurant
                residence:
                  type: boolean
                  description: Whether it should be a residence
                mirror:
                  type: boolean
                  description: Whether this location should be from mirror universe
                alternateReality:
                  type: boolean
                  description: Whether this location should be from alternate reality
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationV2BaseResponse'
  /v1/rest/magazine:
    get:
      tags:
        - Magazine
      description: Retrieval of a single magazine
      operationId: v1GetMagazine
      parameters:
        - name: uid
          in: query
          description: Magazine unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MagazineFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/magazine/search:
    get:
      tags:
        - Magazine
      description: Pagination over magazines
      operationId: v1PageMagazines
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MagazineBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Magazine
      description: Searching magazines
      operationId: v1SearchMagazines
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Magazine title
                publishedYearFrom:
                  type: integer
                  description: Starting year the magazine was published
                  format: int32
                publishedYearTo:
                  type: integer
                  description: Ending year the magazine was published
                  format: int32
                numberOfPagesFrom:
                  type: integer
                  description: Minimal number of pages
                  format: int32
                numberOfPagesTo:
                  type: integer
                  description: Maximal number of pages
                  format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MagazineBaseResponse'
  /v1/rest/magazineSeries:
    get:
      tags:
        - MagazineSeries
      description: Retrieval of a single magazine series
      operationId: v1GetMagazineSeries
      parameters:
        - name: uid
          in: query
          description: Magazine series unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MagazineSeriesFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/magazineSeries/search:
    get:
      tags:
        - MagazineSeries
      description: Pagination over magazine series
      operationId: v1PageMagazineSeries
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MagazineSeriesBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - MagazineSeries
      description: Searching magazine series
      operationId: v1SearchMagazineSeries
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Magazine series title
                publishedYearFrom:
                  type: integer
                  description: Starting year the magazine series was published
                  format: int32
                publishedYearTo:
                  type: integer
                  description: Ending year the magazine series was published
                  format: int32
                numberOfIssuesFrom:
                  type: integer
                  description: Minimal number of issues
                  format: int32
                numberOfIssuesTo:
                  type: integer
                  description: Maximal number of issues
                  format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MagazineSeriesBaseResponse'
  /v1/rest/material:
    get:
      tags:
        - Material
      description: Retrieval of a single material
      operationId: v1GetMaterial
      parameters:
        - name: uid
          in: query
          description: Material unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/material/search:
    get:
      tags:
        - Material
      description: Pagination over materials
      operationId: v1PageMaterials
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Material
      description: Searching materials
      operationId: v1SearchMaterials
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Material name
                chemicalCompound:
                  type: boolean
                  description: Whether it should be a chemical compound
                biochemicalCompound:
                  type: boolean
                  description: Whether it should be a biochemical compound
                drug:
                  type: boolean
                  description: Whether it should be a drug
                poisonousSubstance:
                  type: boolean
                  description: Whether it should be a poisonous substance
                explosive:
                  type: boolean
                  description: Whether it should be an explosive
                gemstone:
                  type: boolean
                  description: Whether it should be a gemstone
                alloyOrComposite:
                  type: boolean
                  description: Whether it should be an alloy or a composite
                fuel:
                  type: boolean
                  description: Whether it should be a fuel
                mineral:
                  type: boolean
                  description: Whether it should be a mineral
                preciousMaterial:
                  type: boolean
                  description: Whether it should be a precious material
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaterialBaseResponse'
  /v1/rest/medicalCondition:
    get:
      tags:
        - MedicalCondition
      description: Retrieval of a single medical condition
      operationId: v1GetMedicalCondition
      parameters:
        - name: uid
          in: query
          description: Medical condition unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalConditionFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/medicalCondition/search:
    get:
      tags:
        - MedicalCondition
      description: Pagination over medical conditions
      operationId: v1PageMedicalConditions
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalConditionBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - MedicalCondition
      description: Searching medical conditions
      operationId: v1SearchMedicalConditions
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Medical condition name
                psychologicalCondition:
                  type: boolean
                  description: Whether it should be a psychological condition
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalConditionBaseResponse'
  /v1/rest/movie:
    get:
      tags:
        - Movie
      description: Retrieval of a single movie
      operationId: v1GetMovie
      parameters:
        - name: uid
          in: query
          description: Movie unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/movie/search:
    get:
      tags:
        - Movie
      description: Pagination over movies
      operationId: v1PageMovies
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Movie
      description: Searching movies
      operationId: v1SearchMovies
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Movie title
                stardateFrom:
                  type: number
                  description: Starting stardate of movie story
                  format: float
                stardateTo:
                  type: number
                  description: Ending stardate of movie story
                  format: float
                yearFrom:
                  type: integer
                  description: Starting year of movie story
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of movie story
                  format: int32
                usReleaseDateFrom:
                  type: string
                  description: Minimal date the movie was first released in the United
                    States
                  format: date
                usReleaseDateTo:
                  type: string
                  description: Maximal date the movie was first released in the United
                    States
                  format: date
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieBaseResponse'
  /v1/rest/occupation:
    get:
      tags:
        - Occupation
      description: Retrieval of a single occupation
      operationId: v1GetOccupation
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Occupation unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccupationFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/occupation/search:
    get:
      tags:
        - Occupation
      description: Pagination over occupations
      operationId: v1PageOccupations
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccupationBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Occupation
      description: Searching occupations
      operationId: v1SearchOccupations
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Occupation name
                legalOccupation:
                  type: boolean
                  description: Whether it should be a legal occupation
                medicalOccupation:
                  type: boolean
                  description: Whether it should be a medical occupation
                scientificOccupation:
                  type: boolean
                  description: Whether it should be a scientific occupation
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccupationBaseResponse'
  /v2/rest/occupation:
    get:
      tags:
        - Occupation
      description: Retrieval of a single occupation (V2)
      operationId: v2GetOccupation
      parameters:
        - name: uid
          in: query
          description: Occupation unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccupationV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/occupation/search:
    get:
      tags:
        - Occupation
      description: Pagination over occupations (V2)
      operationId: v2PageOccupations
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccupationV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Occupation
      description: Searching occupations (V2)
      operationId: v2SearchOccupations
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Occupation name
                artsOccupation:
                  type: boolean
                  description: Whether it should be an arts occupation
                communicationOccupation:
                  type: boolean
                  description: Whether it should be a communication occupation
                economicOccupation:
                  type: boolean
                  description: Whether it should be an economic occupation
                educationOccupation:
                  type: boolean
                  description: Whether it should be an education occupation
                entertainmentOccupation:
                  type: boolean
                  description: Whether it should be an entertainment occupation
                illegalOccupation:
                  type: boolean
                  description: Whether it should be an illegal occupation
                legalOccupation:
                  type: boolean
                  description: Whether it should be a legal occupation
                medicalOccupation:
                  type: boolean
                  description: Whether it should be a medical occupation
                scientificOccupation:
                  type: boolean
                  description: Whether it should be a scientific occupation
                sportsOccupation:
                  type: boolean
                  description: Whether it should be a sports occupation
                victualOccupation:
                  type: boolean
                  description: Whether it should be a victual occupation
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccupationV2BaseResponse'
  /v1/rest/organization:
    get:
      tags:
        - Organization
      description: Retrieval of a single organization
      operationId: v1GetOrganization
      parameters:
        - name: uid
          in: query
          description: Organization unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/organization/search:
    get:
      tags:
        - Organization
      description: Pagination over organizations
      operationId: v1PageOrganizations
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Organization
      description: Searching organizations
      operationId: v1SearchOrganizations
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Organization name
                government:
                  type: boolean
                  description: Whether it should be a government
                intergovernmentalOrganization:
                  type: boolean
                  description: Whether it should be an intergovernmental organization
                researchOrganization:
                  type: boolean
                  description: Whether it should be a research organization
                sportOrganization:
                  type: boolean
                  description: Whether it should be a sport organization
                medicalOrganization:
                  type: boolean
                  description: Whether it should be a medical organization
                militaryOrganization:
                  type: boolean
                  description: Whether it should be a military organization
                militaryUnit:
                  type: boolean
                  description: Whether it should be a military unit
                governmentAgency:
                  type: boolean
                  description: Whether it should be a government agency
                lawEnforcementAgency:
                  type: boolean
                  description: Whether it should be a law enforcement agency
                prisonOrPenalColony:
                  type: boolean
                  description: Whether it should be a prison or penal colony
                mirror:
                  type: boolean
                  description: Whether this organization should be from mirror universe
                alternateReality:
                  type: boolean
                  description: Whether this organization should be from alternate reality
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationBaseResponse'
  /v1/rest/performer:
    get:
      tags:
        - Performer
      description: Retrieval of a single performer
      operationId: v1GetPerformer
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Performer unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformerFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/performer/search:
    get:
      tags:
        - Performer
      description: Pagination over performers
      operationId: v1PagePerformers
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformerBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Performer
      description: Searching performers
      operationId: v1SearchPerformers
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Performer name
                birthName:
                  type: string
                  description: Performer birth name
                gender:
                  type: string
                  description: Performer gender
                dateOfBirthFrom:
                  type: string
                  description: Minimal date the performer was born
                  format: date
                dateOfBirthTo:
                  type: string
                  description: Maximal date the performer was born
                  format: date
                placeOfBirth:
                  type: string
                  description: Place the performer was born
                dateOfDeathFrom:
                  type: string
                  description: Minimal date the performer died
                  format: date
                dateOfDeathTo:
                  type: string
                  description: Maximal date the performer died
                  format: date
                placeOfDeath:
                  type: string
                  description: Place the performer died
                animalPerformer:
                  type: boolean
                  description: Whether it should be an animal performer
                disPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in
                    Star Trek: Discovery'
                ds9Performer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in
                    Star Trek: Deep Space Nine'
                entPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in
                    Star Trek: Enterprise'
                filmPerformer:
                  type: boolean
                  description: Whether it should be a performer that appeared in a
                    Star Trek movie
                standInPerformer:
                  type: boolean
                  description: Whether it should be a stand-in performer
                stuntPerformer:
                  type: boolean
                  description: Whether it should be a stunt performer
                tasPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in
                    Star Trek: The Animated Series'
                tngPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in
                    Star Trek: The Next Generation'
                tosPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in
                    Star Trek: The Original Series'
                videoGamePerformer:
                  type: boolean
                  description: Whether it should be a video game performer
                voicePerformer:
                  type: boolean
                  description: Whether it should be a voice performer
                voyPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in
                    Star Trek: Voyager'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformerBaseResponse'
  /v2/rest/performer:
    get:
      tags:
        - Performer
      description: Retrieval of a single performer (V2)
      operationId: v2GetPerformer
      parameters:
        - name: uid
          in: query
          description: Performer unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformerV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/performer/search:
    get:
      tags:
        - Performer
      description: Pagination over performers (V2)
      operationId: v2PagePerformers
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformerV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Performer
      description: Searching performers (V2)
      operationId: v2SearchPerformers
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Performer name
                birthName:
                  type: string
                  description: Performer birth name
                gender:
                  type: string
                  description: Performer gender
                dateOfBirthFrom:
                  type: string
                  description: Minimal date the performer was born
                  format: date
                dateOfBirthTo:
                  type: string
                  description: Maximal date the performer was born
                  format: date
                placeOfBirth:
                  type: string
                  description: Place the performer was born
                dateOfDeathFrom:
                  type: string
                  description: Minimal date the performer died
                  format: date
                dateOfDeathTo:
                  type: string
                  description: Maximal date the performer died
                  format: date
                placeOfDeath:
                  type: string
                  description: Place the performer died
                animalPerformer:
                  type: boolean
                  description: Whether it should be an animal performer
                audiobookPerformer:
                  type: boolean
                  description: Whether it should be an audiobook performer
                cutPerformer:
                  type: boolean
                  description: Whether it should be a cut performer
                disPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: Discovery'
                ds9Performer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: Deep Space Nine'
                entPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: Enterprise'
                filmPerformer:
                  type: boolean
                  description: Whether it should be a performer that appeared in a
                    Star Trek movie
                ldPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: Lower Decks'
                picPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: Picard'
                proPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: Prodigy'
                puppeteer:
                  type: boolean
                  description: Whether it should be a puppeteer
                snwPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: Strange New Worlds'
                standInPerformer:
                  type: boolean
                  description: Whether it should be a stand-in performer
                stPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: Short Treks'
                stuntPerformer:
                  type: boolean
                  description: Whether it should be a stunt performer
                tasPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: The Animated Series'
                tngPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: The Next Generation'
                tosPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: The Original Series'
                videoGamePerformer:
                  type: boolean
                  description: Whether it should be a video game performer
                voicePerformer:
                  type: boolean
                  description: Whether it should be a voice performer
                voyPerformer:
                  type: boolean
                  description: 'Whether it should be a performer that appeared in Star Trek: Voyager'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformerV2BaseResponse'
  /v1/rest/season:
    get:
      tags:
        - Season
      description: Retrieval of a single season
      operationId: v1GetSeason
      parameters:
        - name: uid
          in: query
          description: Season unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/season/search:
    get:
      tags:
        - Season
      description: Pagination over seasons
      operationId: v1PageSeasons
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Season
      description: Searching seasons
      operationId: v1SearchSeasons
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Season title
                seasonNumberFrom:
                  type: integer
                  description: Minimal season number
                  format: int32
                seasonNumberTo:
                  type: integer
                  description: Maximal season number
                  format: int32
                numberOfEpisodesFrom:
                  type: integer
                  description: Minimal number of episodes in season
                  format: int32
                numberOfEpisodesTo:
                  type: integer
                  description: Maximal number of episodes in season
                  format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonBaseResponse'
  /v1/rest/series:
    get:
      tags:
        - Series
      description: Retrieval of a single series
      operationId: v1GetSeries
      parameters:
        - name: uid
          in: query
          description: Series unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/series/search:
    get:
      tags:
        - Series
      description: Pagination over series
      operationId: v1PageSeries
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Series
      description: Searching series
      operationId: v1SearchSeries
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Series title
                abbreviation:
                  type: string
                  description: Series abbreviation
                productionStartYearFrom:
                  type: integer
                  description: Minimal year the series production started
                  format: int32
                productionStartYearTo:
                  type: integer
                  description: Maximal year the series production started
                  format: int32
                productionEndYearFrom:
                  type: integer
                  description: Minimal year the series production ended
                  format: int32
                productionEndYearTo:
                  type: integer
                  description: Maximal year the series production ended
                  format: int32
                originalRunStartDateFrom:
                  type: string
                  description: Minimal date the series originally ran from
                  format: date
                originalRunStartDateTo:
                  type: string
                  description: Maximal date the series originally ran from
                  format: date
                originalRunEndDateFrom:
                  type: string
                  description: Minimal date the series originally ran to
                  format: date
                originalRunEndDateTo:
                  type: string
                  description: Maximal date the series originally ran to
                  format: date
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesBaseResponse'
  /v1/rest/soundtrack:
    get:
      tags:
        - Soundtrack
      description: Retrieval of a single soundtrack
      operationId: v1GetSoundtrack
      parameters:
        - name: uid
          in: query
          description: Soundtrack unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoundtrackFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/soundtrack/search:
    get:
      tags:
        - Soundtrack
      description: Pagination over soundtracks
      operationId: v1PageSoundtracks
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoundtrackBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Soundtrack
      description: Searching soundtracks
      operationId: v1SearchSoundtracks
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Soundtrack title
                releaseDateFrom:
                  type: string
                  description: Minimal release date
                  format: date
                releaseDateTo:
                  type: string
                  description: Maximal release date
                  format: date
                lengthFrom:
                  type: integer
                  description: Minimal length, in seconds
                  format: int32
                lengthTo:
                  type: integer
                  description: Maximal length, in seconds
                  format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoundtrackBaseResponse'
  /v1/rest/spacecraft:
    get:
      tags:
        - Spacecraft
      description: Retrieval of a single spacecraft
      operationId: v1GetSpacecraft
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Spacecraft unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/spacecraft/search:
    get:
      tags:
        - Spacecraft
      description: Pagination over spacecrafts
      operationId: v1PageSpacecrafts
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Spacecraft
      description: Searching spacecrafts
      operationId: v1SearchSpacecrafts
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Spacecraft name
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftBaseResponse'
  /v2/rest/spacecraft:
    get:
      tags:
        - Spacecraft
      description: Retrieval of a single spacecraft (V2)
      operationId: v2GetSpacecraft
      parameters:
        - name: uid
          in: query
          description: Spacecraft unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/spacecraft/search:
    get:
      tags:
        - Spacecraft
      description: Pagination over spacecrafts (V2)
      operationId: v2PageSpacecrafts
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Spacecraft
      description: Searching spacecrafts (V2)
      operationId: v2SearchSpacecrafts
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Spacecraft name
                registry:
                  type: string
                  description: Spacecraft registry
                status:
                  type: string
                  description: Spacecraft status
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftV2BaseResponse'
  /v1/rest/spacecraftClass:
    get:
      tags:
        - SpacecraftClass
      description: Retrieval of a single spacecraft class
      operationId: v1GetSpacecraftClass
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: SpacecraftClass unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftClassFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/spacecraftClass/search:
    get:
      tags:
        - SpacecraftClass
      description: Pagination over spacecraft classes
      operationId: v1PageSpacecraftClasses
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftClassBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - SpacecraftClass
      description: Searching spacecraft classes
      operationId: v1SearchSpacecraftClasses
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Spacecraft class name
                warpCapableSpecies:
                  type: boolean
                  description: Whether it should be a warp-capable spacecraft class
                alternateReality:
                  type: boolean
                  description: Whether this spacecraft class should be from alternate
                    reality
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftClassBaseResponse'
  /v2/rest/spacecraftClass:
    get:
      tags:
        - SpacecraftClass
      description: Retrieval of a single spacecraft class (V2)
      operationId: v2GetSpacecraftClass
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: SpacecraftClass unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftClassV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/spacecraftClass/search:
    get:
      tags:
        - SpacecraftClass
      description: Pagination over spacecraft classes (V2)
      operationId: v2PageSpacecraftClasses
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftClassV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - SpacecraftClass
      description: Searching spacecraft classes (V2)
      operationId: v2SearchSpacecraftClasses
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Spacecraft class name
                warpCapableSpecies:
                  type: boolean
                  description: Whether it should be a warp-capable spacecraft class
                mirror:
                  type: boolean
                  description: Whether this spacecraft class should be from mirror universe
                alternateReality:
                  type: boolean
                  description: Whether this spacecraft class should be from alternate reality
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftClassV2BaseResponse'
  /v3/rest/spacecraftClass:
    get:
      tags:
        - SpacecraftClass
      description: Retrieval of a single spacecraft class (V3)
      operationId: v3GetSpacecraftClass
      parameters:
        - name: uid
          in: query
          description: Spacecraft class unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftClassV3FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/species:
    get:
      tags:
        - Species
      description: Retrieval of a single species
      operationId: v1GetSpecies
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Species unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeciesFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/species/search:
    get:
      tags:
        - Species
      description: Pagination over species
      operationId: v1PageSpecies
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeciesBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Species
      description: Searching species
      operationId: v1SearchSpecies
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Species name
                extinctSpecies:
                  type: boolean
                  description: Whether it should be an extinct species
                warpCapableSpecies:
                  type: boolean
                  description: Whether it should be a warp-capable species
                extraGalacticSpecies:
                  type: boolean
                  description: Whether it should be an extra-galactic species
                humanoidSpecies:
                  type: boolean
                  description: Whether it should be a humanoid species
                reptilianSpecies:
                  type: boolean
                  description: Whether it should be a reptilian species
                nonCorporealSpecies:
                  type: boolean
                  description: Whether it should be a non-corporeal species
                shapeshiftingSpecies:
                  type: boolean
                  description: Whether it should be a shapeshifting species
                spaceborneSpecies:
                  type: boolean
                  description: Whether it should be a spaceborne species
                telepathicSpecies:
                  type: boolean
                  description: Whether it should be a telepathic species
                transDimensionalSpecies:
                  type: boolean
                  description: Whether it should be a trans-dimensional species
                unnamedSpecies:
                  type: boolean
                  description: Whether it should be a unnamed species
                alternateReality:
                  type: boolean
                  description: Whether this species should be from alternate reality
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeciesBaseResponse'
  /v2/rest/species:
    get:
      tags:
        - Species
      description: Retrieval of a single species (V2)
      operationId: v2GetSpecies
      parameters:
        - name: uid
          in: query
          description: Species unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeciesV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/species/search:
    get:
      tags:
        - Species
      description: Pagination over species (V2)
      operationId: v2PageSpecies
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeciesV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Species
      description: Searching species (V2)
      operationId: v2SearchSpecies
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Species name
                extinctSpecies:
                  type: boolean
                  description: Whether it should be an extinct species
                warpCapableSpecies:
                  type: boolean
                  description: Whether it should be a warp-capable species
                extraGalacticSpecies:
                  type: boolean
                  description: Whether it should be an extra-galactic species
                humanoidSpecies:
                  type: boolean
                  description: Whether it should be a humanoid species
                reptilianSpecies:
                  type: boolean
                  description: Whether it should be a reptilian species
                avianSpecies:
                  type: boolean
                  description: Whether it should be an avian species
                nonCorporealSpecies:
                  type: boolean
                  description: Whether it should be a non-corporeal species
                shapeshiftingSpecies:
                  type: boolean
                  description: Whether it should be a shapeshifting species
                spaceborneSpecies:
                  type: boolean
                  description: Whether it should be a spaceborne species
                telepathicSpecies:
                  type: boolean
                  description: Whether it should be a telepathic species
                transDimensionalSpecies:
                  type: boolean
                  description: Whether it should be a trans-dimensional species
                unnamedSpecies:
                  type: boolean
                  description: Whether it should be a unnamed species
                alternateReality:
                  type: boolean
                  description: Whether this species should be from alternate reality
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeciesV2BaseResponse'
  /v1/rest/staff:
    get:
      tags:
        - Staff
      description: Retrieval of a single staff member
      operationId: v1GetStaff
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Staff unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/staff/search:
    get:
      tags:
        - Staff
      description: Pagination over staff members
      operationId: v1PageStaff
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Staff
      description: Searching staff members
      operationId: v1SearchStaff
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Staff name
                birthName:
                  type: string
                  description: Staff birth name
                gender:
                  type: string
                  description: Staff gender
                dateOfBirthFrom:
                  type: string
                  description: Minimal date the staff was born
                  format: date
                dateOfBirthTo:
                  type: string
                  description: Maximal date the staff was born
                  format: date
                placeOfBirth:
                  type: string
                  description: Place the staff was born
                dateOfDeathFrom:
                  type: string
                  description: Minimal date the staff died
                  format: date
                dateOfDeathTo:
                  type: string
                  description: Maximal date the staff died
                  format: date
                placeOfDeath:
                  type: string
                  description: Place the staff died
                artDepartment:
                  type: boolean
                  description: Whether this person should be from art department
                artDirector:
                  type: boolean
                  description: Whether this person should be an art director
                productionDesigner:
                  type: boolean
                  description: Whether this person should be a production designer
                cameraAndElectricalDepartment:
                  type: boolean
                  description: Whether this person should be from camera and electrical
                    department
                cinematographer:
                  type: boolean
                  description: Whether this person should be a cinematographer
                castingDepartment:
                  type: boolean
                  description: Whether this person should be from casting department
                costumeDepartment:
                  type: boolean
                  description: Whether this person should be from costume department
                costumeDesigner:
                  type: boolean
                  description: Whether this person should be a custume designer
                director:
                  type: boolean
                  description: Whether this person should be a director
                assistantOrSecondUnitDirector:
                  type: boolean
                  description: Whether this person should be an assistant or second unit director director
                exhibitAndAttractionStaff:
                  type: boolean
                  description: Whether this person should be an exhibit and attraction
                    staff
                filmEditor:
                  type: boolean
                  description: Whether this person should be a film editor
                linguist:
                  type: boolean
                  description: Whether this person should be a linguist
                locationStaff:
                  type: boolean
                  description: Whether this person should be a location staff
                makeupStaff:
                  type: boolean
                  description: Whether this person should be a make-up staff
                musicDepartment:
                  type: boolean
                  description: Whether this person should be from music department
                composer:
                  type: boolean
                  description: Whether this person should be a composer
                personalAssistant:
                  type: boolean
                  description: Whether this person should be a personal assistant
                producer:
                  type: boolean
                  description: Whether this person should be a producer
                productionAssociate:
                  type: boolean
                  description: Whether this person should be a production associate
                productionStaff:
                  type: boolean
                  description: Whether this person should be a production staff
                publicationStaff:
                  type: boolean
                  description: Whether this person should be a publication staff
                scienceConsultant:
                  type: boolean
                  description: Whether this person should be a science consultant
                soundDepartment:
                  type: boolean
                  description: Whether this person should be from sound department
                specialAndVisualEffectsStaff:
                  type: boolean
                  description: Whether this person should be a special and visual
                    effects staff
                author:
                  type: boolean
                  description: Whether this person should be an author
                audioAuthor:
                  type: boolean
                  description: Whether this person should be an audio author
                calendarArtist:
                  type: boolean
                  description: Whether this person should be a calendar artist
                comicArtist:
                  type: boolean
                  description: Whether this person should be a comic artist
                comicAuthor:
                  type: boolean
                  description: Whether this person should be a comic author
                comicColorArtist:
                  type: boolean
                  description: Whether this person should be a comic color artist
                comicInteriorArtist:
                  type: boolean
                  description: Whether this person should be a comic interior artist
                comicInkArtist:
                  type: boolean
                  description: Whether this person should be a comic ink artist
                comicPencilArtist:
                  type: boolean
                  description: Whether this person should be a comic pencil artist
                comicLetterArtist:
                  type: boolean
                  description: Whether this person should be a comic letter artist
                comicStripArtist:
                  type: boolean
                  description: Whether this person should be a comic strip artist
                gameArtist:
                  type: boolean
                  description: Whether this person should be a game artist
                gameAuthor:
                  type: boolean
                  description: Whether this person should be a game author
                novelArtist:
                  type: boolean
                  description: Whether this person should be a novel artist
                novelAuthor:
                  type: boolean
                  description: Whether this person should be a novel author
                referenceArtist:
                  type: boolean
                  description: Whether this person should be a reference artist
                referenceAuthor:
                  type: boolean
                  description: Whether this person should be a reference author
                publicationArtist:
                  type: boolean
                  description: Whether this person should be a publication artist
                publicationDesigner:
                  type: boolean
                  description: Whether this person should be a publication designer
                publicationEditor:
                  type: boolean
                  description: Whether this person should be a publication editor
                publicityArtist:
                  type: boolean
                  description: Whether this person should be a publicity artist
                cbsDigitalStaff:
                  type: boolean
                  description: Whether this person should be a part of CBS digital
                    staff
                ilmProductionStaff:
                  type: boolean
                  description: Whether this person should be a part of ILM production
                    staff
                specialFeaturesStaff:
                  type: boolean
                  description: Whether this person should be a special features artist
                storyEditor:
                  type: boolean
                  description: Whether this person should be a story editor
                studioExecutive:
                  type: boolean
                  description: Whether this person should be a studio executive
                stuntDepartment:
                  type: boolean
                  description: Whether this person should be from stunt department
                transportationDepartment:
                  type: boolean
                  description: Whether this person should be from transportation department
                videoGameProductionStaff:
                  type: boolean
                  description: Whether this person is video game production staff
                writer:
                  type: boolean
                  description: Whether this person should be a writer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffBaseResponse'
  /v2/rest/staff:
    get:
      tags:
        - Staff
      description: Retrieval of a single staff member (V2)
      operationId: v2GetStaff
      parameters:
        - name: uid
          in: query
          description: Staff unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/staff/search:
    get:
      tags:
        - Staff
      description: Pagination over staff members (V2)
      operationId: v2PageStaff
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Staff
      description: Searching staff members (v2)
      operationId: v2SearchStaff
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Staff name
                birthName:
                  type: string
                  description: Staff birth name
                gender:
                  type: string
                  description: Staff gender
                dateOfBirthFrom:
                  type: string
                  description: Minimal date the staff was born
                  format: date
                dateOfBirthTo:
                  type: string
                  description: Maximal date the staff was born
                  format: date
                placeOfBirth:
                  type: string
                  description: Place the staff was born
                dateOfDeathFrom:
                  type: string
                  description: Minimal date the staff died
                  format: date
                dateOfDeathTo:
                  type: string
                  description: Maximal date the staff died
                  format: date
                placeOfDeath:
                  type: string
                  description: Place the staff died
                artDepartment:
                  type: boolean
                  description: Whether this person should be from art department
                artDirector:
                  type: boolean
                  description: Whether this person should be an art director
                productionDesigner:
                  type: boolean
                  description: Whether this person should be a production designer
                cameraAndElectricalDepartment:
                  type: boolean
                  description: Whether this person should be from camera and electrical
                    department
                cinematographer:
                  type: boolean
                  description: Whether this person should be a cinematographer
                castingDepartment:
                  type: boolean
                  description: Whether this person should be from casting department
                costumeDepartment:
                  type: boolean
                  description: Whether this person should be from costume department
                costumeDesigner:
                  type: boolean
                  description: Whether this person should be a custume designer
                director:
                  type: boolean
                  description: Whether this person should be a director
                assistantOrSecondUnitDirector:
                  type: boolean
                  description: Whether this person should be an assistant or second unit director director
                exhibitAndAttractionStaff:
                  type: boolean
                  description: Whether this person should be an exhibit and attraction
                    staff
                filmEditor:
                  type: boolean
                  description: Whether this person should be a film editor
                filmationProductionStaff:
                  type: boolean
                  description: Whether this person should be a part of Filmation production
                    staff
                linguist:
                  type: boolean
                  description: Whether this person should be a linguist
                locationStaff:
                  type: boolean
                  description: Whether this person should be a location staff
                makeupStaff:
                  type: boolean
                  description: Whether this person should be a make-up staff
                merchandiseStaff:
                  type: boolean
                  description: Whether this person should be a merchandise staff
                musicDepartment:
                  type: boolean
                  description: Whether this person should be from music department
                composer:
                  type: boolean
                  description: Whether this person should be a composer
                personalAssistant:
                  type: boolean
                  description: Whether this person should be a personal assistant
                producer:
                  type: boolean
                  description: Whether this person should be a producer
                productionAssociate:
                  type: boolean
                  description: Whether this person should be a production associate
                productionStaff:
                  type: boolean
                  description: Whether this person should be a production staff
                publicationStaff:
                  type: boolean
                  description: Whether this person should be a publication staff
                scienceConsultant:
                  type: boolean
                  description: Whether this person should be a science consultant
                soundDepartment:
                  type: boolean
                  description: Whether this person should be from sound department
                specialAndVisualEffectsStaff:
                  type: boolean
                  description: Whether this person should be a special and visual
                    effects staff
                author:
                  type: boolean
                  description: Whether this person should be an author
                audioAuthor:
                  type: boolean
                  description: Whether this person should be an audio author
                calendarArtist:
                  type: boolean
                  description: Whether this person should be a calendar artist
                comicArtist:
                  type: boolean
                  description: Whether this person should be a comic artist
                comicAuthor:
                  type: boolean
                  description: Whether this person should be a comic author
                comicColorArtist:
                  type: boolean
                  description: Whether this person should be a comic color artist
                comicCoverArtist:
                  type: boolean
                  description: Whether this person should be a comic cover artist
                comicInteriorArtist:
                  type: boolean
                  description: Whether this person should be a comic interior artist
                comicInkArtist:
                  type: boolean
                  description: Whether this person should be a comic ink artist
                comicPencilArtist:
                  type: boolean
                  description: Whether this person should be a comic pencil artist
                comicLetterArtist:
                  type: boolean
                  description: Whether this person should be a comic letter artist
                comicStripArtist:
                  type: boolean
                  description: Whether this person should be a comic strip artist
                gameArtist:
                  type: boolean
                  description: Whether this person should be a game artist
                gameAuthor:
                  type: boolean
                  description: Whether this person should be a game author
                novelArtist:
                  type: boolean
                  description: Whether this person should be a novel artist
                novelAuthor:
                  type: boolean
                  description: Whether this person should be a novel author
                referenceArtist:
                  type: boolean
                  description: Whether this person should be a reference artist
                referenceAuthor:
                  type: boolean
                  description: Whether this person should be a reference author
                publicationArtist:
                  type: boolean
                  description: Whether this person should be a publication artist
                publicationDesigner:
                  type: boolean
                  description: Whether this person should be a publication designer
                publicationEditor:
                  type: boolean
                  description: Whether this person should be a publication editor
                publicityArtist:
                  type: boolean
                  description: Whether this person should be a publicity artist
                cbsDigitalStaff:
                  type: boolean
                  description: Whether this person should be a part of CBS digital
                    staff
                ilmProductionStaff:
                  type: boolean
                  description: Whether this person should be a part of ILM production
                    staff
                specialFeaturesStaff:
                  type: boolean
                  description: Whether this person should be a special features artist
                storyEditor:
                  type: boolean
                  description: Whether this person should be a story editor
                studioExecutive:
                  type: boolean
                  description: Whether this person should be a studio executive
                stuntDepartment:
                  type: boolean
                  description: Whether this person should be from stunt department
                transportationDepartment:
                  type: boolean
                  description: Whether this person should be from transportation department
                videoGameProductionStaff:
                  type: boolean
                  description: Whether this person is video game production staff
                writer:
                  type: boolean
                  description: Whether this person should be a writer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffV2BaseResponse'
  /v1/rest/technology:
    get:
      tags:
        - Technology
      description: Retrieval of a single technology piece
      operationId: v1GetTechnology
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Technology unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechnologyFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/technology/search:
    get:
      tags:
        - Technology
      description: Pagination over technology pieces
      operationId: v1PageTechnology
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechnologyBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Technology
      description: Searching technology pieces
      operationId: v1SearchTechnology
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Technology name
                borgTechnology:
                  type: boolean
                  description: Whether it should be a Borg technology
                borgComponent:
                  type: boolean
                  description: Whether it should be a Borg component
                communicationsTechnology:
                  type: boolean
                  description: Whether it should be a communications technology
                computerTechnology:
                  type: boolean
                  description: Whether it should be a computer technology
                computerProgramming:
                  type: boolean
                  description: Whether it should be a technology related to computer programming
                subroutine:
                  type: boolean
                  description: Whether it should be a subroutine
                database:
                  type: boolean
                  description: Whether it should be a database
                energyTechnology:
                  type: boolean
                  description: Whether it should be a energy technology
                fictionalTechnology:
                  type: boolean
                  description: Whether it should be a fictional technology
                holographicTechnology:
                  type: boolean
                  description: Whether it should be a holographic technology
                identificationTechnology:
                  type: boolean
                  description: Whether it should be a identification technology
                lifeSupportTechnology:
                  type: boolean
                  description: Whether it should be a life support technology
                sensorTechnology:
                  type: boolean
                  description: Whether it should be a sensor technology
                shieldTechnology:
                  type: boolean
                  description: Whether it should be a shield technology
                tool:
                  type: boolean
                  description: Whether it should be a tool
                culinaryTool:
                  type: boolean
                  description: Whether it should be a culinary tool
                engineeringTool:
                  type: boolean
                  description: Whether it should be a engineering tool
                householdTool:
                  type: boolean
                  description: Whether it should be a household tool
                medicalEquipment:
                  type: boolean
                  description: Whether it should be a medical equipment
                transporterTechnology:
                  type: boolean
                  description: Whether it's a transporter technology
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechnologyBaseResponse'
  /v2/rest/technology:
    get:
      tags:
        - Technology
      description: Retrieval of a single technology piece (V2)
      operationId: v2GetTechnology
      parameters:
        - name: uid
          in: query
          description: Technology unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechnologyV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/technology/search:
    get:
      tags:
        - Technology
      description: Pagination over technology pieces (V2)
      operationId: v2PageTechnology
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechnologyV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Technology
      description: Searching technology pieces (V2)
      operationId: v2SearchTechnology
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Technology name
                borgTechnology:
                  type: boolean
                  description: Whether it should be a Borg technology
                borgComponent:
                  type: boolean
                  description: Whether it should be a Borg component
                communicationsTechnology:
                  type: boolean
                  description: Whether it should be a communications technology
                computerTechnology:
                  type: boolean
                  description: Whether it should be a computer technology
                computerProgramming:
                  type: boolean
                  description: Whether it should be a technology related to computer programming
                subroutine:
                  type: boolean
                  description: Whether it should be a subroutine
                database:
                  type: boolean
                  description: Whether it should be a database
                energyTechnology:
                  type: boolean
                  description: Whether it should be a energy technology
                fictionalTechnology:
                  type: boolean
                  description: Whether it should be a fictional technology
                holographicTechnology:
                  type: boolean
                  description: Whether it should be a holographic technology
                identificationTechnology:
                  type: boolean
                  description: Whether it should be a identification technology
                lifeSupportTechnology:
                  type: boolean
                  description: Whether it should be a life support technology
                sensorTechnology:
                  type: boolean
                  description: Whether it should be a sensor technology
                shieldTechnology:
                  type: boolean
                  description: Whether it should be a shield technology
                securityTechnology:
                  type: boolean
                  description: Whether it should be a security technology
                propulsionTechnology:
                  type: boolean
                  description: Whether it should be a propulsion technology
                spacecraftComponent:
                  type: boolean
                  description: Whether it should be a spacecraft component
                warpTechnology:
                  type: boolean
                  description: Whether it should be a warp technology
                transwarpTechnology:
                  type: boolean
                  description: Whether it should be a transwarp technology
                timeTravelTechnology:
                  type: boolean
                  description: Whether it should be a time travel technology
                militaryTechnology:
                  type: boolean
                  description: Whether it should be a military technology
                victualTechnology:
                  type: boolean
                  description: Whether it should be a victual technology
                tool:
                  type: boolean
                  description: Whether it should be a tool
                culinaryTool:
                  type: boolean
                  description: Whether it should be a culinary tool
                engineeringTool:
                  type: boolean
                  description: Whether it should be a engineering tool
                householdTool:
                  type: boolean
                  description: Whether it should be a household tool
                medicalEquipment:
                  type: boolean
                  description: Whether it should be a medical equipment
                transporterTechnology:
                  type: boolean
                  description: Whether it's a transporter technology
                transportationTechnology:
                  type: boolean
                  description: Whether it's a transportation technology
                weaponComponent:
                  type: boolean
                  description: Whether it's a weapon component
                artificialLifeformComponent:
                  type: boolean
                  description: Whether it's an artificial lifeform component
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TechnologyV2BaseResponse'
  /v1/rest/title:
    get:
      tags:
        - Title
      description: Retrieval of a single title
      operationId: v1GetTitle
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Title unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitleFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/title/search:
    get:
      tags:
        - Title
      description: Pagination over titles
      operationId: v1PageTitles
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitleBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Title
      description: Searching titles
      operationId: v1SearchTitles
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Title name
                militaryRank:
                  type: boolean
                  description: Whether it should be a military rank
                fleetRank:
                  type: boolean
                  description: Whether it should be a fleet rank
                religiousTitle:
                  type: boolean
                  description: Whether it should be a religious title
                position:
                  type: boolean
                  description: Whether it should be a position
                mirror:
                  type: boolean
                  description: Whether this title should be from mirror universe
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitleBaseResponse'
  /v2/rest/title:
    get:
      tags:
        - Title
      description: Retrieval of a single title (V2)
      operationId: v2GetTitle
      parameters:
        - name: uid
          in: query
          description: Title unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitleV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/title/search:
    get:
      tags:
        - Title
      description: Pagination over titles (V2)
      operationId: v2PageTitles
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitleV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Title
      description: Searching titles (V2)
      operationId: v2SearchTitles
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Title name
                militaryRank:
                  type: boolean
                  description: Whether it should be a military rank
                fleetRank:
                  type: boolean
                  description: Whether it should be a fleet rank
                religiousTitle:
                  type: boolean
                  description: Whether it should be a religious title
                educationTitle:
                  type: boolean
                  description: Whether it should be a education title
                mirror:
                  type: boolean
                  description: Whether this title should be from mirror universe
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitleV2BaseResponse'
  /v1/rest/tradingCard:
    get:
      tags:
        - TradingCard
      description: Retrieval of a single trading card
      operationId: v1GetTradingCard
      parameters:
        - name: uid
          in: query
          description: Trading card unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingCardFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/tradingCard/search:
    get:
      tags:
        - TradingCard
      description: Pagination over trading cards
      operationId: v1PageTradingCards
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingCardBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - TradingCard
      description: Searching trading cards
      operationId: v1SearchTradingCards
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Trading card name
                tradingCardDeckUid:
                  type: string
                  description: UID of trading card deck
                tradingCardSetUid:
                  type: string
                  description: UID of trading card set
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingCardBaseResponse'
  /v1/rest/tradingCardDeck:
    get:
      tags:
        - TradingCardDeck
      description: Retrieval of a single trading card deck
      operationId: v1GetTradingCardDeck
      parameters:
        - name: uid
          in: query
          description: trading card deck unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingCardDeckFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/tradingCardDeck/search:
    get:
      tags:
        - TradingCardDeck
      description: Pagination over trading card decks
      operationId: v1PageTradingCardDecks
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingCardDeckBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - TradingCardDeck
      description: Searching trading card decks
      operationId: v1SearchTradingCardDecks
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Trading card deck name
                tradingCardSetUid:
                  type: string
                  description: UID of trading card set
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingCardDeckBaseResponse'
  /v1/rest/tradingCardSet:
    get:
      tags:
        - TradingCardSet
      description: Retrieval of a single trading card set
      operationId: v1GetTradingCardSet
      parameters:
        - name: uid
          in: query
          description: Trading card set unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingCardSetFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/tradingCardSet/search:
    get:
      tags:
        - TradingCardSet
      description: Pagination over trading card sets
      operationId: v1PageTradingCardSets
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingCardSetBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - TradingCardSet
      description: Searching trading card sets
      operationId: v1SearchTradingCardSets
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Trading card set name
                releaseYearFrom:
                  type: integer
                  description: Starting year the trading card set was released
                  format: int32
                releaseYearTo:
                  type: integer
                  description: Ending year the trading card set was released
                  format: int32
                cardsPerPackFrom:
                  type: integer
                  description: Minimal number of cards per deck
                  format: int32
                cardsPerPackTo:
                  type: integer
                  description: Minimal number of cards per deck
                  format: int32
                packsPerBoxFrom:
                  type: integer
                  description: Minimal number of packs per box
                  format: int32
                packsPerBoxTo:
                  type: integer
                  description: Minimal number of packs per box
                  format: int32
                boxesPerCaseFrom:
                  type: integer
                  description: Minimal number of boxes per case
                  format: int32
                boxesPerCaseTo:
                  type: integer
                  description: Minimal number of boxes per case
                  format: int32
                productionRunFrom:
                  type: integer
                  description: Minimal production run
                  format: int32
                productionRunTo:
                  type: integer
                  description: Minimal production run
                  format: int32
                productionRunUnit:
                  type: string
                  description: Production run unit
                cardWidthFrom:
                  type: number
                  description: Minimal card width, in inches
                  format: double
                cardWidthTo:
                  type: number
                  description: Minimal card width, in inches
                  format: double
                cardHeightFrom:
                  type: number
                  description: Minimal card height, in inches
                  format: double
                cardHeightTo:
                  type: number
                  description: Minimal card height, in inches
                  format: double
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingCardSetBaseResponse'
  /v1/rest/videoGame:
    get:
      tags:
        - VideoGame
      description: Retrieval of a single video game
      operationId: v1GetVideoGame
      parameters:
        - name: uid
          in: query
          description: VideoGame unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoGameFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/videoGame/search:
    get:
      tags:
        - VideoGame
      description: Pagination over video games
      operationId: v1PageVideoGames
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoGameBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - VideoGame
      description: Searching video games
      operationId: v1SearchVideoGames
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Video game title
                releaseDateFrom:
                  type: string
                  description: Minimal date the video game was first released
                  format: date
                releaseDateTo:
                  type: string
                  description: Minimal date the video game was first released
                  format: date
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoGameBaseResponse'
  /v1/rest/videoRelease:
    get:
      tags:
        - VideoRelease
      description: Retrieval of a single video release
      operationId: v1GetVideoRelease
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Video release unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoReleaseFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/videoRelease/search:
    get:
      tags:
        - VideoRelease
      description: Pagination over video releases
      operationId: v1PageVideoReleases
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoReleaseBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - VideoRelease
      description: Searching video releases
      operationId: v1SearchVideoReleases
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Video release title
                yearFrom:
                  type: integer
                  description: Starting year of video release story
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of video release story
                  format: int32
                runTimeFrom:
                  type: integer
                  description: Minimal run time, in minutes
                  format: int32
                runTimeTo:
                  type: integer
                  description: Minimal run time, in minutes
                  format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoReleaseBaseResponse'
  /v2/rest/videoRelease:
    get:
      tags:
        - VideoRelease
      description: Retrieval of a single video release (V2)
      operationId: v2GetVideoRelease
      parameters:
        - name: uid
          in: query
          description: Video release unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoReleaseV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/videoRelease/search:
    get:
      tags:
        - VideoRelease
      description: Pagination over video releases (V2)
      operationId: v2PageVideoReleases
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoReleaseBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - VideoRelease
      description: Searching video releases (V2)
      operationId: v2SearchVideoReleases
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  type: string
                  description: Video release title
                yearFrom:
                  type: integer
                  description: Starting year of video release story
                  format: int32
                yearTo:
                  type: integer
                  description: Ending year of video release story
                  format: int32
                runTimeFrom:
                  type: integer
                  description: Minimal run time, in minutes
                  format: int32
                runTimeTo:
                  type: integer
                  description: Minimal run time, in minutes
                  format: int32
                documentary:
                  type: boolean
                  description: Whether it should be a documentary
                specialFeatures:
                  type: boolean
                  description: Whether it should contain special features
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoReleaseV2BaseResponse'
  /v1/rest/weapon:
    get:
      tags:
        - Weapon
      description: Retrieval of a single weapon
      operationId: v1GetWeapon
      deprecated: true
      parameters:
        - name: uid
          in: query
          description: Weapon unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeaponFullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/weapon/search:
    get:
      tags:
        - Weapon
      description: Pagination over weapons
      operationId: v1PageWeapons
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeaponBaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Weapon
      description: Searching weapons
      operationId: v1SearchWeapons
      deprecated: true
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Weapon name
                handHeldWeapon:
                  type: boolean
                  description: Whether it should be a hand-help weapon
                laserTechnology:
                  type: boolean
                  description: Whether it should be a laser technology
                plasmaTechnology:
                  type: boolean
                  description: Whether it should be a plasma technology
                photonicTechnology:
                  type: boolean
                  description: Whether it should be a photonic technology
                phaserTechnology:
                  type: boolean
                  description: Whether it should be a phaser technology
                mirror:
                  type: boolean
                  description: Whether this weapon should be from mirror universe
                alternateReality:
                  type: boolean
                  description: Whether this weapon should be from alternate reality
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeaponBaseResponse'
  /v2/rest/weapon:
    get:
      tags:
        - Weapon
      description: Retrieval of a single weapon (V2)
      operationId: v2GetWeapon
      parameters:
        - name: uid
          in: query
          description: Weapon unique ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeaponV2FullResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/weapon/search:
    get:
      tags:
        - Weapon
      description: Pagination over weapons (V2)
      operationId: v2PageWeapons
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeaponV2BaseResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Weapon
      description: Searching weapons (V2)
      operationId: v2SearchWeapons
      parameters:
        - name: pageNumber
          in: query
          description: Zero-based page number
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting, serialized like this: fieldName,ASC;anotherFieldName,DESC'
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Weapon name
                handHeldWeapon:
                  type: boolean
                  description: Whether it should be a hand-help weapon
                laserTechnology:
                  type: boolean
                  description: Whether it should be a laser technology
                plasmaTechnology:
                  type: boolean
                  description: Whether it should be a plasma technology
                photonicTechnology:
                  type: boolean
                  description: Whether it should be a photonic technology
                phaserTechnology:
                  type: boolean
                  description: Whether it should be a phaser technology
                directedEnergyWeapon:
                  type: boolean
                  description: Whether it should be a directed energy weapon
                explosiveWeapon:
                  type: boolean
                  description: Whether it should be an explosive weapon
                projectileWeapon:
                  type: boolean
                  description: Whether it should be a projectile weapon
                fictionalWeapon:
                  type: boolean
                  description: Whether it should be a fictional weapon
                mirror:
                  type: boolean
                  description: Whether this weapon should be from mirror universe
                alternateReality:
                  type: boolean
                  description: Whether this weapon should be from alternate reality
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeaponV2BaseResponse'
components:
  schemas:
    AnimalSearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Animal name
        earthAnimal:
          type: boolean
          description: Whether it should be an earth animal
        earthInsect:
          type: boolean
          description: Whether it should be an earth insect
        avian:
          type: boolean
          description: Whether it should be an avian
        canine:
          type: boolean
          description: Whether it should be a canine
        feline:
          type: boolean
          description: Whether it should be a feline
    AnimalHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Animal unique ID
        name:
          type: string
          description: Animal name
      description: Header animal, embedded in other objects
    AnimalBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Animal unique ID
        name:
          type: string
          description: Animal name
        earthAnimal:
          type: boolean
          description: Whether it's an earth animal
        earthInsect:
          type: boolean
          description: Whether it's an earth insect
        avian:
          type: boolean
          description: Whether it's an avian
        canine:
          type: boolean
          description: Whether it's a canine
        feline:
          type: boolean
          description: Whether it's a feline
      description: Base animal, returned in search results
    AnimalFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Animal unique ID
        name:
          type: string
          description: Animal name
        earthAnimal:
          type: boolean
          description: Whether it's an earth animal
        earthInsect:
          type: boolean
          description: Whether it's an earth insect
        avian:
          type: boolean
          description: Whether it's an avian
        canine:
          type: boolean
          description: Whether it's a canine
        feline:
          type: boolean
          description: Whether it's a feline
      description: Full animal, returned when queried using UID
    AnimalBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        animals:
          type: array
          description: List of animals matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/AnimalBase'
      description: Response object for animals search
    AnimalFullResponse:
      type: object
      properties:
        animal:
          $ref: '#/components/schemas/AnimalFull'
      description: Response object for single animal query
    AstronomicalObjectHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Astronomical object's unique ID
        name:
          type: string
          description: Astronomical object name
      description: Header astronomical object, embedded in other objects
    AstronomicalObjectBase:
      required:
        - astronomicalObjectType
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Astronomical object's unique ID
        name:
          type: string
          description: Astronomical object name
        astronomicalObjectType:
          $ref: '#/components/schemas/AstronomicalObjectType'
        location:
          $ref: '#/components/schemas/AstronomicalObjectHeader'
      description: Base astronomical object, returned in search results
    AstronomicalObjectFull:
      required:
        - astronomicalObjects
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Astronomical object's unique ID
        name:
          type: string
          description: Astronomical object name
        astronomicalObjectType:
          $ref: '#/components/schemas/AstronomicalObjectType'
        location:
          $ref: '#/components/schemas/AstronomicalObjectBase'
        astronomicalObjects:
          type: array
          description: Astronomical objects located in this astronomical object, like
            planets in a star system
          default:
            - []
          items:
            $ref: '#/components/schemas/AstronomicalObjectBase'
      description: Full astronomical object, returned when queried using UID
    AstronomicalObjectBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        astronomicalObjects:
          type: array
          default:
            - []
          items:
            $ref: '#/components/schemas/AstronomicalObjectBase'
      description: Response object for astronomical objects search
    AstronomicalObjectFullResponse:
      type: object
      properties:
        astronomicalObject:
          $ref: '#/components/schemas/AstronomicalObjectFull'
      description: Response object for single astronomical object query
    AstronomicalObjectType:
      type: string
      description: Astronomical object type
      enum:
        - PLANET
        - D_CLASS_PLANET
        - H_CLASS_PLANET
        - GAS_GIANT_PLANET
        - K_CLASS_PLANET
        - L_CLASS_PLANET
        - M_CLASS_PLANET
        - Y_CLASS_PLANET
        - ROGUE_PLANET
        - ARTIFICIAL_PLANET
        - ASTEROID
        - ASTEROIDAL_MOON
        - ASTEROID_BELT
        - CLUSTER
        - COMET
        - CONSTELLATION
        - GALAXY
        - MOON
        - M_CLASS_MOON
        - NEBULA
        - PLANETOID
        - D_CLASS_PLANETOID
        - QUASAR
        - STAR
        - STAR_SYSTEM
        - SECTOR
        - REGION
    AstronomicalObjectV2Base:
      required:
        - astronomicalObjectType
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Astronomical object's unique ID
        name:
          type: string
          description: Astronomical object name
        astronomicalObjectType:
          $ref: '#/components/schemas/AstronomicalObjectV2Type'
        location:
          $ref: '#/components/schemas/AstronomicalObjectHeader'
      description: Base astronomical object, returned in search results (V2)
    AstronomicalObjectV2SearchCriteria:
      type: object
      description: Astronomical object search criteria (V2)
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Astronomical object name
        astronomicalObjectType:
          $ref: '#/components/schemas/AstronomicalObjectV2Type'
        locationUid:
          type: string
          description: Astronomical object's location unique ID
    AstronomicalObjectV2Full:
      required:
        - astronomicalObjectType
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Astronomical object's unique ID
        name:
          type: string
          description: Astronomical object name
        astronomicalObjectType:
          $ref: '#/components/schemas/AstronomicalObjectV2Type'
        location:
          $ref: '#/components/schemas/AstronomicalObjectV2Base'
        astronomicalObjects:
          type: array
          description: Astronomical objects located in this astronomical object, like
            planets in a star system
          default:
            - []
          items:
            $ref: '#/components/schemas/AstronomicalObjectV2Base'
      description: Full astronomical object, returned when queried using UID (V2)
    AstronomicalObjectV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        astronomicalObjects:
          type: array
          description: List of astronomical objects matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/AstronomicalObjectV2Base'
      description: Response object for astronomical objects search (v2)
    AstronomicalObjectV2FullResponse:
      type: object
      properties:
        astronomicalObject:
          $ref: '#/components/schemas/AstronomicalObjectV2Full'
      description: Response object for single astronomical object query (V2)
    AstronomicalObjectV2Type:
      type: string
      description: Astronomical object type (V2)
      enum:
        - PLANET
        - D_CLASS_PLANET
        - H_CLASS_PLANET
        - GAS_GIANT_PLANET
        - K_CLASS_PLANET
        - L_CLASS_PLANET
        - M_CLASS_PLANET
        - Y_CLASS_PLANET
        - ROGUE_PLANET
        - ARTIFICIAL_PLANET
        - ASTEROID
        - ASTEROIDAL_MOON
        - ASTEROID_BELT
        - BORG_SPATIAL_DESIGNATION
        - CLUSTER
        - COMET
        - CONSTELLATION
        - GALAXY
        - MOON
        - M_CLASS_MOON
        - NEBULA
        - PLANETOID
        - D_CLASS_PLANETOID
        - QUADRANT
        - QUASAR
        - STAR
        - STAR_SYSTEM
        - SECTOR
        - REGION
    BloodType:
      type: string
      description: Blood type
      enum:
        - B_NEGATIVE
        - O_NEGATIVE
        - T_NEGATIVE
    BookHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Book unique ID
        title:
          type: string
          description: Book title
      description: Header book, embedded in other objects
    BookBase:
      required:
        - anthology
        - audiobook
        - audiobookAbridged
        - biographyBook
        - ebook
        - novel
        - novelization
        - referenceBook
        - rolePlayingBook
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Book unique ID
        title:
          type: string
          description: Book title
        publishedYear:
          type: integer
          description: Year the book was published
        publishedMonth:
          type: integer
          description: Month the book was published
        publishedDay:
          type: integer
          description: Day the book was published
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of book story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of book story
          format: float
        yearFrom:
          type: integer
          description: Starting year of book story
        yearTo:
          type: integer
          description: Ending year of book story
        novel:
          type: boolean
          description: Whether it's a novel
        referenceBook:
          type: boolean
          description: Whether it's a reference book
        biographyBook:
          type: boolean
          description: Whether it's a biography book
        rolePlayingBook:
          type: boolean
          description: Whether it's a role playing book
        ebook:
          type: boolean
          description: Whether it's an e-book
        anthology:
          type: boolean
          description: Whether it's an anthology
        novelization:
          type: boolean
          description: Whether it's a novelization
        audiobook:
          type: boolean
          description: Whether it's an audiobook, or has been release as an audiobook
            in addition to other form
        audiobookAbridged:
          type: boolean
          description: If it's an audiobook, whether it's been abridged
        audiobookPublishedYear:
          type: integer
          description: Year the audiobook was published
        audiobookPublishedMonth:
          type: integer
          description: Month the audiobook was published
        audiobookPublishedDay:
          type: integer
          description: Day the audiobook was published
        audiobookRunTime:
          type: integer
          description: Audiobook run time, in minutes
        productionNumber:
          type: string
          description: Book's production number
      description: Base book, returned in search results
    BookFull:
      required:
        - anthology
        - audiobook
        - audiobookAbridged
        - biographyBook
        - ebook
        - novel
        - novelization
        - referenceBook
        - rolePlayingBook
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Book unique ID
        title:
          type: string
          description: Book title
        publishedYear:
          type: integer
          description: Year the book was published
        publishedMonth:
          type: integer
          description: Month the book was published
        publishedDay:
          type: integer
          description: Day the book was published
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of book story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of book story
          format: float
        yearFrom:
          type: integer
          description: Starting year of book story
        yearTo:
          type: integer
          description: Ending year of book story
        novel:
          type: boolean
          description: Whether it's a novel
        referenceBook:
          type: boolean
          description: Whether it's a reference book
        biographyBook:
          type: boolean
          description: Whether it's a biography book
        rolePlayingBook:
          type: boolean
          description: Whether it's a role playing book
        ebook:
          type: boolean
          description: Whether it's an e-book
        anthology:
          type: boolean
          description: Whether it's an anthology
        novelization:
          type: boolean
          description: Whether it's a novelization
        audiobook:
          type: boolean
          description: Whether it's an audiobook, or has been release as an audiobook
            in addition to other form
        audiobookAbridged:
          type: boolean
          description: If it's an audiobook, whether it's been abridged
        audiobookPublishedYear:
          type: integer
          description: Year the audiobook was published
        audiobookPublishedMonth:
          type: integer
          description: Month the audiobook was published
        audiobookPublishedDay:
          type: integer
          description: Day the audiobook was published
        audiobookRunTime:
          type: integer
          description: Audiobook run time, in minutes
        productionNumber:
          type: string
          description: Book production number
        bookSeries:
          type: array
          description: Book series this book is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/BookSeriesBase'
        authors:
          type: array
          description: Authors of the book
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        artists:
          type: array
          description: Artists involved in the book
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        editors:
          type: array
          description: Editors involved in the book
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        audiobookNarrators:
          type: array
          description: Audiobook narrators
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        publishers:
          type: array
          description: Book publishers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        audiobookPublishers:
          type: array
          description: Audiobook publishers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        characters:
          type: array
          description: Characters appearing the book
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
        references:
          type: array
          description: References
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
        audiobookReferences:
          type: array
          description: Audiobook references
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
        bookCollections:
          type: array
          description: Book collections this book is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/BookCollectionBase'
      description: Full book, returned when queried using UID
    BookBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        books:
          type: array
          description: List of books matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/BookBase'
      description: Response object for books search
    BookFullResponse:
      type: object
      properties:
        book:
          $ref: '#/components/schemas/BookFull'
      description: Response object for single book query
    BookV2SearchCriteria:
      type: object
      description: Book search criteria (V2)
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Book title
        publishedYearFrom:
          type: integer
          description: Starting year the book was published
          format: int32
        publishedYearTo:
          type: integer
          description: Ending year the book was published
          format: int32
        numberOfPagesFrom:
          type: integer
          description: Minimal number of pages
          format: int32
        numberOfPagesTo:
          type: integer
          description: Maximal number of pages
          format: int32
        stardateFrom:
          type: number
          description: Starting stardate of book story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of book story
          format: float
        yearFrom:
          type: integer
          description: Starting year of book story
          format: int32
        yearTo:
          type: integer
          description: Ending year of book story
          format: int32
        novel:
          type: boolean
          description: Whether it should be a novel
        referenceBook:
          type: boolean
          description: Whether it should be a reference book
        biographyBook:
          type: boolean
          description: Whether it should be a biography book
        rolePlayingBook:
          type: boolean
          description: Whether it should be a role playing book
        unauthorizedPublication:
          type: boolean
          description: Whether it should be an unauthorized publication
        ebook:
          type: boolean
          description: Whether it should be an e-book
        anthology:
          type: boolean
          description: Whether it should be an anthology
        novelization:
          type: boolean
          description: Whether it should be novelization
        audiobook:
          type: boolean
          description: Whether it should be an audiobook
        audiobookAbridged:
          type: boolean
          description: Whether it should be an audiobook, abridged
        audiobookPublishedYearFrom:
          type: integer
          description: Starting year the audiobook was published
          format: int32
        audiobookPublishedYearTo:
          type: integer
          description: Ending year the audiobook was published
          format: int32
        audiobookRunTimeFrom:
          type: integer
          description: Minimal audiobook run time, in minutes
          format: int32
        audiobookRunTimeTo:
          type: integer
          description: Maximal audiobook run time, in minutes
          format: int32
    BookV2Base:
      required:
        - anthology
        - audiobook
        - audiobookAbridged
        - biographyBook
        - ebook
        - novel
        - novelization
        - referenceBook
        - rolePlayingBook
        - title
        - uid
        - unauthorizedPublication
      type: object
      properties:
        uid:
          type: string
          description: Book unique ID
        title:
          type: string
          description: Book title
        publishedYear:
          type: integer
          description: Year the book was published
        publishedMonth:
          type: integer
          description: Month the book was published
        publishedDay:
          type: integer
          description: Day the book was published
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of book story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of book story
          format: float
        yearFrom:
          type: integer
          description: Starting year of book story
        yearTo:
          type: integer
          description: Ending year of book story
        novel:
          type: boolean
          description: Whether it's a novel
        referenceBook:
          type: boolean
          description: Whether it's a reference book
        biographyBook:
          type: boolean
          description: Whether it's a biography book
        rolePlayingBook:
          type: boolean
          description: Whether it's a role playing book
        ebook:
          type: boolean
          description: Whether it's an e-book # In V3 it should be eBook
        anthology:
          type: boolean
          description: Whether it's an anthology
        novelization:
          type: boolean
          description: Whether it's a novelization
        unauthorizedPublication:
          type: boolean
          description: Whether it's an unauthorized publication
        audiobook:
          type: boolean
          description: Whether it's an audiobook, or has been release as an audiobook
            in addition to other form
        audiobookAbridged:
          type: boolean
          description: If it's an audiobook, whether it's been abridged
        audiobookPublishedYear:
          type: integer
          description: Year the audiobook was published
        audiobookPublishedMonth:
          type: integer
          description: Month the audiobook was published
        audiobookPublishedDay:
          type: integer
          description: Day the audiobook was published
        audiobookRunTime:
          type: integer
          description: Audiobook run time, in minutes
        productionNumber:
          type: string
          description: Book's production number
      description: Base book, returned in search results (V2)
    BookV2Full:
      required:
        - anthology
        - audiobook
        - audiobookAbridged
        - biographyBook
        - ebook
        - novel
        - novelization
        - referenceBook
        - rolePlayingBook
        - title
        - uid
        - unauthorizedPublication
      type: object
      properties:
        uid:
          type: string
          description: Book unique ID
        title:
          type: string
          description: Book title
        publishedYear:
          type: integer
          description: Year the book was published
        publishedMonth:
          type: integer
          description: Month the book was published
        publishedDay:
          type: integer
          description: Day the book was published
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of book story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of book story
          format: float
        yearFrom:
          type: integer
          description: Starting year of book story
        yearTo:
          type: integer
          description: Ending year of book story
        novel:
          type: boolean
          description: Whether it's a novel
        referenceBook:
          type: boolean
          description: Whether it's a reference book
        biographyBook:
          type: boolean
          description: Whether it's a biography book
        rolePlayingBook:
          type: boolean
          description: Whether it's a role playing book
        ebook:
          type: boolean
          description: Whether it's an e-book  # In V3 it should be eBook
        anthology:
          type: boolean
          description: Whether it's an anthology
        novelization:
          type: boolean
          description: Whether it's a novelization
        unauthorizedPublication:
          type: boolean
          description: Whether it's an unauthorized publication
        audiobook:
          type: boolean
          description: Whether it's an audiobook, or has been release as an audiobook
            in addition to other form
        audiobookAbridged:
          type: boolean
          description: If it's an audiobook, whether it's been abridged
        audiobookPublishedYear:
          type: integer
          description: Year the audiobook was published
        audiobookPublishedMonth:
          type: integer
          description: Month the audiobook was published
        audiobookPublishedDay:
          type: integer
          description: Day the audiobook was published
        audiobookRunTime:
          type: integer
          description: Audiobook run time, in minutes
        productionNumber:
          type: string
          description: Book production number
        bookSeries:
          type: array
          description: Book series this book is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/BookSeriesBase'
        authors:
          type: array
          description: Authors of the book
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffV2Base'
        artists:
          type: array
          description: Artists involved in the book
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffV2Base'
        editors:
          type: array
          description: Editors involved in the book
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffV2Base'
        audiobookNarrators:
          type: array
          description: Audiobook narrators
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffV2Base'
        publishers:
          type: array
          description: Book publishers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyV2Base'
        audiobookPublishers:
          type: array
          description: Audiobook publishers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyV2Base'
        characters:
          type: array
          description: Characters appearing the book
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
        references:
          type: array
          description: References
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
        audiobookReferences:
          type: array
          description: Audiobook references
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
        bookCollections:
          type: array
          description: Book collections this book is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/BookCollectionBase'
      description: Full book, returned when queried using UID (V2)
    BookV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        books:
          type: array
          description: List of books matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/BookV2Base'
      description: Response object for books search (V2)
    BookV2FullResponse:
      type: object
      properties:
        book:
          $ref: '#/components/schemas/BookV2Full'
      description: Response object for single book query (V2)
    BookCollectionSearchCriteria:
      type: object
      description: Book collection search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Book collection title
        publishedYearFrom:
          type: integer
          description: Starting year the book collection was published
          format: int32
        publishedYearTo:
          type: integer
          description: Ending year the book collection was published
          format: int32
        numberOfPagesFrom:
          type: integer
          description: Minimal number of pages
          format: int32
        numberOfPagesTo:
          type: integer
          description: Maximal number of pages
          format: int32
        stardateFrom:
          type: number
          description: Starting stardate of book collection stories
          format: float
        stardateTo:
          type: number
          description: Ending stardate of book collections stories
          format: float
        yearFrom:
          type: integer
          description: Starting year of book collection stories
          format: int32
        yearTo:
          type: integer
          description: Ending year of book collections stories
          format: int32
    BookCollectionHeader:
      type: object
      properties:
        uid:
          type: string
          description: Book collection unique ID
        title:
          type: string
          description: Book collection title
      description: Header book collection, embedded in other objects
    BookCollectionBase:
      type: object
      properties:
        uid:
          type: string
          description: Book collection unique ID
        title:
          type: string
          description: Book collection title
        publishedYear:
          type: integer
          description: Year the book collection was published
        publishedMonth:
          type: integer
          description: Month the book collection was published
        publishedDay:
          type: integer
          description: Day the book collection was published
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of book collection stories
          format: float
        stardateTo:
          type: number
          description: Ending stardate of book collection stories
          format: float
        yearFrom:
          type: integer
          description: Starting year of book collection stories
        yearTo:
          type: integer
          description: Ending year of book collection stories
      description: Base book collection, returned in search results
    BookCollectionFull:
      type: object
      properties:
        uid:
          type: string
          description: Book collection unique ID
        title:
          type: string
          description: Book collection title
        publishedYear:
          type: integer
          description: Year the book collection was published
        publishedMonth:
          type: integer
          description: Month the book collection was published
        publishedDay:
          type: integer
          description: Day the book collection was published
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of book collection stories
          format: float
        stardateTo:
          type: number
          description: Ending stardate of book collection stories
          format: float
        yearFrom:
          type: integer
          description: Starting year of book collection stories
        yearTo:
          type: integer
          description: Ending year of book collection stories
        bookSeries:
          type: array
          description: Book series this book collection is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/BookSeriesBase'
        authors:
          type: array
          description: Authors of the book collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        artists:
          type: array
          description: Artists involved in the book collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        editors:
          type: array
          description: Editors involved in the book collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        publishers:
          type: array
          description: Book collection publishers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        characters:
          type: array
          description: Characters appearing in the book collection
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
        references:
          type: array
          description: References
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
        books:
          type: array
          description: Books included in this book collection
          default:
            - []
          items:
            $ref: '#/components/schemas/BookBase'
      description: Full book collection, returned when queried using UID
    BookCollectionBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        bookCollections:
          type: array
          description: List of book collections matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/BookCollectionBase'
      description: Response object for book collections search
    BookCollectionFullResponse:
      type: object
      properties:
        bookCollection:
          $ref: '#/components/schemas/BookCollectionFull'
      description: Response object for single book collection query
    BookSeriesSearchCriteria:
      type: object
      description: Book series search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Book series title
        publishedYearFrom:
          type: integer
          description: Starting year the book series was published
          format: int32
        publishedYearTo:
          type: integer
          description: Ending year the book series was published
          format: int32
        numberOfBooksFrom:
          type: integer
          description: Minimal number of books
          format: int32
        numberOfBooksTo:
          type: integer
          description: Maximal number of books
          format: int32
        yearFrom:
          type: integer
          description: Starting year of book series stories
          format: int32
        yearTo:
          type: integer
          description: Ending year of book series stories
          format: int32
        miniseries:
          type: boolean
          description: Whether it should be a miniseries
        ebookSeries:
          type: boolean
          description: Whether it should be an e-book series
    BookSeriesHeader:
      type: object
      properties:
        uid:
          type: string
          description: Book series unique ID
        title:
          type: string
          description: Book series title
      description: Header book series, embedded in other objects
    BookSeriesBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Book series unique ID
        title:
          type: string
          description: Book series title
        publishedYearFrom:
          type: integer
          description: Year from which the book series was published
        publishedMonthFrom:
          type: integer
          description: Month from which the book series was published
        publishedYearTo:
          type: integer
          description: Year to which the book series was published
        publishedMonthTo:
          type: integer
          description: Month to which the book series was published
        numberOfBooks:
          type: integer
          description: Number of pages
        yearFrom:
          type: integer
          description: Starting year of book series stories
        yearTo:
          type: integer
          description: Ending year of book series stories
        miniseries:
          type: boolean
          description: Whether it's a miniseries
        ebookSeries:
          type: boolean
          description: Whether it's a e-book series # In V2 it should be eBookSeries
      description: Base book series, returned in search results
    BookSeriesFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Book series unique ID
        title:
          type: string
          description: Book series title
        publishedYearFrom:
          type: integer
          description: Year from which the book series was published
        publishedMonthFrom:
          type: integer
          description: Month from which the book series was published
        publishedYearTo:
          type: integer
          description: Year to which the book series was published
        publishedMonthTo:
          type: integer
          description: Month to which the book series was published
        numberOfBooks:
          type: integer
          description: Number of books in book series
        yearFrom:
          type: integer
          description: Starting year of book series stories
        yearTo:
          type: integer
          description: Ending year of book series stories
        miniseries:
          type: boolean
          description: Whether it's a miniseries
        ebookSeries:
          type: boolean
          description: Whether it's a e-book series  # In V2 it should be eBookSeries
        parentSeries:
          type: array
          description: Book series this book series is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/BookSeriesBase'
        childSeries:
          type: array
          description: Child book series included in this book series
          default:
            - []
          items:
            $ref: '#/components/schemas/BookSeriesBase'
        publishers:
          type: array
          description: Companies that published this book series
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        books:
          type: array
          description: Books included in this book series
          default:
            - []
          items:
            $ref: '#/components/schemas/BookBase'
      description: Full book series, returned when queried using UID
    BookSeriesBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        bookSeries:
          type: array
          description: List of book series matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/BookSeriesBase'
      description: Response object for book series search
    BookSeriesFullResponse:
      type: object
      properties:
        bookSeries:
          $ref: '#/components/schemas/BookSeriesFull'
      description: Response object for single book series query
    CharacterSearchCriteria:
      type: object
      description: Character search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Character name
        gender:
          type: string
          description: Character gender
        deceased:
          type: boolean
          description: Whether it should be a deceased character
        hologram:
          type: boolean
          description: Whether it should be a hologram
        fictionalCharacter:
          type: boolean
          description: Whether it should be a fictional character (from universe point of view)
        mirror:
          type: boolean
          description: Whether it should be a mirror universe character
        alternateReality:
          type: boolean
          description: Whether it should be a alternate reality character
    CharacterHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Character unique ID
        name:
          type: string
          description: Character name
      description: Header character, embedded in other objects
    CharacterBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Character unique ID
        name:
          type: string
          description: Character name
        gender:
          $ref: '#/components/schemas/Gender'
        yearOfBirth:
          type: integer
          description: Year the character was born
        monthOfBirth:
          type: integer
          description: Month the character was born
        dayOfBirth:
          type: integer
          description: Day the character was born
        placeOfBirth:
          type: string
          description: Place of birth
        yearOfDeath:
          type: integer
          description: Year the character died
        monthOfDeath:
          type: integer
          description: Month the character died
        dayOfDeath:
          type: integer
          description: Day the character died
        placeOfDeath:
          type: string
          description: Place of death
        height:
          type: integer
          description: Height in centimeters
        weight:
          type: integer
          description: Weight in kilograms
        deceased:
          type: boolean
          description: Whether this character is deceased
        bloodType:
          $ref: '#/components/schemas/BloodType'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        serialNumber:
          type: string
          description: Serial number
        hologramActivationDate:
          type: string
          description: Hologram activation date
        hologramStatus:
          type: string
          description: Hologram status
        hologramDateStatus:
          type: string
          description: Hologram date status
        hologram:
          type: boolean
          description: Whether this character is a hologram
        fictionalCharacter:
          type: boolean
          description: Whether this character is a fictional character (from universe
            point of view)
        mirror:
          type: boolean
          description: Whether this character is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this character is from alternate reality
      description: Base character, returned in search results
    CharacterFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Character unique ID
        name:
          type: string
          description: Character name
        gender:
          $ref: '#/components/schemas/Gender'
        yearOfBirth:
          type: integer
          description: Year the character was born
        monthOfBirth:
          type: integer
          description: Month the character was born
        dayOfBirth:
          type: integer
          description: Day the character was born
        placeOfBirth:
          type: string
          description: Place of birth
        yearOfDeath:
          type: integer
          description: Year the character died
        monthOfDeath:
          type: integer
          description: Month the character died
        dayOfDeath:
          type: integer
          description: Day the character died
        placeOfDeath:
          type: string
          description: Place of death
        height:
          type: integer
          description: Height in centimeters
        weight:
          type: integer
          description: Weight in kilograms
        deceased:
          type: boolean
          description: Whether this character is deceased
        bloodType:
          $ref: '#/components/schemas/BloodType'
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        serialNumber:
          type: string
          description: Serial number
        hologramActivationDate:
          type: string
          description: Hologram activation date
        hologramStatus:
          type: string
          description: Hologram status
        hologramDateStatus:
          type: string
          description: Hologram date status
        hologram:
          type: boolean
          description: Whether this character is a hologram
        fictionalCharacter:
          type: boolean
          description: Whether this character is a fictional character (from universe
            point of view)
        mirror:
          type: boolean
          description: Whether this character is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this character is from alternate reality
        performers:
          type: array
          description: Performers who played this character
          default:
            - []
          items:
            $ref: '#/components/schemas/PerformerBase'
        episodes:
          type: array
          description: Episodes in which this character appeared
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        movies:
          type: array
          description: Movies in which this character appeared
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        characterSpecies:
          type: array
          description: Species this character belongs to
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterSpecies'
        characterRelations:
          type: array
          description: Relations with other characters
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterRelation'
        titles:
          type: array
          description: Titles this character holds
          default:
            - []
          items:
            $ref: '#/components/schemas/TitleBase'
        occupations:
          type: array
          description: Occupations of this character
          default:
            - []
          items:
            $ref: '#/components/schemas/OccupationBase'
        organizations:
          type: array
          description: Organizations this character has affiliation with
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
      description: Full character, returned when queried using UID
    CharacterBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        characters:
          type: array
          description: List of characters matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Response object for characters search
    CharacterFullResponse:
      type: object
      properties:
        character:
          $ref: '#/components/schemas/CharacterFull'
      description: Response object for single character query
    CharacterRelation:
      type: object
      properties:
        type:
          type: string
          description: Relation type
        source:
          $ref: '#/components/schemas/CharacterHeader'
        target:
          $ref: '#/components/schemas/CharacterHeader'
      description: Relation between characters
    CharacterSpecies:
      type: object
      properties:
        uid:
          type: string
          description: Entity unique ID
        name:
          type: string
          description: Species name
        numerator:
          type: integer
          description: Numerator
        denominator:
          type: integer
          description: Denominator
      description: Species a character belongs to
    ComicsSearchCriteria:
      type: object
      description: Comics search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Comics title
        publishedYearFrom:
          type: integer
          description: Starting year the comics was published
          format: int32
        publishedYearTo:
          type: integer
          description: Ending year the comics was published
          format: int32
        numberOfPagesFrom:
          type: integer
          description: Minimal number of pages
          format: int32
        numberOfPagesTo:
          type: integer
          description: Maximal number of pages
          format: int32
        stardateFrom:
          type: number
          description: Starting stardate of comics story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of comics story
          format: float
        yearFrom:
          type: integer
          description: Starting year of comics story
          format: int32
        yearTo:
          type: integer
          description: Ending year of comics story
          format: int32
        photonovel:
          type: boolean
          description: Whether it should be a photonovel
        adaptation:
          type: boolean
          description: Whether it should be an adaptation of an episode or a movie
    ComicsHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comics unique ID
        title:
          type: string
          description: Comics title
      description: Header comics, embedded in other objects
    ComicsBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comics unique ID
        title:
          type: string
          description: Comics title
        publishedYear:
          type: integer
          description: Year the comics was published
        publishedMonth:
          type: integer
          description: Month the comics was published
        publishedDay:
          type: integer
          description: Day the comics was published
        coverYear:
          type: integer
          description: Cover publication year
        coverMonth:
          type: integer
          description: Cover publication month
        coverDay:
          type: integer
          description: Cover publication day
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of comic story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of comic story
          format: float
        yearFrom:
          type: integer
          description: Starting year of comic story
        yearTo:
          type: integer
          description: Ending year of comic story
        photonovel:
          type: boolean
          description: Whether it's a photonovel
        adaptation:
          type: boolean
          description: Whether it's an adaptation of an episode or a movie
      description: Base comics, returned in search results
    ComicsFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comics unique ID
        title:
          type: string
          description: Comics title
        publishedYear:
          type: integer
          description: Year the comics was published
        publishedMonth:
          type: integer
          description: Month the comics was published
        publishedDay:
          type: integer
          description: Day the comics was published
        coverYear:
          type: integer
          description: Cover publication year
        coverMonth:
          type: integer
          description: Cover publication month
        coverDay:
          type: integer
          description: Cover publication day
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of comic story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of comic story
          format: float
        yearFrom:
          type: integer
          description: Starting year of comic  story
        yearTo:
          type: integer
          description: Ending year of comic story
        photonovel:
          type: boolean
          description: Whether it's a photonovel
        adaptation:
          type: boolean
          description: Whether it's an adaptation of an episode or a movie
        comicSeries:
          type: array
          description: Comic series this comics is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicSeriesBase'
        writers:
          type: array
          description: Writers involved in the comics
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        artists:
          type: array
          description: Artists involved in the comics
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        editors:
          type: array
          description: Editors involved in the comics
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        staff:
          type: array
          description: Other staff involved in the comics
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        publishers:
          type: array
          description: Comics publishers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        characters:
          type: array
          description: Characters appearing in the comics
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
        references:
          type: array
          description: References
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
        comicCollections:
          type: array
          description: Comic collections this comics is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicCollectionBase'
      description: Full comics, returned when queried using UID
    ComicsBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        comics:
          type: array
          description: List of comics matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicsBase'
      description: Response object for comics search
    ComicsFullResponse:
      type: object
      properties:
        comics:
          $ref: '#/components/schemas/ComicsFull'
      description: Response object for single comics query
    ComicCollectionSearchCriteria:
      type: object
      description: Comic collection search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Comic collection title
        publishedYearFrom:
          type: integer
          description: Starting year the comic collection was published
          format: int32
        publishedYearTo:
          type: integer
          description: Ending year the comic collection was published
          format: int32
        numberOfPagesFrom:
          type: integer
          description: Minimal number of pages
          format: int32
        numberOfPagesTo:
          type: integer
          description: Maximal number of pages
          format: int32
        stardateFrom:
          type: number
          description: Starting stardate of comic collection stories
          format: float
        stardateTo:
          type: number
          description: Ending stardate of comic collections stories
          format: float
        yearFrom:
          type: integer
          description: Starting year of comic collection stories
          format: int32
        yearTo:
          type: integer
          description: Ending year of comic collections stories
          format: int32
        photonovel:
          type: boolean
          description: Whether it should be an photonovel collection
    ComicCollectionHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comic collection unique ID
        title:
          type: string
          description: Comic collection title
      description: Header comic collection, embedded in other objects
    ComicCollectionBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comic collection unique ID
        title:
          type: string
          description: Comic collection title
        publishedYear:
          type: integer
          description: Year the comic collection was published
        publishedMonth:
          type: integer
          description: Month the comic collection was published
        publishedDay:
          type: integer
          description: Day the comic collection was published
        coverYear:
          type: integer
          description: Cover publication year
        coverMonth:
          type: integer
          description: Cover publication month
        coverDay:
          type: integer
          description: Cover publication day
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of comic collection stories
          format: float
        stardateTo:
          type: number
          description: Ending stardate of comic collection stories
          format: float
        yearFrom:
          type: integer
          description: Starting year of comic collection stories
        yearTo:
          type: integer
          description: Ending year of comic collection stories
        photonovel:
          type: boolean
          description: Whether it's a photonovel collection
      description: Base comic collection, returned in search results
    ComicCollectionFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comic collection unique ID
        title:
          type: string
          description: Comic collection title
        publishedYear:
          type: integer
          description: Year the comic collection was published
        publishedMonth:
          type: integer
          description: Month the comic collection was published
        publishedDay:
          type: integer
          description: Day the comic collection was published
        coverYear:
          type: integer
          description: Cover publication year
        coverMonth:
          type: integer
          description: Cover publication month
        coverDay:
          type: integer
          description: Cover publication day
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of comic collection stories
          format: float
        stardateTo:
          type: number
          description: Ending stardate of comic collection stories
          format: float
        yearFrom:
          type: integer
          description: Starting year of comic collection stories
        yearTo:
          type: integer
          description: Ending year of comic collection stories
        photonovel:
          type: boolean
          description: Whether it's a photonovel collection
        comicSeries:
          type: array
          description: Comic series this comic collection is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicSeriesBase'
        writers:
          type: array
          description: Writers involved in the comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        artists:
          type: array
          description: Artists involved in the comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        editors:
          type: array
          description: Editors involved in the comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        staff:
          type: array
          description: Other staff involved in the comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        publishers:
          type: array
          description: Comic collection publishers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        characters:
          type: array
          description: Characters appearing in the comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
        references:
          type: array
          description: References
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
        comics:
          type: array
          description: Comics included in this comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicsBase'
      description: Full comic collection, returned when queried using UID
    ComicCollectionBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        comicCollections:
          type: array
          description: List of comic collections matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicCollectionBase'
      description: Response object for comic collections search
    ComicCollectionFullResponse:
      type: object
      properties:
        comicCollection:
          $ref: '#/components/schemas/ComicCollectionFull'
      description: Response object for single comic collection query
    ComicCollectionV2Full:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comic collection unique ID
        title:
          type: string
          description: Comic collection title
        publishedYear:
          type: integer
          description: Year the comic collection was published
        publishedMonth:
          type: integer
          description: Month the comic collection was published
        publishedDay:
          type: integer
          description: Day the comic collection was published
        coverYear:
          type: integer
          description: Cover publication year
        coverMonth:
          type: integer
          description: Cover publication month
        coverDay:
          type: integer
          description: Cover publication day
        numberOfPages:
          type: integer
          description: Number of pages
        stardateFrom:
          type: number
          description: Starting stardate of comic collection stories
          format: float
        stardateTo:
          type: number
          description: Ending stardate of comic collection stories
          format: float
        yearFrom:
          type: integer
          description: Starting year of comic collection stories
        yearTo:
          type: integer
          description: Ending year of comic collection stories
        photonovel:
          type: boolean
          description: Whether it's a photonovel collection
        comicSeries:
          type: array
          description: Comic series this comic collection is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicSeriesBase'
        childComicSeries:
          type: array
          description: Comic series this comic collection includes
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicSeriesBase'
        writers:
          type: array
          description: Writers involved in the comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffV2Base'
        artists:
          type: array
          description: Artists involved in the comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffV2Base'
        editors:
          type: array
          description: Editors involved in the comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffV2Base'
        staff:
          type: array
          description: Other staff involved in the comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffV2Base'
        publishers:
          type: array
          description: Comic collection publishers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyV2Base'
        characters:
          type: array
          description: Characters appearing in the comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
        references:
          type: array
          description: References
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
        comics:
          type: array
          description: Comics included in this comic collection
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicsBase'
      description: Full comic collection, returned when queried using UID (V2)
    ComicCollectionV2FullResponse:
      type: object
      properties:
        comicCollection:
          $ref: '#/components/schemas/ComicCollectionV2Full'
      description: Response object for single comic collection query (V2)
    ComicSeriesSearchCriteria:
      type: object
      description: Comic series search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Comic series title
        publishedYearFrom:
          type: integer
          description: Starting year the comic series was published
          format: int32
        publishedYearTo:
          type: integer
          description: Ending year the comic series was published
          format: int32
        numberOfIssuesFrom:
          type: integer
          description: Minimal number of issues
          format: int32
        numberOfIssuesTo:
          type: integer
          description: Maximal number of issues
          format: int32
        stardateFrom:
          type: number
          description: Starting stardate of comic series stories
          format: float
        stardateTo:
          type: number
          description: Starting stardate of comic series stories
          format: float
        yearFrom:
          type: integer
          description: Starting year of comic series stories
          format: int32
        yearTo:
          type: integer
          description: Ending year of comic series stories
          format: int32
        miniseries:
          type: boolean
          description: Whether it should be a miniseries
        photonovelSeries:
          type: boolean
          description: Whether it should be photonovel series
    ComicSeriesHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comic series unique ID
        title:
          type: string
          description: Comic series title
      description: Header book series, embedded in other objects
    ComicSeriesBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comic series unique ID
        title:
          type: string
          description: Comic series title
        publishedYearFrom:
          type: integer
          description: Year from which the comic series was published
        publishedMonthFrom:
          type: integer
          description: Month from which the comic series was published
        publishedDayFrom:
          type: integer
          description: Day from which the comic series was published
        publishedYearTo:
          type: integer
          description: Year to which the comic series was published
        publishedMonthTo:
          type: integer
          description: Month to which the comic series was published
        publishedDayTo:
          type: integer
          description: Day to which the comic series was published
        numberOfIssues:
          type: integer
          description: Number of issues
        stardateFrom:
          type: number
          description: Starting stardate of comic series stories
          format: float
        stardateTo:
          type: number
          description: Ending stardate of comic series stories
          format: float
        yearFrom:
          type: integer
          description: Starting year of comic series stories
        yearTo:
          type: integer
          description: Ending year of comic series stories
        miniseries:
          type: boolean
          description: Whether it's a miniseries
        photonovelSeries:
          type: boolean
          description: Whether it's a photonovel series
      description: Base comic series, returned in search results
    ComicSeriesFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comic series unique ID
        title:
          type: string
          description: Comic series title
        publishedYearFrom:
          type: integer
          description: Year from which the comic series was published
        publishedMonthFrom:
          type: integer
          description: Month from which the comic series was published
        publishedDayFrom:
          type: integer
          description: Day from which the comic series was published
        publishedYearTo:
          type: integer
          description: Year to which the comic series was published
        publishedMonthTo:
          type: integer
          description: Month to which the comic series was published
        publishedDayTo:
          type: integer
          description: Day to which the comic series was published
        numberOfIssues:
          type: integer
          description: Number of issues
        stardateFrom:
          type: number
          description: Starting stardate of comic series stories
          format: float
        stardateTo:
          type: number
          description: Ending stardate of comic series stories
          format: float
        yearFrom:
          type: integer
          description: Starting year of comic series stories
        yearTo:
          type: integer
          description: Ending year of comic series stories
        miniseries:
          type: boolean
          description: Whether it's a miniseries
        photonovelSeries:
          type: boolean
          description: Whether it's a photonovel series
        parentSeries:
          type: array
          description: Comic series this comic series is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicSeriesBase'
        childSeries:
          type: array
          description: Child comic series included in this comic series
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicSeriesBase'
        publishers:
          type: array
          description: Companies that published this comic series
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        comics:
          type: array
          description: Comics included in this comic series
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicsBase'
      description: Full comic series, returned when queried using UID
    ComicSeriesBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        comicSeries:
          type: array
          description: List of comic series matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicSeriesBase'
      description: Response object for comic series search
    ComicSeriesFullResponse:
      type: object
      properties:
        comicSeries:
          $ref: '#/components/schemas/ComicSeriesFull'
      description: Response object for single comic series query
    ComicStripSearchCriteria:
      type: object
      description: Comic strip search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Comic strip title
        publishedYearFrom:
          type: integer
          description: Starting year the comic strip was published
          format: int32
        publishedYearTo:
          type: integer
          description: Ending year the comic strip was published
          format: int32
        numberOfPagesFrom:
          type: integer
          description: Minimal number of pages
          format: int32
        numberOfPagesTo:
          type: integer
          description: Maximal number of pages
          format: int32
        yearFrom:
          type: integer
          description: Starting year of comic strip story
          format: int32
        yearTo:
          type: integer
          description: Ending year of comic strip story
          format: int32
    ComicStripHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comic strip unique ID
        title:
          type: string
          description: Comic strip title
      description: Header comic strip, embedded in other objects
    ComicStripBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comic strip unique ID
        title:
          type: string
          description: Comic strip title
        periodical:
          type: string
          description: Title of the periodical the comic strip was published in
        publishedYearFrom:
          type: integer
          description: Year from which the comic strip was published
        publishedMonthFrom:
          type: integer
          description: Month from which the comic strip was published
        publishedDayFrom:
          type: integer
          description: Day from which the comic strip was published
        publishedYearTo:
          type: integer
          description: Year to which the comic strip was published
        publishedMonthTo:
          type: integer
          description: Month to which the comic strip was published
        publishedDayTo:
          type: integer
          description: Day to which the comic strip was published
        numberOfPages:
          type: integer
          description: Number of pages
        yearFrom:
          type: integer
          description: Starting year of comic strip story
        yearTo:
          type: integer
          description: Ending year of comic strip story
      description: Base comic strip, returned in search results
    ComicStripFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Comic strip unique ID
        title:
          type: string
          description: Comic strip title
        periodical:
          type: string
          description: Title of the periodical the comic strip was published in
        publishedYearFrom:
          type: integer
          description: Year from which the comic strip was published
        publishedMonthFrom:
          type: integer
          description: Month from which the comic strip was published
        publishedDayFrom:
          type: integer
          description: Day from which the comic strip was published
        publishedYearTo:
          type: integer
          description: Year to which the comic strip was published
        publishedMonthTo:
          type: integer
          description: Month to which the comic strip was published
        publishedDayTo:
          type: integer
          description: Day to which the comic strip was published
        numberOfPages:
          type: integer
          description: Number of pages
        yearFrom:
          type: integer
          description: Starting year of comic strip stories
        yearTo:
          type: integer
          description: Ending year of comic strip stories
        comicSeries:
          type: array
          description: Comic series this comic strip is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicSeriesBase'
        writers:
          type: array
          description: Writers involved in the comic strip
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        artists:
          type: array
          description: Artists involved in the comic strip
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        characters:
          type: array
          description: Characters appearing in the comic strip
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full comic strip, returned when queried using UID
    ComicStripBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        comicStrips:
          type: array
          description: List of comic strips matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/ComicStripBase'
      description: Response object for comic strip search
    ComicStripFullResponse:
      type: object
      properties:
        comicStrip:
          $ref: '#/components/schemas/ComicStripFull'
      description: Response object for single comic strip query
    CompanyV2SearchCriteria:
      type: object
      description: Company search criteria (V2)
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Company name
        broadcaster:
          type: boolean
          description: Whether it should be a broadcaster
        streamingService:
          type: boolean
          description: Whether it should be a streaming service
        collectibleCompany:
          type: boolean
          description: Whether it should be a collectible company
        conglomerate:
          type: boolean
          description: Whether it should be a conglomerate
        visualEffectsCompany:
          type: boolean
          description: Whether it should be a visual effects company
        digitalVisualEffectsCompany:
          type: boolean
          description: Whether it should be a digital visual effects company
        distributor:
          type: boolean
          description: Whether it should be a distributor
        gameCompany:
          type: boolean
          description: Whether it should be a game company
        filmEquipmentCompany:
          type: boolean
          description: Whether it should be a film equipment company
        makeUpEffectsStudio:
          type: boolean
          description: Whether it should be a make-up effects studio
        mattePaintingCompany:
          type: boolean
          description: Whether it should be a matte painting company
        modelAndMiniatureEffectsCompany:
          type: boolean
          description: Whether it should be a model and miniature effects
            company
        postProductionCompany:
          type: boolean
          description: Whether it should be a post-production company
        productionCompany:
          type: boolean
          description: Whether it should be a production company
        propCompany:
          type: boolean
          description: Whether it should be a prop company
        recordLabel:
          type: boolean
          description: Whether it should be a record label
        specialEffectsCompany:
          type: boolean
          description: Whether it should be a special effects company
        tvAndFilmProductionCompany:
          type: boolean
          description: Whether it should be a TV and film production company
        videoGameCompany:
          type: boolean
          description: Whether it should be a video game company
        publisher:
          type: boolean
          description: Whether it should be a publisher
        publicationArtStudio:
          type: boolean
          description: Whether it should be a publication art studio
    CompanyHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Company unique ID
        name:
          type: string
          description: Company title
      description: Header company, embedded in other objects
    CompanyBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Company unique ID
        name:
          type: string
          description: Company name
        broadcaster:
          type: boolean
          description: Whether it's a broadcaster
        collectibleCompany:
          type: boolean
          description: Whether it's a collectible company
        conglomerate:
          type: boolean
          description: Whether it's a conglomerate
        digitalVisualEffectsCompany:
          type: boolean
          description: Whether it's a digital visual effects company
        distributor:
          type: boolean
          description: Whether it's a distributor
        gameCompany:
          type: boolean
          description: Whether it's a game company
        filmEquipmentCompany:
          type: boolean
          description: Whether it's a film equipment company
        makeUpEffectsStudio:
          type: boolean
          description: Whether it's a make-up effects studio
        mattePaintingCompany:
          type: boolean
          description: Whether it's a matte painting company
        modelAndMiniatureEffectsCompany:
          type: boolean
          description: Whether it's a model and miniature effects company
        postProductionCompany:
          type: boolean
          description: Whether it's a post-production company
        productionCompany:
          type: boolean
          description: Whether it's a production company
        propCompany:
          type: boolean
          description: Whether it's a prop company
        recordLabel:
          type: boolean
          description: Whether it's a record label
        specialEffectsCompany:
          type: boolean
          description: Whether it's a special effects company
        tvAndFilmProductionCompany:
          type: boolean
          description: Whether it's a TV and film production company
        videoGameCompany:
          type: boolean
          description: Whether it's a video game company
      description: Base company, returned in search results
    CompanyFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Company unique ID
        name:
          type: string
          description: Company name
        broadcaster:
          type: boolean
          description: Whether it's a broadcaster
        collectibleCompany:
          type: boolean
          description: Whether it's a collectible company
        conglomerate:
          type: boolean
          description: Whether it's a conglomerate
        digitalVisualEffectsCompany:
          type: boolean
          description: Whether it's a digital visual effects company
        distributor:
          type: boolean
          description: Whether it's a distributor
        gameCompany:
          type: boolean
          description: Whether it's a game company
        filmEquipmentCompany:
          type: boolean
          description: Whether it's a film equipment company
        makeUpEffectsStudio:
          type: boolean
          description: Whether it's a make-up effects studio
        mattePaintingCompany:
          type: boolean
          description: Whether it's a matte painting company
        modelAndMiniatureEffectsCompany:
          type: boolean
          description: Whether it's a model and miniature effects company
        postProductionCompany:
          type: boolean
          description: Whether it's a post-production company
        productionCompany:
          type: boolean
          description: Whether it's a production company
        propCompany:
          type: boolean
          description: Whether it's a prop company
        recordLabel:
          type: boolean
          description: Whether it's a record label
        specialEffectsCompany:
          type: boolean
          description: Whether it's a special effects company
        tvAndFilmProductionCompany:
          type: boolean
          description: Whether it's a TV and film production company
        videoGameCompany:
          type: boolean
          description: Whether it's a video game company
      description: Full company, returned when queried using UID
    CompanyBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        companies:
          type: array
          description: List of companies matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
      description: Response object for companies search
    CompanyFullResponse:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/CompanyFull'
      description: Response object for single company query
    CompanyV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Company unique ID
        name:
          type: string
          description: Company name
        broadcaster:
          type: boolean
          description: Whether it's a broadcaster
        streamingService:
          type: boolean
          description: Whether it's a streaming service
        collectibleCompany:
          type: boolean
          description: Whether it's a collectible company
        conglomerate:
          type: boolean
          description: Whether it's a conglomerate
        visualEffectsCompany:
          type: boolean
          description: Whether it's a visual effects company
        digitalVisualEffectsCompany:
          type: boolean
          description: Whether it's a digital visual effects company
        distributor:
          type: boolean
          description: Whether it's a distributor
        gameCompany:
          type: boolean
          description: Whether it's a game company
        filmEquipmentCompany:
          type: boolean
          description: Whether it's a film equipment company
        makeUpEffectsStudio:
          type: boolean
          description: Whether it's a make-up effects studio
        mattePaintingCompany:
          type: boolean
          description: Whether it's a matte painting company
        modelAndMiniatureEffectsCompany:
          type: boolean
          description: Whether it's a model and miniature effects company
        postProductionCompany:
          type: boolean
          description: Whether it's a post-production company
        productionCompany:
          type: boolean
          description: Whether it's a production company
        propCompany:
          type: boolean
          description: Whether it's a prop company
        recordLabel:
          type: boolean
          description: Whether it's a record label
        specialEffectsCompany:
          type: boolean
          description: Whether it's a special effects company
        tvAndFilmProductionCompany:
          type: boolean
          description: Whether it's a TV and film production company
        videoGameCompany:
          type: boolean
          description: Whether it's a video game company
        publisher:
          type: boolean
          description: Whether it's a publisher
        publicationArtStudio:
          type: boolean
          description: Whether it's a publication art studio
      description: Base company, returned in search results (V2)
    CompanyV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Company unique ID
        name:
          type: string
          description: Company name
        broadcaster:
          type: boolean
          description: Whether it's a broadcaster
        streamingService:
          type: boolean
          description: Whether it's a streaming service
        collectibleCompany:
          type: boolean
          description: Whether it's a collectible company
        conglomerate:
          type: boolean
          description: Whether it's a conglomerate
        visualEffectsCompany:
          type: boolean
          description: Whether it's a visual effects company
        digitalVisualEffectsCompany:
          type: boolean
          description: Whether it's a digital visual effects company
        distributor:
          type: boolean
          description: Whether it's a distributor
        gameCompany:
          type: boolean
          description: Whether it's a game company
        filmEquipmentCompany:
          type: boolean
          description: Whether it's a film equipment company
        makeUpEffectsStudio:
          type: boolean
          description: Whether it's a make-up effects studio
        mattePaintingCompany:
          type: boolean
          description: Whether it's a matte painting company
        modelAndMiniatureEffectsCompany:
          type: boolean
          description: Whether it's a model and miniature effects company
        postProductionCompany:
          type: boolean
          description: Whether it's a post-production company
        productionCompany:
          type: boolean
          description: Whether it's a production company
        propCompany:
          type: boolean
          description: Whether it's a prop company
        recordLabel:
          type: boolean
          description: Whether it's a record label
        specialEffectsCompany:
          type: boolean
          description: Whether it's a special effects company
        tvAndFilmProductionCompany:
          type: boolean
          description: Whether it's a TV and film production company
        videoGameCompany:
          type: boolean
          description: Whether it's a video game company
        publisher:
          type: boolean
          description: Whether it's a publisher
        publicationArtStudio:
          type: boolean
          description: Whether it's a publication art studio
      description: Full company, returned when queried using UID (V2)
    CompanyV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        companies:
          type: array
          description: List of companies matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyV2Base'
      description: Response object for companies search (V2)
    CompanyV2FullResponse:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/CompanyV2Full'
      description: Response object for single company query (V2)
    ConflictSearchCriteria:
      type: object
      description: Conflict search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Conflict name
        yearFrom:
          type: integer
          description: Starting year of the conflict
          format: int32
        yearTo:
          type: integer
          description: Ending year of the conflict
          format: int32
        earthConflict:
          type: boolean
          description: Whether it should be an Earth conflict
        federationWar:
          type: boolean
          description: Whether this conflict should be a part of war involving
            Federation
        klingonWar:
          type: boolean
          description: Whether this conflict should be a part of war involving
            the Klingons
        dominionWarBattle:
          type: boolean
          description: Whether this conflict should be a Dominion war battle
        alternateReality:
          type: boolean
          description: Whether this conflict should be from alternate reality
    ConflictHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Conflict unique ID
        name:
          type: string
          description: Conflict name
      description: Header conflict, embedded in other objects
    ConflictBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Conflict unique ID
        name:
          type: string
          description: Conflict name
        yearFrom:
          type: integer
          description: Starting year of the conflict
        yearTo:
          type: integer
          description: Ending year of the conflict
        earthConflict:
          type: boolean
          description: Whether it was an Earth conflict
        federationWar:
          type: boolean
          description: Whether this conflict is part of war involving Federation
        klingonWar:
          type: boolean
          description: Whether this conflict is part of war involving the Klingons
        dominionWarBattle:
          type: boolean
          description: Whether this conflict is a Dominion war battle
        alternateReality:
          type: boolean
          description: Whether this conflict is from alternate reality
      description: Base conflict, returned in search results
    ConflictFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Conflict unique ID
        name:
          type: string
          description: Conflict name
        yearFrom:
          type: integer
          description: Starting year of the conflict
        yearTo:
          type: integer
          description: Ending year of the conflict
        earthConflict:
          type: boolean
          description: Whether it is an Earth conflict
        federationWar:
          type: boolean
          description: Whether this conflict is a part of war involving Federation
        klingonWar:
          type: boolean
          description: Whether this conflict is a part of war involving the Klingons
        dominionWarBattle:
          type: boolean
          description: Whether this conflict is a Dominion war battle
        alternateReality:
          type: boolean
          description: Whether this conflict is from alternate reality
        locations:
          type: array
          description: Locations this conflict occurred at
          default:
            - []
          items:
            $ref: '#/components/schemas/LocationBase'
        firstSideBelligerents:
          type: array
          description: Organization involved in conflict on first side
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
        firstSideCommanders:
          type: array
          description: Commanders involved in conflict on first side
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
        secondSideBelligerents:
          type: array
          description: Organization involved in conflict on second side
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
        secondSideCommanders:
          type: array
          description: Commanders involved in conflict on second side
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Base conflict, returned in search results
    ConflictBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        conflicts:
          type: array
          description: List of conflicts matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/ConflictBase'
      description: Response object for conflicts search
    ConflictFullResponse:
      type: object
      properties:
        conflict:
          $ref: '#/components/schemas/ConflictFull'
      description: Response object for single conflict query
    ConflictV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Conflict unique ID
        name:
          type: string
          description: Conflict name
        yearFrom:
          type: integer
          description: Starting year of the conflict
        yearTo:
          type: integer
          description: Ending year of the conflict
        earthConflict:
          type: boolean
          description: Whether it is an Earth conflict
        federationWar:
          type: boolean
          description: Whether this conflict is a part of war involving Federation
        klingonWar:
          type: boolean
          description: Whether this conflict is a part of war involving the Klingons
        dominionWarBattle:
          type: boolean
          description: Whether this conflict is a Dominion war battle
        alternateReality:
          type: boolean
          description: Whether this conflict is from alternate reality
        locations:
          type: array
          description: Locations this conflict occurred at
          default:
            - []
          items:
            $ref: '#/components/schemas/LocationBase'
        firstSideBelligerents:
          type: array
          description: Organization involved in conflict on first side
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
        firstSideLocations:
          type: array
          description: Locations involved in conflict on first side
          default:
            - []
          items:
            $ref: '#/components/schemas/LocationV2Base'
        firstSideCommanders:
          type: array
          description: Commanders involved in conflict on first side
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
        secondSideBelligerents:
          type: array
          description: Organization involved in conflict on second side
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
        secondSideLocations:
          type: array
          description: Locations involved in conflict on second side
          default:
            - []
          items:
            $ref: '#/components/schemas/LocationV2Base'
        secondSideCommanders:
          type: array
          description: Commanders involved in conflict on second side
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Base conflict, returned in search results (V2)
    ConflictV2FullResponse:
      type: object
      properties:
        conflict:
          $ref: '#/components/schemas/ConflictV2Full'
      description: Response object for single conflict query (V2)
    ContentLanguage:
      type: object
      properties:
        uid:
          type: string
          description: Language unique ID
        name:
          type: string
          description: Language name
        iso6391Code:
          type: string
          description: ISO 639-1 code
      description: Content langauge
    ContentRatingSystem:
      type: string
      description: Content rating system
      enum:
        - BBFC
        - OFLC
        - OFLCNZ
        - DJCTQ
        - MDA
        - MPAA
        - CHVRS
        - RCQ
        - IFCO
        - FSK
        - NICAM
        - MCCYP
        - EIRIN
        - HK
        - CBFC
        - NMHH
        - VRC
        - RSAC
        - ESRB
        - ELSPA
        - PEGI
        - USK
        - SELL
        - ADESE
        - GSRR
        - ITUNES
    ContentRating:
      type: object
      properties:
        uid:
          type: string
          description: Rating unique ID
        contentRatingSystem:
          $ref: '#/components/schemas/ContentRatingSystem'
        rating:
          type: string
          description: Rating within specified content rating system
      description: Rating of video release, etc.
    Country:
      type: object
      properties:
        uid:
          type: string
          description: Country unique ID
        name:
          type: string
          description: Country name
        iso31661Alpha2Code:
          type: string
          description: ISO 3166-1 alpha-2 code
      description: Real-world country
    DataVersion:
      required:
        - dataVersion
      type: object
      properties:
        dataVersion:
          type: string
          description: Version of the data served by this STAPI instance
      description: Data version
    ElementHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Element unique ID
        name:
          type: string
          description: Element name
      description: Header element, embedded in other objects
    ElementBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Element unique ID
        name:
          type: string
          description: Element name
        symbol:
          type: string
          description: Element symbol
        atomicNumber:
          type: integer
          description: Element atomic number
        atomicWeight:
          type: integer
          description: Element atomic weight
        transuranium:
          type: boolean
          description: Whether it's a transuranium
        gammaSeries:
          type: boolean
          description: Whether it belongs to Gamma series
        hypersonicSeries:
          type: boolean
          description: Whether it belongs to Hypersonic series
        megaSeries:
          type: boolean
          description: Whether it belongs to Mega series
        omegaSeries:
          type: boolean
          description: Whether it belongs to Omega series
        transonicSeries:
          type: boolean
          description: Whether it belongs to Transonic series
        worldSeries:
          type: boolean
          description: Whether it belongs to World series
      description: Base element, returned in search results
    ElementFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Element unique ID
        name:
          type: string
          description: Element name
        symbol:
          type: string
          description: Element symbol
        atomicNumber:
          type: integer
          description: Element atomic number
        atomicWeight:
          type: integer
          description: Element atomic weight
        transuranium:
          type: boolean
          description: Whether it's a transuranium
        gammaSeries:
          type: boolean
          description: Whether it belongs to Gamma series
        hypersonicSeries:
          type: boolean
          description: Whether it belongs to Hypersonic series
        megaSeries:
          type: boolean
          description: Whether it belongs to Mega series
        omegaSeries:
          type: boolean
          description: Whether it belongs to Omega series
        transonicSeries:
          type: boolean
          description: Whether it belongs to Transonic series
        worldSeries:
          type: boolean
          description: Whether it belongs to World series
      description: Full element, returned when queried using UID
    ElementBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        elements:
          type: array
          description: List of elements matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/ElementBase'
      description: Response object for elements search
    ElementFullResponse:
      type: object
      properties:
        element:
          $ref: '#/components/schemas/ElementFull'
      description: Response object for single element query
    ElementV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Element unique ID
        name:
          type: string
          description: Element name
        symbol:
          type: string
          description: Element symbol
        atomicNumber:
          type: integer
          description: Element atomic number
        atomicWeight:
          type: integer
          description: Element atomic weight
        transuranic:
          type: boolean
          description: Whether it's a transuranic
        gammaSeries:
          type: boolean
          description: Whether it belongs to Gamma series
        hypersonicSeries:
          type: boolean
          description: Whether it belongs to Hypersonic series
        megaSeries:
          type: boolean
          description: Whether it belongs to Mega series
        omegaSeries:
          type: boolean
          description: Whether it belongs to Omega series
        transonicSeries:
          type: boolean
          description: Whether it belongs to Transonic series
        worldSeries:
          type: boolean
          description: Whether it belongs to World series
      description: Base element, returned in search results (v2)
    ElementV2SearchCriteria:
      type: object
      description: Element search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Element name
        symbol:
          type: string
          description: Element symbol
        transuranic:
          type: boolean
          description: Whether it should be a transuranic
        gammaSeries:
          type: boolean
          description: Whether it should belong to Gamma series
        hypersonicSeries:
          type: boolean
          description: Whether it should belong to Hypersonic series
        megaSeries:
          type: boolean
          description: Whether it should belong to Mega series
        omegaSeries:
          type: boolean
          description: Whether it should belong to Omega series
        transonicSeries:
          type: boolean
          description: Whether it should belong to Transonic series
        worldSeries:
          type: boolean
          description: Whether it should belong to World series
    ElementV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Element unique ID
        name:
          type: string
          description: Element name
        symbol:
          type: string
          description: Element symbol
        atomicNumber:
          type: integer
          description: Element atomic number
        atomicWeight:
          type: integer
          description: Element atomic weight
        transuranic:
          type: boolean
          description: Whether it's a transuranic
        gammaSeries:
          type: boolean
          description: Whether it belongs to Gamma series
        hypersonicSeries:
          type: boolean
          description: Whether it belongs to Hypersonic series
        megaSeries:
          type: boolean
          description: Whether it belongs to Mega series
        omegaSeries:
          type: boolean
          description: Whether it belongs to Omega series
        transonicSeries:
          type: boolean
          description: Whether it belongs to Transonic series
        worldSeries:
          type: boolean
          description: Whether it belongs to World series
      description: Full element, returned when queried using UID (V2)
    ElementV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        elements:
          type: array
          description: List of elements matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/ElementV2Base'
      description: Response object for elements search (V2)
    ElementV2FullResponse:
      type: object
      properties:
        element:
          $ref: '#/components/schemas/ElementV2Full'
      description: Response object for single element query (V2)
    EpisodeSearchCriteria:
      type: object
      description: Episode search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Episode title
        seasonNumberFrom:
          type: integer
          description: Minimal season number
          format: int32
        seasonNumberTo:
          type: integer
          description: Maximal season number
          format: int32
        episodeNumberFrom:
          type: integer
          description: Minimal episode number in season
          format: int32
        episodeNumberTo:
          type: integer
          description: Maximal episode number in season
          format: int32
        productionSerialNumber:
          type: string
          description: Production serial number
        featureLength:
          type: boolean
          description: Whether it should be a feature length episode
        stardateFrom:
          type: number
          description: Starting stardate of episode story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of episode story
          format: float
        yearFrom:
          type: integer
          description: Starting year of episode story
          format: int32
        yearTo:
          type: integer
          description: Ending year of episode story
          format: int32
        usAirDateFrom:
          type: string
          description: Minimal date the episode was first aired in the United
            States
          format: date
        usAirDateTo:
          type: string
          description: Maximal date the episode was first aired in the United
            States
          format: date
        finalScriptDateFrom:
          type: string
          description: Minimal date the episode script was completed
          format: date
        finalScriptDateTo:
          type: string
          description: Maximal date the episode script was completed
          format: date
    EpisodeHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Episode unique ID
        title:
          type: string
          description: Episode title
      description: Header episode, embedded in other objects
    EpisodeBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Episode unique ID
        title:
          type: string
          description: Episode title
        titleGerman:
          type: string
          description: Episode title in German
        titleItalian:
          type: string
          description: Episode title in Italian
        titleJapanese:
          type: string
          description: Episode title in Japanese
        series:
          $ref: '#/components/schemas/SeriesHeader'
        season:
          $ref: '#/components/schemas/SeasonHeader'
        seasonNumber:
          type: integer
          description: Season number
        episodeNumber:
          type: integer
          description: Episode number in season
        productionSerialNumber:
          type: string
          description: Production serial number
        featureLength:
          type: boolean
          description: Whether it's a feature length episode
        stardateFrom:
          type: number
          description: Starting stardate of episode story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of episode story
          format: float
        yearFrom:
          type: integer
          description: Starting year of episode story
        yearTo:
          type: integer
          description: Ending year of episode story
        usAirDate:
          type: string
          description: Date the episode was first aired in the United States
          format: date
        finalScriptDate:
          type: string
          description: Date the episode script was completed
          format: date
      description: Base episode, returned in search results
    EpisodeFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Episode unique ID
        title:
          type: string
          description: Episode title
        titleGerman:
          type: string
          description: Episode title in German
        titleItalian:
          type: string
          description: Episode title in Italian
        titleJapanese:
          type: string
          description: Episode title in Japanese
        series:
          $ref: '#/components/schemas/SeriesBase'
        season:
          $ref: '#/components/schemas/SeasonBase'
        seasonNumber:
          type: integer
          description: Season number
        episodeNumber:
          type: integer
          description: Episode number in season
        productionSerialNumber:
          type: string
          description: Production serial number
        featureLength:
          type: boolean
          description: Whether it's a feature length episode
        stardateFrom:
          type: number
          description: Starting stardate of episode story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of episode story
          format: float
        yearFrom:
          type: integer
          description: Starting year of episode story
        yearTo:
          type: integer
          description: Ending year of episode story
        usAirDate:
          type: string
          description: Date the episode was first aired in the United States
          format: date
        finalScriptDate:
          type: string
          description: Date the episode script was completed
          format: date
        writers:
          type: array
          description: Writers involved in the episode
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        teleplayAuthors:
          type: array
          description: Teleplay authors involved in the episode
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        storyAuthors:
          type: array
          description: Story authors involved in the episode
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        directors:
          type: array
          description: Directors authors involved in the episode
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        performers:
          type: array
          description: Performers appearing in the episode
          default:
            - []
          items:
            $ref: '#/components/schemas/PerformerBase'
        stuntPerformers:
          type: array
          description: Stunt performers appearing in the episode
          default:
            - []
          items:
            $ref: '#/components/schemas/PerformerBase'
        standInPerformers:
          type: array
          description: Stand-in performers appearing in the episode
          default:
            - []
          items:
            $ref: '#/components/schemas/PerformerBase'
        characters:
          type: array
          description: Characters appearing in the episode
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full episode, returned when queried using UID
    EpisodeBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        episodes:
          type: array
          description: List of episodes matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
      description: Response object for episodes search
    EpisodeFullResponse:
      type: object
      properties:
        episode:
          $ref: '#/components/schemas/EpisodeFull'
      description: Response object for single episode query
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
      description: Error object
    FoodSearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Food name
        earthlyOrigin:
          type: boolean
          description: Whether it should be of earthly origin
        dessert:
          type: boolean
          description: Whether it should be a dessert
        fruit:
          type: boolean
          description: Whether it should be a fruit
        herbOrSpice:
          type: boolean
          description: Whether it should be an herb or a spice
        sauce:
          type: boolean
          description: Whether it should be a sauce
        soup:
          type: boolean
          description: Whether it should be a soup
        beverage:
          type: boolean
          description: Whether it should be a beverage
        alcoholicBeverage:
          type: boolean
          description: Whether it should be an alcoholic beverage
        juice:
          type: boolean
          description: Whether it should be a juice
        tea:
          type: boolean
          description: Whether it should be a tea
    FoodHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Food unique ID
        name:
          type: string
          description: Food name
      description: Header food, embedded in other objects
    FoodBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Food unique ID
        name:
          type: string
          description: Food name
        earthlyOrigin:
          type: boolean
          description: Whether it's of earthly origin
        dessert:
          type: boolean
          description: Whether it's a dessert
        fruit:
          type: boolean
          description: Whether it's a fruit
        herbOrSpice:
          type: boolean
          description: Whether it's a herb or a spice
        sauce:
          type: boolean
          description: Whether it's a sauce
        soup:
          type: boolean
          description: Whether it's a soup
        beverage:
          type: boolean
          description: Whether it's a beverage
        alcoholicBeverage:
          type: boolean
          description: Whether it's an alcoholic beverage
        juice:
          type: boolean
          description: Whether it's a juice
        tea:
          type: boolean
          description: Whether it's a tea
      description: Base food, returned in search results
    FoodFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Food unique ID
        name:
          type: string
          description: Food name
        earthlyOrigin:
          type: boolean
          description: Whether it's of earthly origin
        dessert:
          type: boolean
          description: Whether it's a dessert
        fruit:
          type: boolean
          description: Whether it's a fruit
        herbOrSpice:
          type: boolean
          description: Whether it's an herb or a spice
        sauce:
          type: boolean
          description: Whether it's a sauce
        soup:
          type: boolean
          description: Whether it's a soup
        beverage:
          type: boolean
          description: Whether it's a beverage
        alcoholicBeverage:
          type: boolean
          description: Whether it's an alcoholic beverage
        juice:
          type: boolean
          description: Whether it's a juice
        tea:
          type: boolean
          description: Whether it's a tea
      description: Full food, returned when queried using UID
    FoodBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        foods:
          type: array
          description: List of foods matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/FoodBase'
      description: Response object for foods search
    FoodFullResponse:
      type: object
      properties:
        food:
          $ref: '#/components/schemas/FoodFull'
      description: Response object for single food query
    Gender:
      type: string
      description: Gender
      enum:
        - F
        - M
    Genre:
      type: object
      properties:
        uid:
          type: string
          description: Genre unique ID
        name:
          type: string
          description: Genre name
      description: Genre of video games
    LiteratureSearchCriteria:
      type: object
      description: Literature search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Literature title
        earthlyOrigin:
          type: boolean
          description: Whether it should be of earthly origin
        shakespeareanWork:
          type: boolean
          description: Whether it should be a Shakespearean work
        report:
          type: boolean
          description: Whether it should be a report
        scientificLiterature:
          type: boolean
          description: Whether it should be a scientific literature
        technicalManual:
          type: boolean
          description: Whether it should be a technical manual
        religiousLiterature:
          type: boolean
          description: Whether it should be a religious literature
    LiteratureHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Literature unique ID
        title:
          type: string
          description: Literature title
      description: Header literature, embedded in other objects
    LiteratureBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Literature unique ID
        title:
          type: string
          description: Literature title
        earthlyOrigin:
          type: boolean
          description: Whether it's of earthly origin
        shakespeareanWork:
          type: boolean
          description: Whether it's a Shakespearean work
        report:
          type: boolean
          description: Whether it's a report
        scientificLiterature:
          type: boolean
          description: Whether it's a scientific literature
        technicalManual:
          type: boolean
          description: Whether it's a technical manual
        religiousLiterature:
          type: boolean
          description: Whether it's a religious literature
      description: Base literature, returned in search results
    LiteratureFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Literature unique ID
        title:
          type: string
          description: Literature title
        earthlyOrigin:
          type: boolean
          description: Whether it's of earthly origin
        shakespeareanWork:
          type: boolean
          description: Whether it's a Shakespearean work
        report:
          type: boolean
          description: Whether it's a report
        scientificLiterature:
          type: boolean
          description: Whether it's a scientific literature
        technicalManual:
          type: boolean
          description: Whether it's a technical manual
        religiousLiterature:
          type: boolean
          description: Whether it's a religious literature
      description: Full literature, returned when queried using UID
    LiteratureBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        literature:
          type: array
          description: List of literature matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/LiteratureBase'
      description: Response object for literature search
    LiteratureFullResponse:
      type: object
      properties:
        literature:
          $ref: '#/components/schemas/LiteratureFull'
      description: Response object for single literature query
    LocationHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Location unique ID
        name:
          type: string
          description: Location name
      description: Header location, embedded in other objects
    LocationBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Location unique ID
        name:
          type: string
          description: Location name
        earthlyLocation:
          type: boolean
          description: Whether it's an earthly location
        fictionalLocation:
          type: boolean
          description: Whether it's a fictional location
        religiousLocation:
          type: boolean
          description: Whether it's a religious location
        geographicalLocation:
          type: boolean
          description: Whether it's a geographical location
        bodyOfWater:
          type: boolean
          description: Whether it's a body of water
        country:
          type: boolean
          description: Whether it's a country
        subnationalEntity:
          type: boolean
          description: Whether it's a subnational entity
        settlement:
          type: boolean
          description: Whether it's a settlement
        usSettlement:
          type: boolean
          description: Whether it's a US settlement
        bajoranSettlement:
          type: boolean
          description: Whether it's a Bajoran settlement
        colony:
          type: boolean
          description: Whether it's a colony
        landform:
          type: boolean
          description: Whether it's a landform
        landmark:
          type: boolean
          description: Whether it's a landmark
        road:
          type: boolean
          description: Whether it's a road
        structure:
          type: boolean
          description: Whether it's a structure
        shipyard:
          type: boolean
          description: Whether it's a shipyard
        buildingInterior:
          type: boolean
          description: Whether it's a building interior
        establishment:
          type: boolean
          description: Whether it's a establishment
        medicalEstablishment:
          type: boolean
          description: Whether it's a medical establishment
        ds9Establishment:
          type: boolean
          description: Whether it's a DS9 establishment
        school:
          type: boolean
          description: Whether it's a school
        mirror:
          type: boolean
          description: Whether this location is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this location is from alternate reality
      description: Base location, returned in search results
    LocationFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Location unique ID
        name:
          type: string
          description: Location name
        earthlyLocation:
          type: boolean
          description: Whether it's an earthly location
        fictionalLocation:
          type: boolean
          description: Whether it's a fictional location
        religiousLocation:
          type: boolean
          description: Whether it's a religious location
        geographicalLocation:
          type: boolean
          description: Whether it's a geographical location
        bodyOfWater:
          type: boolean
          description: Whether it's a body of water
        country:
          type: boolean
          description: Whether it's a country
        subnationalEntity:
          type: boolean
          description: Whether it's a subnational entity
        settlement:
          type: boolean
          description: Whether it's a settlement
        usSettlement:
          type: boolean
          description: Whether it's a US settlement
        bajoranSettlement:
          type: boolean
          description: Whether it's a Bajoran settlement
        colony:
          type: boolean
          description: Whether it's a colony
        landform:
          type: boolean
          description: Whether it's a landform
        landmark:
          type: boolean
          description: Whether it's a landmark
        road:
          type: boolean
          description: Whether it's a road
        structure:
          type: boolean
          description: Whether it's a structure
        shipyard:
          type: boolean
          description: Whether it's a shipyard
        buildingInterior:
          type: boolean
          description: Whether it's a building interior
        establishment:
          type: boolean
          description: Whether it's a establishment
        medicalEstablishment:
          type: boolean
          description: Whether it's a medical establishment
        ds9Establishment:
          type: boolean
          description: Whether it's a DS9 establishment
        school:
          type: boolean
          description: Whether it's a school
        mirror:
          type: boolean
          description: Whether this location is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this location is from alternate reality
      description: Full location, returned when queried using UID
    LocationBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        locations:
          type: array
          description: List of locations matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/LocationBase'
      description: Response object for locations search
    LocationFullResponse:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/LocationFull'
      description: Response object for single location query
    LocationV2SearchCriteria:
      type: object
      description: Location search criteria (V2)
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Location name
        earthlyLocation:
          type: boolean
          description: Whether it should be an earthly location
        qonosLocation:
          type: boolean
          description: Whether it should be a Qo'nos location
        fictionalLocation:
          type: boolean
          description: Whether it should be a fictional location
        mythologicalLocation:
          type: boolean
          description: Whether it should be a mythological location
        religiousLocation:
          type: boolean
          description: Whether it should be a religious location
        geographicalLocation:
          type: boolean
          description: Whether it should be a geographical location
        bodyOfWater:
          type: boolean
          description: Whether it should be a body of water
        country:
          type: boolean
          description: Whether it should be a country
        subnationalEntity:
          type: boolean
          description: Whether it should be a subnational entity
        settlement:
          type: boolean
          description: Whether it should be a settlement
        usSettlement:
          type: boolean
          description: Whether it should be a US settlement
        bajoranSettlement:
          type: boolean
          description: Whether it should be a Bajoran settlement
        colony:
          type: boolean
          description: Whether it should be a colony
        landform:
          type: boolean
          description: Whether it should be a landform
        road:
          type: boolean
          description: Whether it should be a road
        structure:
          type: boolean
          description: Whether it should be a structure
        shipyard:
          type: boolean
          description: Whether it should be a shipyard
        buildingInterior:
          type: boolean
          description: Whether it should be a building interior
        establishment:
          type: boolean
          description: Whether it should be a establishment
        medicalEstablishment:
          type: boolean
          description: Whether it should be a medical establishment
        ds9Establishment:
          type: boolean
          description: Whether it should be a DS9 establishment
        school:
          type: boolean
          description: Whether it should be a school
        restaurant:
          type: boolean
          description: Whether it should be a restaurant
        residence:
          type: boolean
          description: Whether it should be a residence
        mirror:
          type: boolean
          description: Whether this location should be from mirror universe
        alternateReality:
          type: boolean
          description: Whether this location should be from alternate reality
    LocationV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Location unique ID
        name:
          type: string
          description: Location name
        earthlyLocation:
          type: boolean
          description: Whether it's an earthly location
        qonosLocation:
          type: boolean
          description: Whether it's a Qo'noS location
        fictionalLocation:
          type: boolean
          description: Whether it's a fictional location
        mythologicalLocation:
          type: boolean
          description: Whether it's a mythological location
        religiousLocation:
          type: boolean
          description: Whether it's a religious location
        geographicalLocation:
          type: boolean
          description: Whether it's a geographical location
        bodyOfWater:
          type: boolean
          description: Whether it's a body of water
        country:
          type: boolean
          description: Whether it's a country
        subnationalEntity:
          type: boolean
          description: Whether it's a subnational entity
        settlement:
          type: boolean
          description: Whether it's a settlement
        usSettlement:
          type: boolean
          description: Whether it's a US settlement
        bajoranSettlement:
          type: boolean
          description: Whether it's a Bajoran settlement
        colony:
          type: boolean
          description: Whether it's a colony
        landform:
          type: boolean
          description: Whether it's a landform
        road:
          type: boolean
          description: Whether it's a road
        structure:
          type: boolean
          description: Whether it's a structure
        shipyard:
          type: boolean
          description: Whether it's a shipyard
        buildingInterior:
          type: boolean
          description: Whether it's a building interior
        establishment:
          type: boolean
          description: Whether it's a establishment
        medicalEstablishment:
          type: boolean
          description: Whether it's a medical establishment
        ds9Establishment:
          type: boolean
          description: Whether it's a DS9 establishment
        school:
          type: boolean
          description: Whether it's a school
        restaurant:
          type: boolean
          description: Whether it's a restaurant
        residence:
          type: boolean
          description: Whether it's a residence
        mirror:
          type: boolean
          description: Whether this location is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this location is from alternate reality
      description: Base location, returned in search results (v2)
    LocationV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Location unique ID
        name:
          type: string
          description: Location name
        earthlyLocation:
          type: boolean
          description: Whether it's an earthly location
        qonosLocation:
          type: boolean
          description: Whether it's a Qo'noS location
        fictionalLocation:
          type: boolean
          description: Whether it's a fictional location
        mythologicalLocation:
          type: boolean
          description: Whether it's a mythological location
        religiousLocation:
          type: boolean
          description: Whether it's a religious location
        geographicalLocation:
          type: boolean
          description: Whether it's a geographical location
        bodyOfWater:
          type: boolean
          description: Whether it's a body of water
        country:
          type: boolean
          description: Whether it's a country
        subnationalEntity:
          type: boolean
          description: Whether it's a subnational entity
        settlement:
          type: boolean
          description: Whether it's a settlement
        usSettlement:
          type: boolean
          description: Whether it's a US settlement
        bajoranSettlement:
          type: boolean
          description: Whether it's a Bajoran settlement
        colony:
          type: boolean
          description: Whether it's a colony
        landform:
          type: boolean
          description: Whether it's a landform
        road:
          type: boolean
          description: Whether it's a road
        structure:
          type: boolean
          description: Whether it's a structure
        shipyard:
          type: boolean
          description: Whether it's a shipyard
        buildingInterior:
          type: boolean
          description: Whether it's a building interior
        establishment:
          type: boolean
          description: Whether it's a establishment
        medicalEstablishment:
          type: boolean
          description: Whether it's a medical establishment
        ds9Establishment:
          type: boolean
          description: Whether it's a DS9 establishment
        school:
          type: boolean
          description: Whether it's a school
        restaurant:
          type: boolean
          description: Whether it's a restaurant
        residence:
          type: boolean
          description: Whether it's a residence
        mirror:
          type: boolean
          description: Whether this location is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this location is from alternate reality
      description: Full location, returned when queried using UID (V2)
    LocationV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        locations:
          type: array
          description: List of locations matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/LocationV2Base'
      description: Response object for locations search (V2)
    LocationV2FullResponse:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/LocationV2Full'
      description: Response object for single location query (V2)
    MagazineSearchCriteria:
      type: object
      description: Magazine search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Magazine title
        publishedYearFrom:
          type: integer
          description: Starting year the magazine was published
          format: int32
        publishedYearTo:
          type: integer
          description: Ending year the magazine was published
          format: int32
        numberOfPagesFrom:
          type: integer
          description: Minimal number of pages
          format: int32
        numberOfPagesTo:
          type: integer
          description: Maximal number of pages
          format: int32
    MagazineHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Magazine unique ID
        title:
          type: string
          description: Magazine title
      description: Header magazine, embedded in other objects
    MagazineBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Magazine unique ID
        title:
          type: string
          description: Magazine title
        publishedYear:
          type: integer
          description: Year the magazine was published
        publishedMonth:
          type: integer
          description: Month the magazine was published
        publishedDay:
          type: integer
          description: Day the magazine was published
        coverYear:
          type: integer
          description: Cover publication year
        coverMonth:
          type: integer
          description: Cover publication month
        coverDay:
          type: integer
          description: Cover publication day
        numberOfPages:
          type: integer
          description: Number of pages
        issueNumber:
          type: string
          description: Magazine issue number
      description: Base magazine, returned in search results
    MagazineFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Magazine unique ID
        title:
          type: string
          description: Magazine title
        publishedYear:
          type: integer
          description: Year the magazine was published
        publishedMonth:
          type: integer
          description: Month the magazine was published
        publishedDay:
          type: integer
          description: Day the magazine was published
        coverYear:
          type: integer
          description: Cover publication year
        coverMonth:
          type: integer
          description: Cover publication month
        coverDay:
          type: integer
          description: Cover publication day
        numberOfPages:
          type: integer
          description: Number of pages
        issueNumber:
          type: string
          description: Magazine issue number
        magazineSeries:
          type: array
          description: Magazine series this magazine is included in
          default:
            - []
          items:
            $ref: '#/components/schemas/MagazineSeriesBase'
        editors:
          type: array
          description: Editors involved in the magazine
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        publishers:
          type: array
          description: Magazine publishers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
      description: Full magazine, returned when queried using UID
    MagazineBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        magazines:
          type: array
          description: List of magazines matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/MagazineBase'
      description: Response object for magazine search
    MagazineFullResponse:
      type: object
      properties:
        magazine:
          $ref: '#/components/schemas/MagazineFull'
      description: Response object for single magazine query
    MagazineSeriesSearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Magazine series title
        publishedYearFrom:
          type: integer
          description: Starting year the magazine series was published
          format: int32
        publishedYearTo:
          type: integer
          description: Ending year the magazine series was published
          format: int32
        numberOfIssuesFrom:
          type: integer
          description: Minimal number of issues
          format: int32
        numberOfIssuesTo:
          type: integer
          description: Maximal number of issues
          format: int32
    MagazineSeriesHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Magazine series unique ID
        title:
          type: string
          description: Magazine series title
      description: Header book series, embedded in other objects
    MagazineSeriesBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Magazine series unique ID
        title:
          type: string
          description: Magazine series title
        publishedYearFrom:
          type: integer
          description: Year from which the magazine series was published
        publishedMonthFrom:
          type: integer
          description: Month from which the magazine series was published
        publishedYearTo:
          type: integer
          description: Year to which the magazine series was published
        publishedMonthTo:
          type: integer
          description: Month to which the magazine series was published
        numberOfIssues:
          type: integer
          description: Number of issues
      description: Base magazine series, returned in search results
    MagazineSeriesFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Magazine series unique ID
        title:
          type: string
          description: Magazine series title
        publishedYearFrom:
          type: integer
          description: Year from which the magazine series was published
        publishedMonthFrom:
          type: integer
          description: Month from which the magazine series was published
        publishedYearTo:
          type: integer
          description: Year to which the magazine series was published
        publishedMonthTo:
          type: integer
          description: Month to which the magazine series was published
        numberOfIssues:
          type: integer
          description: Number of issues
        publishers:
          type: array
          description: Companies that published this magazine series
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        editors:
          type: array
          description: Editors involved in the magazine series
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        magazines:
          type: array
          description: Magazines included in this magazine series
          default:
            - []
          items:
            $ref: '#/components/schemas/MagazineBase'
      description: Full magazine series, returned when queried using UID
    MagazineSeriesBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        magazineSeries:
          type: array
          description: List of magazine series matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/MagazineSeriesBase'
      description: Response object for magazine series search
    MagazineSeriesFullResponse:
      type: object
      properties:
        magazineSeries:
          $ref: '#/components/schemas/MagazineSeriesFull'
      description: Response object for single magazine series query
    MaritalStatus:
      type: string
      description: Marital status
      enum:
        - SINGLE
        - ENGAGED
        - MARRIED
        - DIVORCED
        - REMARRIED
        - SEPARATED
        - WIDOWED
        - CAPTAINS_WOMAN
    MaterialSearchCriteria:
      type: object
      description: Material search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Material name
        chemicalCompound:
          type: boolean
          description: Whether it should be a chemical compound
        biochemicalCompound:
          type: boolean
          description: Whether it should be a biochemical compound
        drug:
          type: boolean
          description: Whether it should be a drug
        poisonousSubstance:
          type: boolean
          description: Whether it should be a poisonous substance
        explosive:
          type: boolean
          description: Whether it should be an explosive
        gemstone:
          type: boolean
          description: Whether it should be a gemstone
        alloyOrComposite:
          type: boolean
          description: Whether it should be an alloy or a composite
        fuel:
          type: boolean
          description: Whether it should be a fuel
        mineral:
          type: boolean
          description: Whether it should be a mineral
        preciousMaterial:
          type: boolean
          description: Whether it should be a precious material
    MaterialHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Material unique ID
        name:
          type: string
          description: Material name
      description: Header material, embedded in other objects
    MaterialBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Material unique ID
        name:
          type: string
          description: Material name
        chemicalCompound:
          type: boolean
          description: Whether it's a chemical compound
        biochemicalCompound:
          type: boolean
          description: Whether it's a biochemical compound
        drug:
          type: boolean
          description: Whether it's a drug
        poisonousSubstance:
          type: boolean
          description: Whether it's a poisonous substance
        explosive:
          type: boolean
          description: Whether it's an explosive
        gemstone:
          type: boolean
          description: Whether it's a gemstone
        alloyOrComposite:
          type: boolean
          description: Whether it's an alloy or a composite
        fuel:
          type: boolean
          description: Whether it's a fuel
        mineral:
          type: boolean
          description: Whether it's a mineral
        preciousMaterial:
          type: boolean
          description: Whether it's a precious material
      description: Base material, returned in search results
    MaterialFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Material unique ID
        name:
          type: string
          description: Material name
        chemicalCompound:
          type: boolean
          description: Whether it's a chemical compound
        biochemicalCompound:
          type: boolean
          description: Whether it's a biochemical compound
        drug:
          type: boolean
          description: Whether it's a drug
        poisonousSubstance:
          type: boolean
          description: Whether it's a poisonous substance
        explosive:
          type: boolean
          description: Whether it's an explosive
        gemstone:
          type: boolean
          description: Whether it's a gemstone
        alloyOrComposite:
          type: boolean
          description: Whether it's an alloy or a composite
        fuel:
          type: boolean
          description: Whether it's a fuel
        mineral:
          type: boolean
          description: Whether it's a mineral
        preciousMaterial:
          type: boolean
          description: Whether it's a precious material
      description: Full material, returned when queried using UID
    MaterialBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        materials:
          type: array
          description: List of materials matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/MaterialBase'
      description: Response object for materials search
    MaterialFullResponse:
      type: object
      properties:
        material:
          $ref: '#/components/schemas/MaterialFull'
      description: Response object for single material query
    MedicalConditionSearchCriteria:
      type: object
      description: Medical condition search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Medical condition name
        psychologicalCondition:
          type: boolean
          description: Whether it should be a psychological condition
    MedicalConditionHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Medical condition unique ID
        name:
          type: string
          description: Medical condition name
      description: Header medical condition, embedded in other objects
    MedicalConditionBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Medical condition unique ID
        name:
          type: string
          description: Medical condition name
        psychologicalCondition:
          type: boolean
          description: Whether it's a psychological condition
      description: Base medical condition, returned in search results
    MedicalConditionFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Medical condition unique ID
        name:
          type: string
          description: Medical condition name
        psychologicalCondition:
          type: boolean
          description: Whether it's a psychological condition
      description: Full medical condition, returned when queried using UID
    MedicalConditionBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        medicalConditions:
          type: array
          description: List of medical conditions matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/MedicalConditionBase'
      description: Response object for medical conditions search
    MedicalConditionFullResponse:
      type: object
      properties:
        medicalCondition:
          $ref: '#/components/schemas/MedicalConditionFull'
      description: Response object for single medical condition query
    MovieSearchCriteria:
      type: object
      description: Movie search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Movie title
        stardateFrom:
          type: number
          description: Starting stardate of movie story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of movie story
          format: float
        yearFrom:
          type: integer
          description: Starting year of movie story
          format: int32
        yearTo:
          type: integer
          description: Ending year of movie story
          format: int32
        usReleaseDateFrom:
          type: string
          description: Minimal date the movie was first released in the United
            States
          format: date
        usReleaseDateTo:
          type: string
          description: Maximal date the movie was first released in the United
            States
          format: date
    MovieHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Movie unique ID
        title:
          type: string
          description: Movie title
      description: Header movie, embedded in other objects
    MovieBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Movie unique ID
        title:
          type: string
          description: Movie title
        mainDirector:
          $ref: '#/components/schemas/StaffHeader'
        titleBulgarian:
          type: string
          description: Movie title in Bulgarian
        titleCatalan:
          type: string
          description: Movie title in Catalan
        titleChineseTraditional:
          type: string
          description: Movie title in Chinese traditional
        titleGerman:
          type: string
          description: Movie title in German
        titleItalian:
          type: string
          description: Movie title in Italian
        titleJapanese:
          type: string
          description: Movie title in Japanese
        titlePolish:
          type: string
          description: Movie title in Polish
        titleRussian:
          type: string
          description: Movie title in Russian
        titleSerbian:
          type: string
          description: Movie title in Serbian
        titleSpanish:
          type: string
          description: Movie title in Spanish
        stardateFrom:
          type: number
          description: Starting stardate of movie story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of movie story
          format: float
        yearFrom:
          type: integer
          description: Starting year of movie story
        yearTo:
          type: integer
          description: Ending year of movie story
        usReleaseDate:
          type: string
          description: Date the movie was first released in the United States
          format: date
      description: Base movie, returned in search results
    MovieFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Movie unique ID
        title:
          type: string
          description: Movie title
        mainDirector:
          $ref: '#/components/schemas/StaffBase'
        titleBulgarian:
          type: string
          description: Movie title in Bulgarian
        titleCatalan:
          type: string
          description: Movie title in Catalan
        titleChineseTraditional:
          type: string
          description: Movie title in Chinese traditional
        titleGerman:
          type: string
          description: Movie title in German
        titleItalian:
          type: string
          description: Movie title in Italian
        titleJapanese:
          type: string
          description: Movie title in Japanese
        titlePolish:
          type: string
          description: Movie title in Polish
        titleRussian:
          type: string
          description: Movie title in Russian
        titleSerbian:
          type: string
          description: Movie title in Serbian
        titleSpanish:
          type: string
          description: Movie title in Spanish
        stardateFrom:
          type: number
          description: Starting stardate of movie story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of movie story
          format: float
        yearFrom:
          type: integer
          description: Starting year of movie story
        yearTo:
          type: integer
          description: Ending year of movie story
        usReleaseDate:
          type: string
          description: Date the movie was first released in the United States
          format: date
        writers:
          type: array
          description: Writers involved in the movie
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        screenplayAuthors:
          type: array
          description: Screenplay authors involved in the movie
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        storyAuthors:
          type: array
          description: Story authors authors involved in the movie
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        directors:
          type: array
          description: Directors authors involved in the movie
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        producers:
          type: array
          description: Producers authors involved in the movie
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        staff:
          type: array
          description: Other staff involved in the movie
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        performers:
          type: array
          description: Performers appearing in the movie
          default:
            - []
          items:
            $ref: '#/components/schemas/PerformerBase'
        stuntPerformers:
          type: array
          description: Stunt performers appearing in the movie
          default:
            - []
          items:
            $ref: '#/components/schemas/PerformerBase'
        standInPerformers:
          type: array
          description: Stand-in performers appearing in the movie
          default:
            - []
          items:
            $ref: '#/components/schemas/PerformerBase'
        characters:
          type: array
          description: Characters appearing in the movie
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full movie, returned when queried using UID
    MovieBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        movies:
          type: array
          description: List of movies matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
      description: Response object for movies search
    MovieFullResponse:
      type: object
      properties:
        movie:
          $ref: '#/components/schemas/MovieFull'
      description: Response object for single movie query
    OccupationHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Occupation unique ID
        name:
          type: string
          description: Occupation name
      description: Header occupation, embedded in other objects
    OccupationBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Occupation unique ID
        name:
          type: string
          description: Occupation name
        legalOccupation:
          type: boolean
          description: Whether it's a legal occupation
        medicalOccupation:
          type: boolean
          description: Whether it's a medical occupation
        scientificOccupation:
          type: boolean
          description: Whether it's a scientific occupation
      description: Base occupations, returned in search results
    OccupationFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Occupation unique ID
        name:
          type: string
          description: Occupation name
        legalOccupation:
          type: boolean
          description: Whether it's a legal occupation
        medicalOccupation:
          type: boolean
          description: Whether it's a medical occupation
        scientificOccupation:
          type: boolean
          description: Whether it's a scientific occupation
        characters:
          type: array
          description: Characters with this occupation
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full occupation, returned when queried using UID
    OccupationBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        occupations:
          type: array
          description: List of occupations matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/OccupationBase'
      description: Response object for occupations search
    OccupationFullResponse:
      type: object
      properties:
        occupation:
          $ref: '#/components/schemas/OccupationFull'
      description: Response object for single occupation query
    OccupationV2SearchCriteria:
      type: object
      description: Occupation search criteria (V2)
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Occupation name
        artsOccupation:
          type: boolean
          description: Whether it should be an arts occupation
        communicationOccupation:
          type: boolean
          description: Whether it should be a communication occupation
        economicOccupation:
          type: boolean
          description: Whether it should be an economic occupation
        educationOccupation:
          type: boolean
          description: Whether it should be an education occupation
        entertainmentOccupation:
          type: boolean
          description: Whether it should be an entertainment occupation
        illegalOccupation:
          type: boolean
          description: Whether it should be an illegal occupation
        legalOccupation:
          type: boolean
          description: Whether it should be a legal occupation
        medicalOccupation:
          type: boolean
          description: Whether it should be a medical occupation
        scientificOccupation:
          type: boolean
          description: Whether it should be a scientific occupation
        sportsOccupation:
          type: boolean
          description: Whether it should be a sports occupation
        victualOccupation:
          type: boolean
          description: Whether it should be a victual occupation
    OccupationV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Occupation unique ID
        name:
          type: string
          description: Occupation name
        artsOccupation:
          type: boolean
          description: Whether it's an arts occupation
        communicationOccupation:
          type: boolean
          description: Whether it's a communication occupation
        economicOccupation:
          type: boolean
          description: Whether it's an economic occupation
        educationOccupation:
          type: boolean
          description: Whether it's an education occupation
        entertainmentOccupation:
          type: boolean
          description: Whether it's an entertainment occupation
        illegalOccupation:
          type: boolean
          description: Whether it's an illegal occupation
        legalOccupation:
          type: boolean
          description: Whether it's a legal occupation
        medicalOccupation:
          type: boolean
          description: Whether it's a medical occupation
        scientificOccupation:
          type: boolean
          description: Whether it's a scientific occupation
        sportsOccupation:
          type: boolean
          description: Whether it's a sports occupation
        victualOccupation:
          type: boolean
          description: Whether it's a victual occupation
      description: Base occupations, returned in search results (V2)
    OccupationV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Occupation unique ID
        name:
          type: string
          description: Occupation name
        artsOccupation:
          type: boolean
          description: Whether it's an arts occupation
        communicationOccupation:
          type: boolean
          description: Whether it's a communication occupation
        economicOccupation:
          type: boolean
          description: Whether it's an economic occupation
        educationOccupation:
          type: boolean
          description: Whether it's an education occupation
        entertainmentOccupation:
          type: boolean
          description: Whether it's an entertainment occupation
        illegalOccupation:
          type: boolean
          description: Whether it's an illegal occupation
        legalOccupation:
          type: boolean
          description: Whether it's a legal occupation
        medicalOccupation:
          type: boolean
          description: Whether it's a medical occupation
        scientificOccupation:
          type: boolean
          description: Whether it's a scientific occupation
        sportsOccupation:
          type: boolean
          description: Whether it's a sports occupation
        victualOccupation:
          type: boolean
          description: Whether it's a victual occupation
        characters:
          type: array
          description: Characters with this occupation
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full occupation, returned when queried using UID (V2)
    OccupationV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        occupations:
          type: array
          description: List of occupations matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/OccupationV2Base'
      description: Response object for occupations search (V2)
    OccupationV2FullResponse:
      type: object
      properties:
        occupation:
          $ref: '#/components/schemas/OccupationV2Full'
      description: Response object for single occupation query (V2)
    OrganizationSearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Organization name
        government:
          type: boolean
          description: Whether it should be a government
        intergovernmentalOrganization:
          type: boolean
          description: Whether it should be an intergovernmental organization
        researchOrganization:
          type: boolean
          description: Whether it should be a research organization
        sportOrganization:
          type: boolean
          description: Whether it should be a sport organization
        medicalOrganization:
          type: boolean
          description: Whether it should be a medical organization
        militaryOrganization:
          type: boolean
          description: Whether it should be a military organization
        militaryUnit:
          type: boolean
          description: Whether it should be a military unit
        governmentAgency:
          type: boolean
          description: Whether it should be a government agency
        lawEnforcementAgency:
          type: boolean
          description: Whether it should be a law enforcement agency
        prisonOrPenalColony:
          type: boolean
          description: Whether it should be a prison or penal colony
        mirror:
          type: boolean
          description: Whether this organization should be from mirror universe
        alternateReality:
          type: boolean
          description: Whether this organization should be from alternate reality
    OrganizationHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Organization unique ID
        name:
          type: string
          description: Organization name
      description: Header organization, embedded in other objects
    OrganizationBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Organization unique ID
        name:
          type: string
          description: Organization name
        government:
          type: boolean
          description: Whether it's a government
        intergovernmentalOrganization:
          type: boolean
          description: Whether it's an intergovernmental organization
        researchOrganization:
          type: boolean
          description: Whether it's a research organization
        sportOrganization:
          type: boolean
          description: Whether it's a sport organization
        medicalOrganization:
          type: boolean
          description: Whether it's a medical organization
        militaryOrganization:
          type: boolean
          description: Whether it's a military organization
        militaryUnit:
          type: boolean
          description: Whether it's a military unit
        governmentAgency:
          type: boolean
          description: Whether it's a government agency
        lawEnforcementAgency:
          type: boolean
          description: Whether it's a law enforcement agency
        prisonOrPenalColony:
          type: boolean
          description: Whether it's a prison or penal colony
        mirror:
          type: boolean
          description: Whether this organization is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this location is from alternate reality
      description: Base organization, returned in search results
    OrganizationFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Organization unique ID
        name:
          type: string
          description: Organization name
        government:
          type: boolean
          description: Whether it's a government
        intergovernmentalOrganization:
          type: boolean
          description: Whether it's an intergovernmental organization
        researchOrganization:
          type: boolean
          description: Whether it's a research organization
        sportOrganization:
          type: boolean
          description: Whether it's a sport organization
        medicalOrganization:
          type: boolean
          description: Whether it's a medical organization
        militaryOrganization:
          type: boolean
          description: Whether it's a military organization
        militaryUnit:
          type: boolean
          description: Whether it's a military unit
        governmentAgency:
          type: boolean
          description: Whether it's a government agency
        lawEnforcementAgency:
          type: boolean
          description: Whether it's a law enforcement agency
        prisonOrPenalColony:
          type: boolean
          description: Whether it's a prison or penal colony
        mirror:
          type: boolean
          description: Whether this organization is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this organization is from alternate reality
        characters:
          type: array
          description: Characters belonging to this organization
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full organization, returned when queried using UID
    OrganizationBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        organizations:
          type: array
          description: List of organizations matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
      description: Response object for organizations search
    OrganizationFullResponse:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationFull'
      description: Response object for single organization query
    PerformerHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Performer unique ID
        name:
          type: string
          description: Performer name
      description: Header performer, embedded in other objects
    PerformerBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Performer unique ID
        name:
          type: string
          description: Performer name
        birthName:
          type: string
          description: Performer birth name
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          description: Date the performer was born
          format: date
        placeOfBirth:
          type: string
          description: Place the performer was born
        dateOfDeath:
          type: string
          description: Date the performer died
          format: date
        placeOfDeath:
          type: string
          description: Place the performer died
        animalPerformer:
          type: boolean
          description: Whether it's an animal performer
        disPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Discovery'
        ds9Performer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Deep
            Space Nine'
        entPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Enterprise'
        filmPerformer:
          type: boolean
          description: Whether it's a performer that appeared in a Star Trek movie
        standInPerformer:
          type: boolean
          description: Whether it's a stand-in performer
        stuntPerformer:
          type: boolean
          description: Whether it's a stunt performer
        tasPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Animated Series'
        tngPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Next Generation'
        tosPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Original Series'
        videoGamePerformer:
          type: boolean
          description: Whether it's a video game performer
        voicePerformer:
          type: boolean
          description: Whether it's a voice performer
        voyPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Voyager'
      description: Base performer, returned in search results
    PerformerFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Performer unique ID
        name:
          type: string
          description: Performer name
        birthName:
          type: string
          description: Performer birth name
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          description: Date the performer was born
          format: date
        placeOfBirth:
          type: string
          description: Place the performer was born
        dateOfDeath:
          type: string
          description: Date the performer died
          format: date
        placeOfDeath:
          type: string
          description: Place the performer died
        animalPerformer:
          type: boolean
          description: Whether it's an animal performer
        disPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Discovery'
        ds9Performer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Deep
            Space Nine'
        entPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Enterprise'
        filmPerformer:
          type: boolean
          description: Whether it's a performer that appeared in a Star Trek movie
        standInPerformer:
          type: boolean
          description: Whether it's a stand-in performer
        stuntPerformer:
          type: boolean
          description: Whether it's a stunt performer
        tasPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Animated Series'
        tngPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Next Generation'
        tosPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Original Series'
        videoGamePerformer:
          type: boolean
          description: Whether it's a video game performer
        voicePerformer:
          type: boolean
          description: Whether it's a voice performer
        voyPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Voyager'
        episodesPerformances:
          type: array
          description: Episodes in which this person appeared as a performer
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        episodesStuntPerformances:
          type: array
          description: Episodes in which this person appeared as a stunt performer
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        episodesStandInPerformances:
          type: array
          description: Episodes in which this person appeared as a stand-in performer
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        moviesPerformances:
          type: array
          description: Movies in which this person appeared as a performer
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        moviesStuntPerformances:
          type: array
          description: Movies in which this person appeared as a stunt performer
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        moviesStandInPerformances:
          type: array
          description: Movies in which this person appeared as a stand-in performer
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        characters:
          type: array
          description: Characters played by this performer
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full performer, returned when queried using UID
    PerformerBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        performers:
          type: array
          description: List of performers matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/PerformerBase'
      description: Response object for performers search
    PerformerFullResponse:
      type: object
      properties:
        performer:
          $ref: '#/components/schemas/PerformerFull'
      description: Response object for single performer query
    PerformerV2SearchCriteria:
      type: object
      description: Performer search criteria (V2)
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Performer name
        birthName:
          type: string
          description: Performer birth name
        gender:
          type: string
          description: Performer gender
        dateOfBirthFrom:
          type: string
          description: Minimal date the performer was born
          format: date
        dateOfBirthTo:
          type: string
          description: Maximal date the performer was born
          format: date
        placeOfBirth:
          type: string
          description: Place the performer was born
        dateOfDeathFrom:
          type: string
          description: Minimal date the performer died
          format: date
        dateOfDeathTo:
          type: string
          description: Maximal date the performer died
          format: date
        placeOfDeath:
          type: string
          description: Place the performer died
        animalPerformer:
          type: boolean
          description: Whether it should be an animal performer
        audiobookPerformer:
          type: boolean
          description: Whether it should be an audiobook performer
        cutPerformer:
          type: boolean
          description: Whether it should be a cut performer
        disPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Discovery'
        ds9Performer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Deep Space Nine'
        entPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Enterprise'
        filmPerformer:
          type: boolean
          description: Whether it should be a performer that appeared in a
            Star Trek movie
        ldPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Lower Decks'
        picPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Picard'
        proPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Prodigy'
        puppeteer:
          type: boolean
          description: Whether it should be a puppeteer
        snwPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Strange New Worlds'
        standInPerformer:
          type: boolean
          description: Whether it should be a stand-in performer
        stPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Short Treks'
        stuntPerformer:
          type: boolean
          description: Whether it should be a stunt performer
        tasPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: The Animated Series'
        tngPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: The Next Generation'
        tosPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: The Original Series'
        videoGamePerformer:
          type: boolean
          description: Whether it should be a video game performer
        voicePerformer:
          type: boolean
          description: Whether it should be a voice performer
        voyPerformer:
          type: boolean
          description: 'Whether it should be a performer that appeared in Star Trek: Voyager'
    PerformerV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Performer unique ID
        name:
          type: string
          description: Performer name
        birthName:
          type: string
          description: Performer birth name
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          description: Date the performer was born
          format: date
        placeOfBirth:
          type: string
          description: Place the performer was born
        dateOfDeath:
          type: string
          description: Date the performer died
          format: date
        placeOfDeath:
          type: string
          description: Place the performer died
        animalPerformer:
          type: boolean
          description: Whether it's an animal performer
        audiobookPerformer:
          type: boolean
          description: Whether it's an audiobook performer
        cutPerformer:
          type: boolean
          description: Whether it's a cut performer
        disPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Discovery'
        ds9Performer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Deep
            Space Nine'
        entPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Enterprise'
        filmPerformer:
          type: boolean
          description: Whether it's a performer that appeared in a Star Trek movie
        ldPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Lower
            Decks'
        picPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Picard'
        proPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Prodigy'
        puppeteer:
          type: boolean
          description: Whether it's a puppeteer
        snwPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Strange
            New Worlds'
        standInPerformer:
          type: boolean
          description: Whether it's a stand-in performer
        stPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Short
            Treks'
        stuntPerformer:
          type: boolean
          description: Whether it's a stunt performer
        tasPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Animated Series'
        tngPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Next Generation'
        tosPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Original Series'
        videoGamePerformer:
          type: boolean
          description: Whether it's a video game performer
        voicePerformer:
          type: boolean
          description: Whether it's a voice performer
        voyPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Voyager'
      description: Base performer, returned in search results (V2)
    PerformerV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Performer unique ID
        name:
          type: string
          description: Performer name
        birthName:
          type: string
          description: Performer birth name
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          description: Date the performer was born
          format: date
        placeOfBirth:
          type: string
          description: Place the performer was born
        dateOfDeath:
          type: string
          description: Date the performer died
          format: date
        placeOfDeath:
          type: string
          description: Place the performer died
        animalPerformer:
          type: boolean
          description: Whether it's an animal performer
        audiobookPerformer:
          type: boolean
          description: Whether it's an audiobook performer
        cutPerformer:
          type: boolean
          description: Whether it's a cut performer
        disPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Discovery'
        ds9Performer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Deep
            Space Nine'
        entPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Enterprise'
        filmPerformer:
          type: boolean
          description: Whether it's a performer that appeared in a Star Trek movie
        ldPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Lower
            Decks'
        picPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Picard'
        proPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Prodigy'
        puppeteer:
          type: boolean
          description: Whether it's a stand-in puppeteer
        snwPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Strange
            New Worlds'
        standInPerformer:
          type: boolean
          description: Whether it's a stand-in performer
        stPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Short
            Treks'
        stuntPerformer:
          type: boolean
          description: Whether it's a stunt performer
        tasPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Animated Series'
        tngPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Next Generation'
        tosPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: The
            Original Series'
        videoGamePerformer:
          type: boolean
          description: Whether it's a video game performer
        voicePerformer:
          type: boolean
          description: Whether it's a voice performer
        voyPerformer:
          type: boolean
          description: 'Whether it''s a performer that appeared in Star Trek: Voyager'
        episodesPerformances:
          type: array
          description: Episodes in which this person appeared as a performer
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        episodesStuntPerformances:
          type: array
          description: Episodes in which this person appeared as a stunt performer
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        episodesStandInPerformances:
          type: array
          description: Episodes in which this person appeared as a stand-in performer
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        moviesPerformances:
          type: array
          description: Movies in which this person appeared as a performer
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        moviesStuntPerformances:
          type: array
          description: Movies in which this person appeared as a stunt performer
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        moviesStandInPerformances:
          type: array
          description: Movies in which this person appeared as a stand-in performer
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        characters:
          type: array
          description: Characters played by this performer
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full performer, returned when queried using UID (V2)
    PerformerV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        performers:
          type: array
          description: List of performers matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/PerformerV2Base'
      description: Response object for performers search (V2)
    PerformerV2FullResponse:
      type: object
      properties:
        performer:
          $ref: '#/components/schemas/PerformerV2Full'
      description: Response object for single performer query (V2)
    Platform:
      type: object
      properties:
        uid:
          type: string
          description: Platform unique ID
        name:
          type: string
          description: Platform name
      description: Platform of video games
    ProductionRunUnit:
      type: string
      description: Production run unit
      enum:
        - BOX
        - SET
    Reference:
      type: object
      properties:
        uid:
          type: string
          description: Reference unique ID
        referenceType:
          $ref: '#/components/schemas/ReferenceType'
        referenceNumber:
          type: string
          description: Reference number
      description: Reference of book, comics, video release, etc.
    ReferenceType:
      type: string
      description: Reference type
      enum:
        - ASIN
        - ISBN
        - EAN
        - ISRC
    ResponsePage:
      type: object
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        numberOfElements:
          type: integer
          description: Number of elements in page
          format: int32
        totalElements:
          type: integer
          description: Total elements found
          format: int32
        totalPages:
          type: integer
          description: Total pages found
          format: int32
        firstPage:
          type: boolean
          description: Whether it is the first page
        lastPage:
          type: boolean
          description: Whether it is the last page
      description: Object describing response page
    ResponseSort:
      type: object
      properties:
        clauses:
          type: array
          description: List of response sort rules
          default:
            - []
          items:
            $ref: '#/components/schemas/ResponseSortClause'
      description: Response sort
    ResponseSortClause:
      required:
        - clauseOrder
        - direction
        - name
      type: object
      properties:
        name:
          type: string
          description: Field name results are sorted by
        direction:
          $ref: '#/components/schemas/ResponseSortDirection'
        clauseOrder:
          type: integer
          description: Order in which this clause was applied
      description: Single response sort clause
    ResponseSortDirection:
      type: string
      description: Sort direction
      enum:
        - ASC
        - DESC
    RequestSort:
      type: object
      properties:
        clauses:
          type: array
          description: List of request sort rules
          default:
            - []
          items:
            $ref: '#/components/schemas/RequestSortClause'
      description: Request sort
    RequestSortClause:
      required:
        - clauseOrder
        - direction
        - name
      type: object
      properties:
        name:
          type: string
          description: Field name results are sorted by
        direction:
          $ref: '#/components/schemas/RequestSortDirection'
        clauseOrder:
          type: integer
          description: Order in which this clause was applied
      description: Single request sort clause
    RequestSortDirection:
      type: string
      description: Sort direction
      enum:
        - ASC
        - DESC
    SeasonSearchCriteria:
      type: object
      description: Season search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Season title
        seasonNumberFrom:
          type: integer
          description: Minimal season number
          format: int32
        seasonNumberTo:
          type: integer
          description: Maximal season number
          format: int32
        numberOfEpisodesFrom:
          type: integer
          description: Minimal number of episodes in season
          format: int32
        numberOfEpisodesTo:
          type: integer
          description: Maximal number of episodes in season
          format: int32
    SeasonHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Season unique ID
        title:
          type: string
          description: Season title
      description: Header season, embedded in other objects
    SeasonBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Season unique ID
        title:
          type: string
          description: Season title
        series:
          $ref: '#/components/schemas/SeriesHeader'
        seasonNumber:
          type: integer
          description: Season number in series
        numberOfEpisodes:
          type: integer
          description: Number of episodes in this season
      description: Base season, returned in search results
    SeasonFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Season unique ID
        title:
          type: string
          description: Season title
        series:
          $ref: '#/components/schemas/SeriesBase'
        seasonNumber:
          type: integer
          description: Season number in series
        numberOfEpisodes:
          type: integer
          description: Number of episodes in this season
        episodes:
          type: array
          description: Episodes in this season
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
      description: Full location, returned when queried using UID
    SeasonBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        seasons:
          type: array
          description: List of seasons matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/SeasonBase'
      description: Response object for seasons search
    SeasonFullResponse:
      type: object
      properties:
        season:
          $ref: '#/components/schemas/SeasonFull'
      description: Response object for single season query
    SeriesSearchCriteria:
      type: object
      description: Series search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Series title
        abbreviation:
          type: string
          description: Series abbreviation
        productionStartYearFrom:
          type: integer
          description: Minimal year the series production started
          format: int32
        productionStartYearTo:
          type: integer
          description: Maximal year the series production started
          format: int32
        productionEndYearFrom:
          type: integer
          description: Minimal year the series production ended
          format: int32
        productionEndYearTo:
          type: integer
          description: Maximal year the series production ended
          format: int32
        originalRunStartDateFrom:
          type: string
          description: Minimal date the series originally ran from
          format: date
        originalRunStartDateTo:
          type: string
          description: Maximal date the series originally ran from
          format: date
        originalRunEndDateFrom:
          type: string
          description: Minimal date the series originally ran to
          format: date
        originalRunEndDateTo:
          type: string
          description: Maximal date the series originally ran to
          format: date
    SeriesHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Series unique ID
        title:
          type: string
          description: Series title
      description: Header series, embedded in other objects
    SeriesBase:
      required:
        - abbreviation
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Series unique ID
        title:
          type: string
          description: Series title
        abbreviation:
          type: string
          description: Series abbreviation
        productionStartYear:
          type: integer
          description: Year the series production started
        productionEndYear:
          type: integer
          description: Year the series production ended
        originalRunStartDate:
          type: string
          description: Date the series originally ran from
          format: date
        originalRunEndDate:
          type: string
          description: Date the series originally ran to
          format: date
        seasonsCount:
          type: integer
          description: Number of seasons
        episodesCount:
          type: integer
          description: Number of episodes
        featureLengthEpisodesCount:
          type: integer
          description: Number of feature length episodes
        productionCompany:
          $ref: '#/components/schemas/CompanyHeader'
        originalBroadcaster:
          $ref: '#/components/schemas/CompanyHeader'
      description: Base series, returned in search results
    SeriesFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Series unique ID
        title:
          type: string
          description: Series title
        abbreviation:
          type: string
          description: Series abbreviation
        productionStartYear:
          type: integer
          description: Year the series production started
        productionEndYear:
          type: integer
          description: Year the series production ended
        originalRunStartDate:
          type: string
          description: Date the series originally ran from
          format: date
        originalRunEndDate:
          type: string
          description: Date the series originally ran to
          format: date
        seasonsCount:
          type: integer
          description: Number of seasons
        episodesCount:
          type: integer
          description: Number of episodes
        featureLengthEpisodesCount:
          type: integer
          description: Number of feature length episodes
        productionCompany:
          $ref: '#/components/schemas/CompanyBase'
        originalBroadcaster:
          $ref: '#/components/schemas/CompanyBase'
        episodes:
          type: array
          description: Episodes in the series
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        seasons:
          type: array
          description: Seasons in the series
          default:
            - []
          items:
            $ref: '#/components/schemas/SeasonBase'
      description: Full series, returned when queried using UID
    SeriesBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        series:
          type: array
          description: List of series matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/SeriesBase'
      description: Response object for series search
    SeriesFullResponse:
      type: object
      properties:
        series:
          $ref: '#/components/schemas/SeriesFull'
      description: Response object for single series query
    SoundtrackSearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Soundtrack title
        releaseDateFrom:
          type: string
          description: Minimal release date
          format: date
        releaseDateTo:
          type: string
          description: Maximal release date
          format: date
        lengthFrom:
          type: integer
          description: Minimal length, in seconds
          format: int32
        lengthTo:
          type: integer
          description: Maximal length, in seconds
          format: int32
    SoundtrackHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Soundtrack unique ID
        title:
          type: string
          description: Soundtrack title
      description: Header soundtrack, embedded in other objects
    SoundtrackBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Soundtrack unique ID
        title:
          type: string
          description: Soundtrack title
        releaseDate:
          type: string
          description: Release date
          format: date
        length:
          type: integer
          description: Length, in seconds
      description: Base soundtrack, returned in search results
    SoundtrackFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Soundtrack unique ID
        title:
          type: string
          description: Soundtrack title
        releaseDate:
          type: string
          description: Release date
          format: date
        length:
          type: integer
          description: Length, in seconds
        labels:
          type: array
          description: Labels this soundtrack was released by
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        composers:
          type: array
          description: Composers
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        contributors:
          type: array
          description: Other musicians that contributed to this soundtrack
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        orchestrators:
          type: array
          description: Orchestrators
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
        references:
          type: array
          description: References
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
      description: Full soundtrack, returned when queried using UID
    SoundtrackBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        soundtracks:
          type: array
          description: List of soundtracks matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/SoundtrackBase'
      description: Response object for soundtracks search
    SoundtrackFullResponse:
      type: object
      properties:
        soundtrack:
          $ref: '#/components/schemas/SoundtrackFull'
      description: Response object for single soundtrack query
    SpacecraftHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft unique ID
        name:
          type: string
          description: Spacecraft name
      description: Header spacecraft, embedded in other objects
    SpacecraftBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft unique ID
        name:
          type: string
          description: Spacecraft name
        registry:
          type: string
          description: Spacecraft registry
        status:
          type: string
          description: Status of a spacecraft (in prime reality, if spacecraft was
            in more than one realities)
        dateStatus:
          type: string
          description: Date the spacecraft status was last known
        spacecraftClass:
          $ref: '#/components/schemas/SpacecraftClassHeader'
        owner:
          $ref: '#/components/schemas/OrganizationHeader'
        operator:
          $ref: '#/components/schemas/OrganizationHeader'
      description: Base spacecraft, returned in search results
    SpacecraftFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft unique ID
        name:
          type: string
          description: Spacecraft name
        registry:
          type: string
          description: Spacecraft registry
        status:
          type: string
          description: Status of a spacecraft (in prime reality, if spacecraft was
            in more than one realities)
        dateStatus:
          type: string
          description: Date the spacecraft status was last known
        spacecraftClass:
          $ref: '#/components/schemas/SpacecraftClassBase'
        owner:
          $ref: '#/components/schemas/OrganizationBase'
        operator:
          $ref: '#/components/schemas/OrganizationBase'
        spacecraftTypes:
          type: array
          description: Spacecraft types
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftType'
      description: Full spacecraft, returned when queried using UID
    SpacecraftBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        spacecrafts:
          type: array
          description: List of spacecrafts matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftBase'
      description: Response object for spacecrafts search
    SpacecraftFullResponse:
      type: object
      properties:
        spacecraft:
          $ref: '#/components/schemas/SpacecraftFull'
      description: Response object for single spacecraft query
    SpacecraftV2SearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Spacecraft name
        registry:
          type: string
          description: Spacecraft registry
        status:
          type: string
          description: Spacecraft status
    SpacecraftV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft unique ID
        name:
          type: string
          description: Spacecraft name
        registry:
          type: string
          description: Spacecraft registry
        status:
          type: string
          description: Status of a spacecraft (in prime reality, if spacecraft was
            in more than one realities)
        dateStatus:
          type: string
          description: Date the spacecraft status was last known
        spacecraftClass:
          $ref: '#/components/schemas/SpacecraftClassHeader'
        owner:
          $ref: '#/components/schemas/OrganizationHeader'
        operator:
          $ref: '#/components/schemas/OrganizationHeader'
        affiliation:
          $ref: '#/components/schemas/OrganizationHeader'
      description: Base spacecraft, returned in search results (V2)
    SpacecraftV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft unique ID
        name:
          type: string
          description: Spacecraft name
        registry:
          type: string
          description: Spacecraft registry
        status:
          type: string
          description: Status of a spacecraft (in prime reality, if spacecraft was
            in more than one realities)
        dateStatus:
          type: string
          description: Date the spacecraft status was last known
        spacecraftClass:
          $ref: '#/components/schemas/SpacecraftClassV2Base'
        owner:
          $ref: '#/components/schemas/OrganizationBase'
        operator:
          $ref: '#/components/schemas/OrganizationBase'
        affiliation:
          $ref: '#/components/schemas/OrganizationBase'
        spacecraftTypes:
          type: array
          description: Spacecraft types
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftType'
      description: Full spacecraft, returned when queried using UID (V2)
    SpacecraftV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        spacecrafts:
          type: array
          description: List of spacecrafts matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftV2Base'
      description: Response object for spacecrafts search (V2)
    SpacecraftV2FullResponse:
      type: object
      properties:
        spacecraft:
          $ref: '#/components/schemas/SpacecraftV2Full'
      description: Response object for single spacecraft query (V2)
    SpacecraftClassHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft class unique ID
        name:
          type: string
          description: Spacecraft class name
      description: Header spacecraft class, embedded in other objects
    SpacecraftClassBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft class unique ID
        name:
          type: string
          description: Spacecraft class name
        numberOfDecks:
          type: integer
          description: Number of decks
        warpCapable:
          type: boolean
          description: Whether it's a warp-capable spacecraft class
        alternateReality:
          type: boolean
          description: Whether this spacecraft class is from alternate reality
        activeFrom:
          type: string
          description: Starting period when this spacecraft class was in use
        activeTo:
          type: string
          description: Ending period when this spacecraft class was in use
        species:
          $ref: '#/components/schemas/SpeciesHeader'
        owner:
          $ref: '#/components/schemas/OrganizationHeader'
        operator:
          $ref: '#/components/schemas/OrganizationHeader'
        affiliation:
          $ref: '#/components/schemas/OrganizationHeader'
      description: Base spacecraft class, returned in search results
    SpacecraftClassFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft class unique ID
        name:
          type: string
          description: Spacecraft class name
        numberOfDecks:
          type: integer
          description: Number of decks
        warpCapable:
          type: boolean
          description: Whether it's a warp-capable spacecraft class
        alternateReality:
          type: boolean
          description: Whether this spacecraft class is from alternate reality
        activeFrom:
          type: string
          description: Starting period when this spacecraft class was in use
        activeTo:
          type: string
          description: Ending period when this spacecraft class was in use
        species:
          $ref: '#/components/schemas/SpeciesHeader'
        owner:
          $ref: '#/components/schemas/OrganizationBase'
        operator:
          $ref: '#/components/schemas/OrganizationBase'
        affiliation:
          $ref: '#/components/schemas/OrganizationBase'
        spacecraftTypes:
          type: array
          description: Spacecraft types
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftType'
        spacecrafts:
          type: array
          description: Spacecrafts
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftBase'
      description: Full spacecraft class, returned when queried using UID
    SpacecraftClassBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        spacecraftClasses:
          type: array
          description: List of spacecraft classes matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftClassBase'
      description: Response object for spacecraft classes search
    SpacecraftClassFullResponse:
      type: object
      properties:
        spacecraftClass:
          $ref: '#/components/schemas/SpacecraftClassFull'
      description: Response object for single spacecraft class query
    SpacecraftClassV2SearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Spacecraft class name
        warpCapableSpecies:
          type: boolean
          description: Whether it should be a warp-capable spacecraft class
        mirror:
          type: boolean
          description: Whether this spacecraft class should be from mirror universe
        alternateReality:
          type: boolean
          description: Whether this spacecraft class should be from alternate reality
    SpacecraftClassV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft class unique ID
        name:
          type: string
          description: Spacecraft class name
        numberOfDecks:
          type: integer
          description: Number of decks
        crew:
          type: string
          description: Crew
        warpCapable:
          type: boolean
          description: Whether it's a warp-capable spacecraft class
        mirror:
          type: boolean
          description: Whether this spacecraft class is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this spacecraft class is from alternate reality
        activeFrom:
          type: string
          description: Starting period when this spacecraft class was in use
        activeTo:
          type: string
          description: Ending period when this spacecraft class was in use
        species:
          $ref: '#/components/schemas/SpeciesHeader'
      description: Base spacecraft class, returned in search results (V2)
    SpacecraftClassV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft class unique ID
        name:
          type: string
          description: Spacecraft class name
        numberOfDecks:
          type: integer
          description: Number of decks
        crew:
          type: string
          description: Crew
        warpCapable:
          type: boolean
          description: Whether it's a warp-capable spacecraft class
        mirror:
          type: boolean
          description: Whether this spacecraft class is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this spacecraft class is from alternate reality
        activeFrom:
          type: string
          description: Starting period when this spacecraft class was in use
        activeTo:
          type: string
          description: Ending period when this spacecraft class was in use
        species:
          $ref: '#/components/schemas/SpeciesBase'
        owners:
          type: array
          description: Owners
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
        operators:
          type: array
          description: Operators
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
        affiliations:
          type: array
          description: Affiliations
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
        spacecraftTypes:
          type: array
          description: Spacecraft types
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftType'
        armaments:
          type: array
          description: Armaments
          default:
            - []
          items:
            $ref: '#/components/schemas/WeaponV2Base'
        spacecrafts:
          type: array
          description: Spacecrafts
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftV2Base'
      description: Full spacecraft class, returned when queried using UID (V2)
    SpacecraftClassV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        spacecraftClasses:
          type: array
          description: List of spacecraft classes matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftClassV2Base'
      description: Response object for spacecraft classes search (V2)
    SpacecraftClassV2FullResponse:
      type: object
      properties:
        spacecraftClass:
          $ref: '#/components/schemas/SpacecraftClassV2Full'
      description: Response object for single spacecraft class query (V2)
    SpacecraftClassV3Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft class unique ID
        name:
          type: string
          description: Spacecraft class name
        numberOfDecks:
          type: integer
          description: Number of decks
        crew:
          type: string
          description: Crew
        warpCapable:
          type: boolean
          description: Whether it's a warp-capable spacecraft class
        mirror:
          type: boolean
          description: Whether this spacecraft class is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this spacecraft class is from alternate reality
        activeFrom:
          type: string
          description: Starting period when this spacecraft class was in use
        activeTo:
          type: string
          description: Ending period when this spacecraft class was in use
        species:
          $ref: '#/components/schemas/SpeciesBase'
        owners:
          type: array
          description: Owners
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
        operators:
          type: array
          description: Operators
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
        affiliations:
          type: array
          description: Affiliations
          default:
            - []
          items:
            $ref: '#/components/schemas/OrganizationBase'
        spacecraftTypes:
          type: array
          description: Spacecraft types
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftType'
        armaments:
          type: array
          description: Armaments
          default:
            - []
          items:
            $ref: '#/components/schemas/WeaponV2Base'
        defenses:
          type: array
          description: Defenses
          default:
            - []
          items:
            $ref: '#/components/schemas/TechnologyV2Base'
        spacecrafts:
          type: array
          description: Spacecrafts
          default:
            - []
          items:
            $ref: '#/components/schemas/SpacecraftV2Base'
      description: Full spacecraft class, returned when queried using UID (V3)
    SpacecraftClassV3FullResponse:
      type: object
      properties:
        spacecraftClass:
          $ref: '#/components/schemas/SpacecraftClassV3Full'
      description: Response object for single spacecraft class query (V3)
    SpacecraftType:
      type: object
      properties:
        uid:
          type: string
          description: Spacecraft type unique ID
        name:
          type: string
          description: Spacecraft type name
      description: Spacecraft type
    SpeciesHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Species unique ID
        name:
          type: string
          description: Species name
      description: Header species, embedded in other objects
    SpeciesBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Species unique ID
        name:
          type: string
          description: Species name
        homeworld:
          $ref: '#/components/schemas/AstronomicalObjectHeader'
        quadrant:
          $ref: '#/components/schemas/AstronomicalObjectHeader'
        extinctSpecies:
          type: boolean
          description: Whether it's an extinct species
        warpCapableSpecies:
          type: boolean
          description: Whether it's a warp-capable species
        extraGalacticSpecies:
          type: boolean
          description: Whether it's an extra-galactic species
        humanoidSpecies:
          type: boolean
          description: Whether it's a humanoid species
        reptilianSpecies:
          type: boolean
          description: Whether it's a reptilian species
        nonCorporealSpecies:
          type: boolean
          description: Whether it's a non-corporeal species
        shapeshiftingSpecies:
          type: boolean
          description: Whether it's a shapeshifting species
        spaceborneSpecies:
          type: boolean
          description: Whether it's a spaceborne species
        telepathicSpecies:
          type: boolean
          description: Whether it's a telepathic species
        transDimensionalSpecies:
          type: boolean
          description: Whether it's a trans-dimensional species
        unnamedSpecies:
          type: boolean
          description: Whether it's a unnamed species
        alternateReality:
          type: boolean
          description: Whether this species is from alternate reality
      description: Base species, returned in search results
    SpeciesFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Species unique ID
        name:
          type: string
          description: Species name
        homeworld:
          $ref: '#/components/schemas/AstronomicalObjectBase'
        quadrant:
          $ref: '#/components/schemas/AstronomicalObjectBase'
        extinctSpecies:
          type: boolean
          description: Whether it's an extinct species
        warpCapableSpecies:
          type: boolean
          description: Whether it's a warp-capable species
        extraGalacticSpecies:
          type: boolean
          description: Whether it's an extra-galactic species
        humanoidSpecies:
          type: boolean
          description: Whether it's a humanoid species
        reptilianSpecies:
          type: boolean
          description: Whether it's a reptilian species
        nonCorporealSpecies:
          type: boolean
          description: Whether it's a non-corporeal species
        shapeshiftingSpecies:
          type: boolean
          description: Whether it's a shapeshifting species
        spaceborneSpecies:
          type: boolean
          description: Whether it's a spaceborne species
        telepathicSpecies:
          type: boolean
          description: Whether it's a telepathic species
        transDimensionalSpecies:
          type: boolean
          description: Whether it's a trans-dimensional species
        unnamedSpecies:
          type: boolean
          description: Whether it's a unnamed species
        alternateReality:
          type: boolean
          description: Whether this species is from alternate reality
        characters:
          type: array
          description: Characters belonging to the species
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full species, returned when queried using UID
    SpeciesBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        species:
          type: array
          description: List of species matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/SpeciesBase'
      description: Response object for species search
    SpeciesFullResponse:
      type: object
      properties:
        species:
          $ref: '#/components/schemas/SpeciesFull'
      description: Response object for single species query
    SpeciesV2SearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Species name
        extinctSpecies:
          type: boolean
          description: Whether it should be an extinct species
        warpCapableSpecies:
          type: boolean
          description: Whether it should be a warp-capable species
        extraGalacticSpecies:
          type: boolean
          description: Whether it should be an extra-galactic species
        humanoidSpecies:
          type: boolean
          description: Whether it should be a humanoid species
        reptilianSpecies:
          type: boolean
          description: Whether it should be a reptilian species
        avianSpecies:
          type: boolean
          description: Whether it should be an avian species
        nonCorporealSpecies:
          type: boolean
          description: Whether it should be a non-corporeal species
        shapeshiftingSpecies:
          type: boolean
          description: Whether it should be a shapeshifting species
        spaceborneSpecies:
          type: boolean
          description: Whether it should be a spaceborne species
        telepathicSpecies:
          type: boolean
          description: Whether it should be a telepathic species
        transDimensionalSpecies:
          type: boolean
          description: Whether it should be a trans-dimensional species
        unnamedSpecies:
          type: boolean
          description: Whether it should be a unnamed species
        alternateReality:
          type: boolean
          description: Whether this species should be from alternate reality
    SpeciesV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Species unique ID
        name:
          type: string
          description: Species name
        homeworld:
          $ref: '#/components/schemas/AstronomicalObjectHeader'
        quadrant:
          $ref: '#/components/schemas/AstronomicalObjectHeader'
        extinctSpecies:
          type: boolean
          description: Whether it's an extinct species
        warpCapableSpecies:
          type: boolean
          description: Whether it's a warp-capable species
        extraGalacticSpecies:
          type: boolean
          description: Whether it's an extra-galactic species
        humanoidSpecies:
          type: boolean
          description: Whether it's a humanoid species
        reptilianSpecies:
          type: boolean
          description: Whether it's a reptilian species
        avianSpecies:
          type: boolean
          description: Whether it's an avian species
        nonCorporealSpecies:
          type: boolean
          description: Whether it's a non-corporeal species
        shapeshiftingSpecies:
          type: boolean
          description: Whether it's a shapeshifting species
        spaceborneSpecies:
          type: boolean
          description: Whether it's a spaceborne species
        telepathicSpecies:
          type: boolean
          description: Whether it's a telepathic species
        transDimensionalSpecies:
          type: boolean
          description: Whether it's a trans-dimensional species
        unnamedSpecies:
          type: boolean
          description: Whether it's a unnamed species
        alternateReality:
          type: boolean
          description: Whether this species is from alternate reality
      description: Base species, returned in search results (V2)
    SpeciesV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Species unique ID
        name:
          type: string
          description: Species name
        homeworld:
          $ref: '#/components/schemas/AstronomicalObjectV2Base'
        quadrant:
          $ref: '#/components/schemas/AstronomicalObjectV2Base'
        extinctSpecies:
          type: boolean
          description: Whether it's an extinct species
        warpCapableSpecies:
          type: boolean
          description: Whether it's a warp-capable species
        extraGalacticSpecies:
          type: boolean
          description: Whether it's an extra-galactic species
        humanoidSpecies:
          type: boolean
          description: Whether it's a humanoid species
        reptilianSpecies:
          type: boolean
          description: Whether it's a reptilian species
        avianSpecies:
          type: boolean
          description: Whether it's an avian species
        nonCorporealSpecies:
          type: boolean
          description: Whether it's a non-corporeal species
        shapeshiftingSpecies:
          type: boolean
          description: Whether it's a shapeshifting species
        spaceborneSpecies:
          type: boolean
          description: Whether it's a spaceborne species
        telepathicSpecies:
          type: boolean
          description: Whether it's a telepathic species
        transDimensionalSpecies:
          type: boolean
          description: Whether it's a trans-dimensional species
        unnamedSpecies:
          type: boolean
          description: Whether it's a unnamed species
        alternateReality:
          type: boolean
          description: Whether this species is from alternate reality
        characters:
          type: array
          description: Characters belonging to the species
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full species, returned when queried using UID (V2)
    SpeciesV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        species:
          type: array
          description: List of species matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/SpeciesV2Base'
      description: Response object for species search (V2)
    SpeciesV2FullResponse:
      type: object
      properties:
        species:
          $ref: '#/components/schemas/SpeciesV2Full'
      description: Response object for single species query (V2)
    StaffHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Staff unique ID
        name:
          type: string
          description: Staff name
      description: Header staff, embedded in other objects
    StaffBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Staff unique ID
        name:
          type: string
          description: Staff name
        birthName:
          type: string
          description: Staff birth name
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          description: Date the staff was born
          format: date
        placeOfBirth:
          type: string
          description: Place the staff was born
        dateOfDeath:
          type: string
          description: Date the staff died
          format: date
        placeOfDeath:
          type: string
          description: Place the staff died
        artDepartment:
          type: boolean
          description: Whether this person if from art department
        artDirector:
          type: boolean
          description: Whether this person is an art director
        productionDesigner:
          type: boolean
          description: Whether this person is a production designer
        cameraAndElectricalDepartment:
          type: boolean
          description: Whether this person is from camera and electrical department
        cinematographer:
          type: boolean
          description: Whether this person is a cinematographer
        castingDepartment:
          type: boolean
          description: Whether this person is from casting department
        costumeDepartment:
          type: boolean
          description: Whether this person is from costume department
        costumeDesigner:
          type: boolean
          description: Whether this person is a custume designer
        director:
          type: boolean
          description: Whether this person is a director
        assistantOrSecondUnitDirector:
          type: boolean
          description: Whether this person is an assistant or second unit director
            director
        exhibitAndAttractionStaff:
          type: boolean
          description: Whether this person is an exhibit and tttraction staff
        filmEditor:
          type: boolean
          description: Whether this person is a film editor
        linguist:
          type: boolean
          description: Whether this person is a linguist
        locationStaff:
          type: boolean
          description: Whether this person is a location staff
        makeupStaff:
          type: boolean
          description: Whether this person is a make-up staff
        musicDepartment:
          type: boolean
          description: Whether this person is from music department
        composer:
          type: boolean
          description: Whether this person is a composer
        personalAssistant:
          type: boolean
          description: Whether this person is a personal assistant
        producer:
          type: boolean
          description: Whether this person is a producer
        productionAssociate:
          type: boolean
          description: Whether this person is a production associate
        productionStaff:
          type: boolean
          description: Whether this person is a production staff
        publicationStaff:
          type: boolean
          description: Whether this person is a publication staff
        scienceConsultant:
          type: boolean
          description: Whether this person is a science consultant
        soundDepartment:
          type: boolean
          description: Whether this person is from sound department
        specialAndVisualEffectsStaff:
          type: boolean
          description: Whether this person is a special and visual effects staff
        author:
          type: boolean
          description: Whether this person is an author
        audioAuthor:
          type: boolean
          description: Whether this person is an audio author
        calendarArtist:
          type: boolean
          description: Whether this person is a calendar artist
        comicArtist:
          type: boolean
          description: Whether this person is a comic artist
        comicAuthor:
          type: boolean
          description: Whether this person is a comic author
        comicColorArtist:
          type: boolean
          description: Whether this person is a comic color artist
        comicInteriorArtist:
          type: boolean
          description: Whether this person is a comic interior artist
        comicInkArtist:
          type: boolean
          description: Whether this person is a comic ink artist
        comicPencilArtist:
          type: boolean
          description: Whether this person is a comic pencil artist
        comicLetterArtist:
          type: boolean
          description: Whether this person is a comic letter artist
        comicStripArtist:
          type: boolean
          description: Whether this person is a comic strip artist
        gameArtist:
          type: boolean
          description: Whether this person is a game artist
        gameAuthor:
          type: boolean
          description: Whether this person is a game author
        novelArtist:
          type: boolean
          description: Whether this person is a novel artist
        novelAuthor:
          type: boolean
          description: Whether this person is a novel author
        referenceArtist:
          type: boolean
          description: Whether this person is a reference artist
        referenceAuthor:
          type: boolean
          description: Whether this person is a reference author
        publicationArtist:
          type: boolean
          description: Whether this person is a publication artist
        publicationDesigner:
          type: boolean
          description: Whether this person is a publication designer
        publicationEditor:
          type: boolean
          description: Whether this person is a publication editor
        publicityArtist:
          type: boolean
          description: Whether this person is a publication artist
        cbsDigitalStaff:
          type: boolean
          description: Whether this person is a part of CBS digital staff
        ilmProductionStaff:
          type: boolean
          description: Whether this person is a part of ILM production staff
        specialFeaturesStaff:
          type: boolean
          description: Whether this person is a special features artist
        storyEditor:
          type: boolean
          description: Whether this person is a story editor
        studioExecutive:
          type: boolean
          description: Whether this person is a studio executive
        stuntDepartment:
          type: boolean
          description: Whether this person is from stunt department
        transportationDepartment:
          type: boolean
          description: Whether this person is from transportation department
        videoGameProductionStaff:
          type: boolean
          description: Whether this person is video game production staff
        writer:
          type: boolean
          description: Whether this person is a writer
      description: Base staff, returned in search results
    StaffFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Staff unique ID
        name:
          type: string
          description: Staff name
        birthName:
          type: string
          description: Staff birth name
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          description: Date the staff was born
          format: date
        placeOfBirth:
          type: string
          description: Place the staff was born
        dateOfDeath:
          type: string
          description: Date the staff died
          format: date
        placeOfDeath:
          type: string
          description: Place the staff died
        artDepartment:
          type: boolean
          description: Whether this person is from art department
        artDirector:
          type: boolean
          description: Whether this person is an art director
        productionDesigner:
          type: boolean
          description: Whether this person is a production designer
        cameraAndElectricalDepartment:
          type: boolean
          description: Whether this person is from camera and electrical department
        cinematographer:
          type: boolean
          description: Whether this person is a cinematographer
        castingDepartment:
          type: boolean
          description: Whether this person is from casting department
        costumeDepartment:
          type: boolean
          description: Whether this person is from costume department
        costumeDesigner:
          type: boolean
          description: Whether this person is a custume designer
        director:
          type: boolean
          description: Whether this person is a director
        assistantOrSecondUnitDirector:
          type: boolean
          description: Whether this person is an assistant or second unit director
            director
        exhibitAndAttractionStaff:
          type: boolean
          description: Whether this person is an exhibit and attraction staff
        filmEditor:
          type: boolean
          description: Whether this person is a film editor
        linguist:
          type: boolean
          description: Whether this person is a linguist
        locationStaff:
          type: boolean
          description: Whether this person is a location staff
        makeupStaff:
          type: boolean
          description: Whether this person is a make-up staff
        musicDepartment:
          type: boolean
          description: Whether this person is from music department
        composer:
          type: boolean
          description: Whether this person is a composer
        personalAssistant:
          type: boolean
          description: Whether this person is a personal assistant
        producer:
          type: boolean
          description: Whether this person is a producer
        productionAssociate:
          type: boolean
          description: Whether this person is a production associate
        productionStaff:
          type: boolean
          description: Whether this person is a production staff
        publicationStaff:
          type: boolean
          description: Whether this person is a publication staff
        scienceConsultant:
          type: boolean
          description: Whether this person is a science consultant
        soundDepartment:
          type: boolean
          description: Whether this person is from sound department
        specialAndVisualEffectsStaff:
          type: boolean
          description: Whether this person is a special and visual effects staff
        author:
          type: boolean
          description: Whether this person is an author
        audioAuthor:
          type: boolean
          description: Whether this person is an audio author
        calendarArtist:
          type: boolean
          description: Whether this person is a calendar artist
        comicArtist:
          type: boolean
          description: Whether this person is a comic artist
        comicAuthor:
          type: boolean
          description: Whether this person is a comic author
        comicColorArtist:
          type: boolean
          description: Whether this person is a comic color artist
        comicInteriorArtist:
          type: boolean
          description: Whether this person is a comic interior artist
        comicInkArtist:
          type: boolean
          description: Whether this person is a comic ink artist
        comicPencilArtist:
          type: boolean
          description: Whether this person is a comic pencil artist
        comicLetterArtist:
          type: boolean
          description: Whether this person is a comic letter artist
        comicStripArtist:
          type: boolean
          description: Whether this person is a comic strip artist
        gameArtist:
          type: boolean
          description: Whether this person is a game artist
        gameAuthor:
          type: boolean
          description: Whether this person is a game author
        novelArtist:
          type: boolean
          description: Whether this person is a novel artist
        novelAuthor:
          type: boolean
          description: Whether this person is a novel author
        referenceArtist:
          type: boolean
          description: Whether this person is a reference artist
        referenceAuthor:
          type: boolean
          description: Whether this person is a reference author
        publicationArtist:
          type: boolean
          description: Whether this person is a publication artist
        publicationDesigner:
          type: boolean
          description: Whether this person is a publication designer
        publicationEditor:
          type: boolean
          description: Whether this person is a publication editor
        publicityArtist:
          type: boolean
          description: Whether this person is a publicity artist
        cbsDigitalStaff:
          type: boolean
          description: Whether this person is a part of CBS digital staff
        ilmProductionStaff:
          type: boolean
          description: Whether this person is a part of ILM production staff
        specialFeaturesStaff:
          type: boolean
          description: Whether this person is a special features artist
        storyEditor:
          type: boolean
          description: Whether this person is a story editor
        studioExecutive:
          type: boolean
          description: Whether this person is a studio executive
        stuntDepartment:
          type: boolean
          description: Whether this person is from stunt department
        transportationDepartment:
          type: boolean
          description: Whether this person is from transportation department
        videoGameProductionStaff:
          type: boolean
          description: Whether this person is video game production staff
        writer:
          type: boolean
          description: Whether this person is a writer
        writtenEpisodes:
          type: array
          description: Episodes written by this person
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        teleplayAuthoredEpisodes:
          type: array
          description: Episodes to which this person has written teleplay
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        storyAuthoredEpisodes:
          type: array
          description: Episodes to which this person has written story
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        directedEpisodes:
          type: array
          description: Episodes directed by this person
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        episodes:
          type: array
          description: Episodes on which this person worked
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        writtenMovies:
          type: array
          description: Movies written by this person
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        screenplayAuthoredMovies:
          type: array
          description: Movies to which this person has written screenplay
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        storyAuthoredMovies:
          type: array
          description: Movies to which this person has written story
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        directedMovies:
          type: array
          description: Movies directed by this person
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        producedMovies:
          type: array
          description: Movies produced by this person
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        movies:
          type: array
          description: Movies on which this person worked
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
      description: Full staff, returned when queried using UID
    StaffBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        staff:
          type: array
          description: List of staff matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffBase'
      description: Response object for staff search
    StaffFullResponse:
      type: object
      properties:
        staff:
          $ref: '#/components/schemas/StaffFull'
      description: Response object for single staff query
    StaffV2SearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Staff name
        birthName:
          type: string
          description: Staff birth name
        gender:
          type: string
          description: Staff gender
        dateOfBirthFrom:
          type: string
          description: Minimal date the staff was born
          format: date
        dateOfBirthTo:
          type: string
          description: Maximal date the staff was born
          format: date
        placeOfBirth:
          type: string
          description: Place the staff was born
        dateOfDeathFrom:
          type: string
          description: Minimal date the staff died
          format: date
        dateOfDeathTo:
          type: string
          description: Maximal date the staff died
          format: date
        placeOfDeath:
          type: string
          description: Place the staff died
        artDepartment:
          type: boolean
          description: Whether this person should be from art department
        artDirector:
          type: boolean
          description: Whether this person should be an art director
        productionDesigner:
          type: boolean
          description: Whether this person should be a production designer
        cameraAndElectricalDepartment:
          type: boolean
          description: Whether this person should be from camera and electrical
            department
        cinematographer:
          type: boolean
          description: Whether this person should be a cinematographer
        castingDepartment:
          type: boolean
          description: Whether this person should be from casting department
        costumeDepartment:
          type: boolean
          description: Whether this person should be from costume department
        costumeDesigner:
          type: boolean
          description: Whether this person should be a custume designer
        director:
          type: boolean
          description: Whether this person should be a director
        assistantOrSecondUnitDirector:
          type: boolean
          description: Whether this person should be an assistant or second unit director director
        exhibitAndAttractionStaff:
          type: boolean
          description: Whether this person should be an exhibit and attraction
            staff
        filmEditor:
          type: boolean
          description: Whether this person should be a film editor
        filmationProductionStaff:
          type: boolean
          description: Whether this person should be a part of Filmation production
            staff
        linguist:
          type: boolean
          description: Whether this person should be a linguist
        locationStaff:
          type: boolean
          description: Whether this person should be a location staff
        makeupStaff:
          type: boolean
          description: Whether this person should be a make-up staff
        merchandiseStaff:
          type: boolean
          description: Whether this person should be a merchandise staff
        musicDepartment:
          type: boolean
          description: Whether this person should be from music department
        composer:
          type: boolean
          description: Whether this person should be a composer
        personalAssistant:
          type: boolean
          description: Whether this person should be a personal assistant
        producer:
          type: boolean
          description: Whether this person should be a producer
        productionAssociate:
          type: boolean
          description: Whether this person should be a production associate
        productionStaff:
          type: boolean
          description: Whether this person should be a production staff
        publicationStaff:
          type: boolean
          description: Whether this person should be a publication staff
        scienceConsultant:
          type: boolean
          description: Whether this person should be a science consultant
        soundDepartment:
          type: boolean
          description: Whether this person should be from sound department
        specialAndVisualEffectsStaff:
          type: boolean
          description: Whether this person should be a special and visual
            effects staff
        author:
          type: boolean
          description: Whether this person should be an author
        audioAuthor:
          type: boolean
          description: Whether this person should be an audio author
        calendarArtist:
          type: boolean
          description: Whether this person should be a calendar artist
        comicArtist:
          type: boolean
          description: Whether this person should be a comic artist
        comicAuthor:
          type: boolean
          description: Whether this person should be a comic author
        comicColorArtist:
          type: boolean
          description: Whether this person should be a comic color artist
        comicCoverArtist:
          type: boolean
          description: Whether this person should be a comic cover artist
        comicInteriorArtist:
          type: boolean
          description: Whether this person should be a comic interior artist
        comicInkArtist:
          type: boolean
          description: Whether this person should be a comic ink artist
        comicPencilArtist:
          type: boolean
          description: Whether this person should be a comic pencil artist
        comicLetterArtist:
          type: boolean
          description: Whether this person should be a comic letter artist
        comicStripArtist:
          type: boolean
          description: Whether this person should be a comic strip artist
        gameArtist:
          type: boolean
          description: Whether this person should be a game artist
        gameAuthor:
          type: boolean
          description: Whether this person should be a game author
        novelArtist:
          type: boolean
          description: Whether this person should be a novel artist
        novelAuthor:
          type: boolean
          description: Whether this person should be a novel author
        referenceArtist:
          type: boolean
          description: Whether this person should be a reference artist
        referenceAuthor:
          type: boolean
          description: Whether this person should be a reference author
        publicationArtist:
          type: boolean
          description: Whether this person should be a publication artist
        publicationDesigner:
          type: boolean
          description: Whether this person should be a publication designer
        publicationEditor:
          type: boolean
          description: Whether this person should be a publication editor
        publicityArtist:
          type: boolean
          description: Whether this person should be a publicity artist
        cbsDigitalStaff:
          type: boolean
          description: Whether this person should be a part of CBS digital
            staff
        ilmProductionStaff:
          type: boolean
          description: Whether this person should be a part of ILM production
            staff
        specialFeaturesStaff:
          type: boolean
          description: Whether this person should be a special features artist
        storyEditor:
          type: boolean
          description: Whether this person should be a story editor
        studioExecutive:
          type: boolean
          description: Whether this person should be a studio executive
        stuntDepartment:
          type: boolean
          description: Whether this person should be from stunt department
        transportationDepartment:
          type: boolean
          description: Whether this person should be from transportation department
        videoGameProductionStaff:
          type: boolean
          description: Whether this person is video game production staff
        writer:
          type: boolean
          description: Whether this person should be a writer
    StaffV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Staff unique ID
        name:
          type: string
          description: Staff name
        birthName:
          type: string
          description: Staff birth name
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          description: Date the staff was born
          format: date
        placeOfBirth:
          type: string
          description: Place the staff was born
        dateOfDeath:
          type: string
          description: Date the staff died
          format: date
        placeOfDeath:
          type: string
          description: Place the staff died
        artDepartment:
          type: boolean
          description: Whether this person if from art department
        artDirector:
          type: boolean
          description: Whether this person is an art director
        productionDesigner:
          type: boolean
          description: Whether this person is a production designer
        cameraAndElectricalDepartment:
          type: boolean
          description: Whether this person is from camera and electrical department
        cinematographer:
          type: boolean
          description: Whether this person is a cinematographer
        castingDepartment:
          type: boolean
          description: Whether this person is from casting department
        costumeDepartment:
          type: boolean
          description: Whether this person is from costume department
        costumeDesigner:
          type: boolean
          description: Whether this person is a custume designer
        director:
          type: boolean
          description: Whether this person is a director
        assistantOrSecondUnitDirector:
          type: boolean
          description: Whether this person is an assistant or second unit director
            director
        exhibitAndAttractionStaff:
          type: boolean
          description: Whether this person is an exhibit and attraction staff
        filmEditor:
          type: boolean
          description: Whether this person is a film editor
        filmationProductionStaff:
          type: boolean
          description: Whether this person is a part of Filmation production staff
        linguist:
          type: boolean
          description: Whether this person is a linguist
        locationStaff:
          type: boolean
          description: Whether this person is a location staff
        makeupStaff:
          type: boolean
          description: Whether this person is a make-up staff
        merchandiseStaff:
          type: boolean
          description: Whether this person is a merchandise staff
        musicDepartment:
          type: boolean
          description: Whether this person is from music department
        composer:
          type: boolean
          description: Whether this person is a composer
        personalAssistant:
          type: boolean
          description: Whether this person is a personal assistant
        producer:
          type: boolean
          description: Whether this person is a producer
        productionAssociate:
          type: boolean
          description: Whether this person is a production associate
        productionStaff:
          type: boolean
          description: Whether this person is a production staff
        publicationStaff:
          type: boolean
          description: Whether this person is a publication staff
        scienceConsultant:
          type: boolean
          description: Whether this person is a science consultant
        soundDepartment:
          type: boolean
          description: Whether this person is from sound department
        specialAndVisualEffectsStaff:
          type: boolean
          description: Whether this person is a special and visual effects staff
        author:
          type: boolean
          description: Whether this person is an author
        audioAuthor:
          type: boolean
          description: Whether this person is an audio author
        calendarArtist:
          type: boolean
          description: Whether this person is a calendar artist
        comicArtist:
          type: boolean
          description: Whether this person is a comic artist
        comicAuthor:
          type: boolean
          description: Whether this person is a comic author
        comicColorArtist:
          type: boolean
          description: Whether this person is a comic color artist
        comicCoverArtist:
          type: boolean
          description: Whether this person is a comic cover artist
        comicInteriorArtist:
          type: boolean
          description: Whether this person is a comic interior artist
        comicInkArtist:
          type: boolean
          description: Whether this person is a comic ink artist
        comicPencilArtist:
          type: boolean
          description: Whether this person is a comic pencil artist
        comicLetterArtist:
          type: boolean
          description: Whether this person is a comic letter artist
        comicStripArtist:
          type: boolean
          description: Whether this person is a comic strip artist
        gameArtist:
          type: boolean
          description: Whether this person is a game artist
        gameAuthor:
          type: boolean
          description: Whether this person is a game author
        novelArtist:
          type: boolean
          description: Whether this person is a novel artist
        novelAuthor:
          type: boolean
          description: Whether this person is a novel author
        referenceArtist:
          type: boolean
          description: Whether this person is a reference artist
        referenceAuthor:
          type: boolean
          description: Whether this person is a reference author
        publicationArtist:
          type: boolean
          description: Whether this person is a publication artist
        publicationDesigner:
          type: boolean
          description: Whether this person is a publication designer
        publicationEditor:
          type: boolean
          description: Whether this person is a publication editor
        publicityArtist:
          type: boolean
          description: Whether this person is a publication artist
        cbsDigitalStaff:
          type: boolean
          description: Whether this person is a part of CBS digital staff
        ilmProductionStaff:
          type: boolean
          description: Whether this person is a part of ILM production staff
        specialFeaturesStaff:
          type: boolean
          description: Whether this person is a special features artist
        storyEditor:
          type: boolean
          description: Whether this person is a story editor
        studioExecutive:
          type: boolean
          description: Whether this person is a studio executive
        stuntDepartment:
          type: boolean
          description: Whether this person is from stunt department
        transportationDepartment:
          type: boolean
          description: Whether this person is from transportation department
        videoGameProductionStaff:
          type: boolean
          description: Whether this person is video game production staff
        writer:
          type: boolean
          description: Whether this person is a writer
      description: Base staff, returned in search results (V2)
    StaffV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Staff unique ID
        name:
          type: string
          description: Staff name
        birthName:
          type: string
          description: Staff birth name
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          description: Date the staff was born
          format: date
        placeOfBirth:
          type: string
          description: Place the staff was born
        dateOfDeath:
          type: string
          description: Date the staff died
          format: date
        placeOfDeath:
          type: string
          description: Place the staff died
        artDepartment:
          type: boolean
          description: Whether this person if from art department
        artDirector:
          type: boolean
          description: Whether this person is an art director
        productionDesigner:
          type: boolean
          description: Whether this person is a production designer
        cameraAndElectricalDepartment:
          type: boolean
          description: Whether this person is from camera and electrical department
        cinematographer:
          type: boolean
          description: Whether this person is a cinematographer
        castingDepartment:
          type: boolean
          description: Whether this person is from casting department
        costumeDepartment:
          type: boolean
          description: Whether this person is from costume department
        costumeDesigner:
          type: boolean
          description: Whether this person is a custume designer
        director:
          type: boolean
          description: Whether this person is a director
        assistantOrSecondUnitDirector:
          type: boolean
          description: Whether this person is an assistant or second unit director
            director
        exhibitAndAttractionStaff:
          type: boolean
          description: Whether this person is an exhibit and attraction staff
        filmEditor:
          type: boolean
          description: Whether this person is a film editor
        filmationProductionStaff:
          type: boolean
          description: Whether this person is a part of Filmation production staff
        linguist:
          type: boolean
          description: Whether this person is a linguist
        locationStaff:
          type: boolean
          description: Whether this person is a location staff
        makeupStaff:
          type: boolean
          description: Whether this person is a make-up staff
        merchandiseStaff:
          type: boolean
          description: Whether this person is a merchandise staff
        musicDepartment:
          type: boolean
          description: Whether this person is from music department
        composer:
          type: boolean
          description: Whether this person is a composer
        personalAssistant:
          type: boolean
          description: Whether this person is a personal assistant
        producer:
          type: boolean
          description: Whether this person is a producer
        productionAssociate:
          type: boolean
          description: Whether this person is a production associate
        productionStaff:
          type: boolean
          description: Whether this person is a production staff
        publicationStaff:
          type: boolean
          description: Whether this person is a publication staff
        scienceConsultant:
          type: boolean
          description: Whether this person is a science consultant
        soundDepartment:
          type: boolean
          description: Whether this person is from sound department
        specialAndVisualEffectsStaff:
          type: boolean
          description: Whether this person is a special and visual effects staff
        author:
          type: boolean
          description: Whether this person is an author
        audioAuthor:
          type: boolean
          description: Whether this person is an audio author
        calendarArtist:
          type: boolean
          description: Whether this person is a calendar artist
        comicArtist:
          type: boolean
          description: Whether this person is a comic artist
        comicAuthor:
          type: boolean
          description: Whether this person is a comic author
        comicColorArtist:
          type: boolean
          description: Whether this person is a comic color artist
        comicCoverArtist:
          type: boolean
          description: Whether this person is a comic cover artist
        comicInteriorArtist:
          type: boolean
          description: Whether this person is a comic interior artist
        comicInkArtist:
          type: boolean
          description: Whether this person is a comic ink artist
        comicPencilArtist:
          type: boolean
          description: Whether this person is a comic pencil artist
        comicLetterArtist:
          type: boolean
          description: Whether this person is a comic letter artist
        comicStripArtist:
          type: boolean
          description: Whether this person is a comic strip artist
        gameArtist:
          type: boolean
          description: Whether this person is a game artist
        gameAuthor:
          type: boolean
          description: Whether this person is a game author
        novelArtist:
          type: boolean
          description: Whether this person is a novel artist
        novelAuthor:
          type: boolean
          description: Whether this person is a novel author
        referenceArtist:
          type: boolean
          description: Whether this person is a reference artist
        referenceAuthor:
          type: boolean
          description: Whether this person is a reference author
        publicationArtist:
          type: boolean
          description: Whether this person is a publication artist
        publicationDesigner:
          type: boolean
          description: Whether this person is a publication designer
        publicationEditor:
          type: boolean
          description: Whether this person is a publication editor
        publicityArtist:
          type: boolean
          description: Whether this person is a publication artist
        cbsDigitalStaff:
          type: boolean
          description: Whether this person is a part of CBS digital staff
        ilmProductionStaff:
          type: boolean
          description: Whether this person is a part of ILM production staff
        specialFeaturesStaff:
          type: boolean
          description: Whether this person is a special features artist
        storyEditor:
          type: boolean
          description: Whether this person is a story editor
        studioExecutive:
          type: boolean
          description: Whether this person is a studio executive
        stuntDepartment:
          type: boolean
          description: Whether this person is from stunt department
        transportationDepartment:
          type: boolean
          description: Whether this person is from transportation department
        videoGameProductionStaff:
          type: boolean
          description: Whether this person is video game production staff
        writer:
          type: boolean
          description: Whether this person is a writer
        writtenEpisodes:
          type: array
          description: Episodes written by this person
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        teleplayAuthoredEpisodes:
          type: array
          description: Episodes to which this person has written teleplay
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        storyAuthoredEpisodes:
          type: array
          description: Episodes to which this person has written story
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        directedEpisodes:
          type: array
          description: Episodes directed by this person
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        episodes:
          type: array
          description: Episodes on which this person worked
          default:
            - []
          items:
            $ref: '#/components/schemas/EpisodeBase'
        writtenMovies:
          type: array
          description: Movies written by this person
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        screenplayAuthoredMovies:
          type: array
          description: Movies to which this person has written screenplay
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        storyAuthoredMovies:
          type: array
          description: Movies to which this person has written story
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        directedMovies:
          type: array
          description: Movies directed by this person
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        producedMovies:
          type: array
          description: Movies produced by this person
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        movies:
          type: array
          description: Movies on which this person worked
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
      description: Full staff, returned when queried using UID (V2)
    StaffV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        staff:
          type: array
          description: List of staff matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/StaffV2Base'
      description: Response object for staff search (V2)
    StaffV2FullResponse:
      type: object
      properties:
        staff:
          $ref: '#/components/schemas/StaffV2Full'
      description: Response object for single staff query (V2)
    TechnologyHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Technology unique ID
        name:
          type: string
          description: Technology name
      description: Header technology, embedded in other objects
    TechnologyBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Technology unique ID
        name:
          type: string
          description: Technology name
        borgTechnology:
          type: boolean
          description: Whether it's a Borg technology
        borgComponent:
          type: boolean
          description: Whether it's a Borg component
        communicationsTechnology:
          type: boolean
          description: Whether it's a communications technology
        computerTechnology:
          type: boolean
          description: Whether it's a computer technology
        computerProgramming:
          type: boolean
          description: Whether it's a technology related to computer programming
        subroutine:
          type: boolean
          description: Whether it's a subroutine
        database:
          type: boolean
          description: Whether it's a database
        energyTechnology:
          type: boolean
          description: Whether it's a energy technology
        fictionalTechnology:
          type: boolean
          description: Whether it's a fictional technology
        holographicTechnology:
          type: boolean
          description: Whether it's a holographic technology
        identificationTechnology:
          type: boolean
          description: Whether it's a identification technology
        lifeSupportTechnology:
          type: boolean
          description: Whether it's a life support technology
        sensorTechnology:
          type: boolean
          description: Whether it's a sensor technology
        shieldTechnology:
          type: boolean
          description: Whether it's a shield technology
        tool:
          type: boolean
          description: Whether it's a tool
        culinaryTool:
          type: boolean
          description: Whether it's a culinary tool
        engineeringTool:
          type: boolean
          description: Whether it's a engineering tool
        householdTool:
          type: boolean
          description: Whether it's a household tool
        medicalEquipment:
          type: boolean
          description: Whether it's a medical equipment
        transporterTechnology:
          type: boolean
          description: Whether it's a transporter technology
      description: Base technology, returned in search results
    TechnologyFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Technology unique ID
        name:
          type: string
          description: Technology name
        borgTechnology:
          type: boolean
          description: Whether it's a Borg technology
        borgComponent:
          type: boolean
          description: Whether it's a Borg component
        communicationsTechnology:
          type: boolean
          description: Whether it's a communications technology
        computerTechnology:
          type: boolean
          description: Whether it's a computer technology
        computerProgramming:
          type: boolean
          description: Whether it's a technology related to computer programming
        subroutine:
          type: boolean
          description: Whether it's a subroutine
        database:
          type: boolean
          description: Whether it's a database
        energyTechnology:
          type: boolean
          description: Whether it's a energy technology
        fictionalTechnology:
          type: boolean
          description: Whether it's a fictional technology
        holographicTechnology:
          type: boolean
          description: Whether it's a holographic technology
        identificationTechnology:
          type: boolean
          description: Whether it's a identification technology
        lifeSupportTechnology:
          type: boolean
          description: Whether it's a life support technology
        sensorTechnology:
          type: boolean
          description: Whether it's a sensor technology
        shieldTechnology:
          type: boolean
          description: Whether it's a shield technology
        tool:
          type: boolean
          description: Whether it's a tool
        culinaryTool:
          type: boolean
          description: Whether it's a culinary tool
        engineeringTool:
          type: boolean
          description: Whether it's a engineering tool
        householdTool:
          type: boolean
          description: Whether it's a household tool
        medicalEquipment:
          type: boolean
          description: Whether it's a medical equipment
        transporterTechnology:
          type: boolean
          description: Whether it's a transporter technology
      description: Full technology, returned when queried using UID
    TechnologyBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        technology:
          type: array
          description: List of technology matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/TechnologyBase'
      description: Response object for technology search
    TechnologyFullResponse:
      type: object
      properties:
        technology:
          $ref: '#/components/schemas/TechnologyFull'
      description: Response object for single technology query
    TechnologyV2SearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Technology name
        borgTechnology:
          type: boolean
          description: Whether it should be a Borg technology
        borgComponent:
          type: boolean
          description: Whether it should be a Borg component
        communicationsTechnology:
          type: boolean
          description: Whether it should be a communications technology
        computerTechnology:
          type: boolean
          description: Whether it should be a computer technology
        computerProgramming:
          type: boolean
          description: Whether it should be a technology related to computer programming
        subroutine:
          type: boolean
          description: Whether it should be a subroutine
        database:
          type: boolean
          description: Whether it should be a database
        energyTechnology:
          type: boolean
          description: Whether it should be a energy technology
        fictionalTechnology:
          type: boolean
          description: Whether it should be a fictional technology
        holographicTechnology:
          type: boolean
          description: Whether it should be a holographic technology
        identificationTechnology:
          type: boolean
          description: Whether it should be a identification technology
        lifeSupportTechnology:
          type: boolean
          description: Whether it should be a life support technology
        sensorTechnology:
          type: boolean
          description: Whether it should be a sensor technology
        shieldTechnology:
          type: boolean
          description: Whether it should be a shield technology
        securityTechnology:
          type: boolean
          description: Whether it should be a security technology
        propulsionTechnology:
          type: boolean
          description: Whether it should be a propulsion technology
        spacecraftComponent:
          type: boolean
          description: Whether it should be a spacecraft component
        warpTechnology:
          type: boolean
          description: Whether it should be a warp technology
        transwarpTechnology:
          type: boolean
          description: Whether it should be a transwarp technology
        timeTravelTechnology:
          type: boolean
          description: Whether it should be a time travel technology
        militaryTechnology:
          type: boolean
          description: Whether it should be a military technology
        victualTechnology:
          type: boolean
          description: Whether it should be a victual technology
        tool:
          type: boolean
          description: Whether it should be a tool
        culinaryTool:
          type: boolean
          description: Whether it should be a culinary tool
        engineeringTool:
          type: boolean
          description: Whether it should be a engineering tool
        householdTool:
          type: boolean
          description: Whether it should be a household tool
        medicalEquipment:
          type: boolean
          description: Whether it should be a medical equipment
        transporterTechnology:
          type: boolean
          description: Whether it's a transporter technology
        transportationTechnology:
          type: boolean
          description: Whether it's a transportation technology
        weaponComponent:
          type: boolean
          description: Whether it's a weapon component
        artificialLifeformComponent:
          type: boolean
          description: Whether it's an artificial lifeform component
    TechnologyV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Technology unique ID
        name:
          type: string
          description: Technology name
        borgTechnology:
          type: boolean
          description: Whether it's a Borg technology
        borgComponent:
          type: boolean
          description: Whether it's a Borg component
        communicationsTechnology:
          type: boolean
          description: Whether it's a communications technology
        computerTechnology:
          type: boolean
          description: Whether it's a computer technology
        computerProgramming:
          type: boolean
          description: Whether it's a technology related to computer programming
        subroutine:
          type: boolean
          description: Whether it's a subroutine
        database:
          type: boolean
          description: Whether it's a database
        energyTechnology:
          type: boolean
          description: Whether it's a energy technology
        fictionalTechnology:
          type: boolean
          description: Whether it's a fictional technology
        holographicTechnology:
          type: boolean
          description: Whether it's a holographic technology
        identificationTechnology:
          type: boolean
          description: Whether it's a identification technology
        lifeSupportTechnology:
          type: boolean
          description: Whether it's a life support technology
        sensorTechnology:
          type: boolean
          description: Whether it's a sensor technology
        shieldTechnology:
          type: boolean
          description: Whether it's a shield technology
        securityTechnology:
          type: boolean
          description: Whether it's a security technology
        propulsionTechnology:
          type: boolean
          description: Whether it's a propulsion technology
        spacecraftComponent:
          type: boolean
          description: Whether it's a spacecraft component
        warpTechnology:
          type: boolean
          description: Whether it's a warp technology
        transwarpTechnology:
          type: boolean
          description: Whether it's a transwarp technology
        timeTravelTechnology:
          type: boolean
          description: Whether it's a time travel technology
        militaryTechnology:
          type: boolean
          description: Whether it's a military technology
        victualTechnology:
          type: boolean
          description: Whether it's a victual technology
        tool:
          type: boolean
          description: Whether it's a tool
        culinaryTool:
          type: boolean
          description: Whether it's a culinary tool
        engineeringTool:
          type: boolean
          description: Whether it's a engineering tool
        householdTool:
          type: boolean
          description: Whether it's a household tool
        medicalEquipment:
          type: boolean
          description: Whether it's a medical equipment
        transporterTechnology:
          type: boolean
          description: Whether it's a transporter technology
        transportationTechnology:
          type: boolean
          description: Whether it's a transportation technology
        weaponComponent:
          type: boolean
          description: Whether it's a weapon component
        artificialLifeformComponent:
          type: boolean
          description: Whether it's an artificial lifeform component
      description: Base technology, returned in search results (V2)
    TechnologyV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Technology unique ID
        name:
          type: string
          description: Technology name
        borgTechnology:
          type: boolean
          description: Whether it's a Borg technology
        borgComponent:
          type: boolean
          description: Whether it's a Borg component
        communicationsTechnology:
          type: boolean
          description: Whether it's a communications technology
        computerTechnology:
          type: boolean
          description: Whether it's a computer technology
        computerProgramming:
          type: boolean
          description: Whether it's a technology related to computer programming
        subroutine:
          type: boolean
          description: Whether it's a subroutine
        database:
          type: boolean
          description: Whether it's a database
        energyTechnology:
          type: boolean
          description: Whether it's a energy technology
        fictionalTechnology:
          type: boolean
          description: Whether it's a fictional technology
        holographicTechnology:
          type: boolean
          description: Whether it's a holographic technology
        identificationTechnology:
          type: boolean
          description: Whether it's a identification technology
        lifeSupportTechnology:
          type: boolean
          description: Whether it's a life support technology
        sensorTechnology:
          type: boolean
          description: Whether it's a sensor technology
        shieldTechnology:
          type: boolean
          description: Whether it's a shield technology
        securityTechnology:
          type: boolean
          description: Whether it's a security technology
        propulsionTechnology:
          type: boolean
          description: Whether it's a propulsion technology
        spacecraftComponent:
          type: boolean
          description: Whether it's a spacecraft component
        warpTechnology:
          type: boolean
          description: Whether it's a warp technology
        transwarpTechnology:
          type: boolean
          description: Whether it's a transwarp technology
        timeTravelTechnology:
          type: boolean
          description: Whether it's a time travel technology
        militaryTechnology:
          type: boolean
          description: Whether it's a military technology
        victualTechnology:
          type: boolean
          description: Whether it's a victual technology
        tool:
          type: boolean
          description: Whether it's a tool
        culinaryTool:
          type: boolean
          description: Whether it's a culinary tool
        engineeringTool:
          type: boolean
          description: Whether it's a engineering tool
        householdTool:
          type: boolean
          description: Whether it's a household tool
        medicalEquipment:
          type: boolean
          description: Whether it's a medical equipment
        transporterTechnology:
          type: boolean
          description: Whether it's a transporter technology
        transportationTechnology:
          type: boolean
          description: Whether it's a transportation technology
        weaponComponent:
          type: boolean
          description: Whether it's a weapon component
        artificialLifeformComponent:
          type: boolean
          description: Whether it's an artificial lifeform component
      description: Full technology, returned when queried using UID (V2)
    TechnologyV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        technology:
          type: array
          description: List of technology matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/TechnologyV2Base'
      description: Response object for technology search (V2)
    TechnologyV2FullResponse:
      type: object
      properties:
        technology:
          $ref: '#/components/schemas/TechnologyV2Full'
      description: Response object for single technology query (V2)
    TitleHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Title unique ID
        name:
          type: string
          description: Title name
      description: Header title, embedded in other objects
    TitleBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Title unique ID
        name:
          type: string
          description: Title name
        militaryRank:
          type: boolean
          description: Whether it's a military rank
        fleetRank:
          type: boolean
          description: Whether it's a fleet rank
        religiousTitle:
          type: boolean
          description: Whether it's a religious title
        position:
          type: boolean
          description: Whether it's a position
        mirror:
          type: boolean
          description: Whether this title is from mirror universe
      description: Base title, returned in search results
    TitleFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Title unique ID
        name:
          type: string
          description: Title name
        militaryRank:
          type: boolean
          description: Whether it's a military rank
        fleetRank:
          type: boolean
          description: Whether it's a fleet rank
        religiousTitle:
          type: boolean
          description: Whether it's a religious title
        position:
          type: boolean
          description: Whether it's a position
        mirror:
          type: boolean
          description: Whether this title is from mirror universe
        characters:
          type: array
          description: Characters that holds this title
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full title, returned when queried using UID
    TitleBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        titles:
          type: array
          description: List of titles matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/TitleBase'
      description: Response object for titles search
    TitleFullResponse:
      type: object
      properties:
        title:
          $ref: '#/components/schemas/TitleFull'
      description: Response object for single title query
    TitleV2SearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Title name
        militaryRank:
          type: boolean
          description: Whether it should be a military rank
        fleetRank:
          type: boolean
          description: Whether it should be a fleet rank
        religiousTitle:
          type: boolean
          description: Whether it should be a religious title
        educationTitle:
          type: boolean
          description: Whether it should be a education title
        mirror:
          type: boolean
          description: Whether this title should be from mirror universe
    TitleV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Title unique ID
        name:
          type: string
          description: Title name
        militaryRank:
          type: boolean
          description: Whether it's a military rank
        fleetRank:
          type: boolean
          description: Whether it's a fleet rank
        religiousTitle:
          type: boolean
          description: Whether it's a religious title
        educationTitle:
          type: boolean
          description: Whether it's a education title
        mirror:
          type: boolean
          description: Whether this title is from mirror universe
      description: Base title, returned in search results (V2)
    TitleV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Title unique ID
        name:
          type: string
          description: Title name
        militaryRank:
          type: boolean
          description: Whether it's a military rank
        fleetRank:
          type: boolean
          description: Whether it's a fleet rank
        religiousTitle:
          type: boolean
          description: Whether it's a religious title
        educationTitle:
          type: boolean
          description: Whether it's a education title
        mirror:
          type: boolean
          description: Whether this title is from mirror universe
        characters:
          type: array
          description: Characters that holds this title
          default:
            - []
          items:
            $ref: '#/components/schemas/CharacterBase'
      description: Full title, returned when queried using UID (V2)
    TitleV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        titles:
          type: array
          description: List of titles matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/TitleV2Base'
      description: Response object for titles search (V2)
    TitleV2FullResponse:
      type: object
      properties:
        title:
          $ref: '#/components/schemas/TitleV2Full'
      description: Response object for single title query (V2)
    TradingCardSearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Trading card name
        tradingCardDeckUid:
          type: string
          description: UID of trading card deck
        tradingCardSetUid:
          type: string
          description: UID of trading card set
    TradingCardHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Trading card unique ID
        name:
          type: string
          description: Trading card name
      description: Header trading card, embedded in other objects
    TradingCardBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Trading card unique ID
        name:
          type: string
          description: Trading card name
        number:
          type: string
          description: Trading card number
        releaseYear:
          type: integer
          description: Release year, if set was releases over multiple years
        productionRun:
          type: integer
          description: Production run, if different from trading card set production
            run
        tradingCardSet:
          $ref: '#/components/schemas/TradingCardSetHeader'
        tradingCardDeck:
          $ref: '#/components/schemas/TradingCardDeckHeader'
      description: Base trading card, returned in search results
    TradingCardFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Trading card unique ID
        name:
          type: string
          description: Trading card name
        tradingCardSet:
          $ref: '#/components/schemas/TradingCardSetBase'
        tradingCardDeck:
          $ref: '#/components/schemas/TradingCardDeckBase'
        number:
          type: string
          description: Trading card number
        releaseYear:
          type: integer
          description: Release year, if set was releases over multiple years
        productionRun:
          type: integer
          description: Production run, if different from trading card set production
            run
      description: Full trading card, returned when queried using UID
    TradingCardBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        tradingCards:
          type: array
          description: List of trading cards matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/TradingCardBase'
      description: Response object for trading cards search
    TradingCardFullResponse:
      type: object
      properties:
        tradingCard:
          $ref: '#/components/schemas/TradingCardFull'
      description: Response object for single trading card query
    TradingCardDeckSearchCriteria:
      type: object
      description: Trading card deck search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Trading card deck name
        tradingCardSetUid:
          type: string
          description: UID of trading card set
    TradingCardDeckHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Trading card deck unique ID
        name:
          type: string
          description: Trading card deck name
      description: Header trading card deck, embedded in other objects
    TradingCardDeckBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Trading card deck unique ID
        name:
          type: string
          description: Trading card deck name
        frequency:
          type: string
          description: Frequency with which this deck occur in it's set
        tradingCardSet:
          $ref: '#/components/schemas/TradingCardSetHeader'
      description: Base trading card deck, returned in search results
    TradingCardDeckFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Trading card deck unique ID
        name:
          type: string
          description: Trading card deck name
        frequency:
          type: string
          description: Frequency with which this deck occur in it's set
        tradingCardSet:
          $ref: '#/components/schemas/TradingCardSetHeader'
        tradingCards:
          type: array
          description: Trading cards in this deck
          default:
            - []
          items:
            $ref: '#/components/schemas/TradingCardBase'
      description: Full trading card deck, returned when queried using UID
    TradingCardDeckBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        tradingCardDecks:
          type: array
          description: List of trading card decks matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/TradingCardDeckBase'
      description: Response object for trading card decks search
    TradingCardDeckFullResponse:
      type: object
      properties:
        tradingCardDeck:
          $ref: '#/components/schemas/TradingCardDeckFull'
      description: Response object for single trading card deck query
    TradingCardSetSearchCriteria:
      type: object
      description: Trading card set search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Trading card set name
        releaseYearFrom:
          type: integer
          description: Starting year the trading card set was released
          format: int32
        releaseYearTo:
          type: integer
          description: Ending year the trading card set was released
          format: int32
        cardsPerPackFrom:
          type: integer
          description: Minimal number of cards per deck
          format: int32
        cardsPerPackTo:
          type: integer
          description: Minimal number of cards per deck
          format: int32
        packsPerBoxFrom:
          type: integer
          description: Minimal number of packs per box
          format: int32
        packsPerBoxTo:
          type: integer
          description: Minimal number of packs per box
          format: int32
        boxesPerCaseFrom:
          type: integer
          description: Minimal number of boxes per case
          format: int32
        boxesPerCaseTo:
          type: integer
          description: Minimal number of boxes per case
          format: int32
        productionRunFrom:
          type: integer
          description: Minimal production run
          format: int32
        productionRunTo:
          type: integer
          description: Minimal production run
          format: int32
        productionRunUnit:
          type: string
          description: Production run unit
        cardWidthFrom:
          type: number
          description: Minimal card width, in inches
          format: double
        cardWidthTo:
          type: number
          description: Minimal card width, in inches
          format: double
        cardHeightFrom:
          type: number
          description: Minimal card height, in inches
          format: double
        cardHeightTo:
          type: number
          description: Minimal card height, in inches
          format: double
    TradingCardSetHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Trading card set unique ID
        name:
          type: string
          description: Trading card set name
      description: Header trading card set, embedded in other objects
    TradingCardSetBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Trading card set unique ID
        name:
          type: string
          description: Trading card set name
        releaseYear:
          type: integer
          description: Release year
        releaseMonth:
          type: integer
          description: Release month
        releaseDay:
          type: integer
          description: Release day
        cardsPerPack:
          type: integer
          description: Cards per deck
        packsPerBox:
          type: integer
          description: Packs per box
        boxesPerCase:
          type: integer
          description: Boxes per case
        productionRun:
          type: integer
          description: Production run
        productionRunUnit:
          $ref: '#/components/schemas/ProductionRunUnit'
        cardWidth:
          type: number
          description: Card width, in inches
          format: double
        cardHeight:
          type: number
          description: Card height, in inches
          format: double
      description: Base trading card set, returned in search results
    TradingCardSetFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Trading card set unique ID
        name:
          type: string
          description: Trading card set name
        releaseYear:
          type: integer
          description: Release year
        releaseMonth:
          type: integer
          description: Release month
        releaseDay:
          type: integer
          description: Release day
        cardsPerPack:
          type: integer
          description: Cards per deck
        packsPerBox:
          type: integer
          description: Packs per box
        boxesPerCase:
          type: integer
          description: Boxes per case
        productionRun:
          type: integer
          description: Production run
        productionRunUnit:
          $ref: '#/components/schemas/ProductionRunUnit'
        cardWidth:
          type: number
          description: Card width, in inches
          format: double
        cardHeight:
          type: number
          description: Card height, in inches
          format: double
        manufacturers:
          type: array
          description: Manufacturers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        tradingCardDecks:
          type: array
          description: Trading card decks in this set
          default:
            - []
          items:
            $ref: '#/components/schemas/TradingCardDeckBase'
        tradingCards:
          type: array
          description: Trading cards in this set
          default:
            - []
          items:
            $ref: '#/components/schemas/TradingCardBase'
        countriesOfOrigin:
          type: array
          description: Countries of origin
          default:
            - []
          items:
            $ref: '#/components/schemas/Country'
      description: Full trading card set, returned when queried using UID
    TradingCardSetBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        tradingCardSets:
          type: array
          description: List of trading card sets matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/TradingCardSetBase'
      description: Response object for trading card sets search
    TradingCardSetFullResponse:
      type: object
      properties:
        tradingCardSet:
          $ref: '#/components/schemas/TradingCardSetFull'
      description: Response object for single trading card set query
    VideoGameSearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Video game title
        releaseDateFrom:
          type: string
          description: Minimal date the video game was first released
          format: date
        releaseDateTo:
          type: string
          description: Minimal date the video game was first released
          format: date
    VideoGameHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Video game unique ID
        title:
          type: string
          description: Video game title
      description: Header video game, embedded in other objects
    VideoGameBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Video game unique ID
        title:
          type: string
          description: Video game title
        releaseDate:
          type: string
          description: Release date
          format: date
        stardateFrom:
          type: number
          description: Starting stardate of video game story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of video game story
          format: float
        yearFrom:
          type: integer
          description: Starting year of video game story
        yearTo:
          type: integer
          description: Ending year of video game story
        systemRequirements:
          type: string
          description: System requirements
      description: Base video game, returned in search results
    VideoGameFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Video game unique ID
        title:
          type: string
          description: Video game title
        releaseDate:
          type: string
          description: Release date
          format: date
        stardateFrom:
          type: number
          description: Starting stardate of video game story
          format: float
        stardateTo:
          type: number
          description: Ending stardate of video game story
          format: float
        yearFrom:
          type: integer
          description: Starting year of video game story
        yearTo:
          type: integer
          description: Ending year of video game story
        systemRequirements:
          type: string
          description: System requirements
        publishers:
          type: array
          description: Publishers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        developers:
          type: array
          description: Developers
          default:
            - []
          items:
            $ref: '#/components/schemas/CompanyBase'
        platforms:
          type: array
          description: Platforms
          default:
            - []
          items:
            $ref: '#/components/schemas/Platform'
        genres:
          type: array
          description: Genres
          default:
            - []
          items:
            $ref: '#/components/schemas/Genre'
        ratings:
          type: array
          description: Ratings
          default:
            - []
          items:
            $ref: '#/components/schemas/ContentRating'
        references:
          type: array
          description: References
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
      description: Full video game, returned when queried using UID
    VideoGameBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        videoGames:
          type: array
          description: List of video games matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/VideoGameBase'
      description: Response object for video games search
    VideoGameFullResponse:
      type: object
      properties:
        videoGame:
          $ref: '#/components/schemas/VideoGameFull'
      description: Response object for single video game query
    VideoReleaseHeader:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Video release unique ID
        title:
          type: string
          description: Video release title
      description: Header video release, embedded in other objects
    VideoReleaseBase:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Video release unique ID
        title:
          type: string
          description: Video release title
        series:
          $ref: '#/components/schemas/SeriesHeader'
        season:
          $ref: '#/components/schemas/SeasonHeader'
        format:
          $ref: '#/components/schemas/VideoReleaseFormat'
        numberOfEpisodes:
          type: integer
          description: Number of episodes
        numberOfFeatureLengthEpisodes:
          type: integer
          description: Number of feature-length episodes
        numberOfDataCarriers:
          type: integer
          description: Number of data carriers (like DVD, VCD, VHS etc.)
        runTime:
          type: integer
          description: Run time, in minutes
        yearFrom:
          type: integer
          description: Starting year of video release story
        yearTo:
          type: integer
          description: Ending year of video release story
        regionFreeReleaseDate:
          type: string
          description: Region free release date
          format: date
        region1AReleaseDate:
          type: string
          description: Region 1/A release date
          format: date
        region1SlimlineReleaseDate:
          type: string
          description: Region 1 slimline release date
          format: date
        region2BReleaseDate:
          type: string
          description: Region 2/B release date
          format: date
        region2SlimlineReleaseDate:
          type: string
          description: Region 2 slimline release date
          format: date
        region4AReleaseDate:
          type: string
          description: Region 4 release date
          format: date
        region4SlimlineReleaseDate:
          type: string
          description: Region 4 slimline release date
          format: date
        amazonDigitalRelease:
          type: boolean
          description: Whether this video has been release on Amazon.com
        dailymotionDigitalRelease:
          type: boolean
          description: Whether this video has been release on Dailymotion
        googlePlayDigitalRelease:
          type: boolean
          description: Whether this video has been release on Google Play
        itunesDigitalRelease:
          type: boolean
          description: Whether this video has been release on iTunes
        ultraVioletDigitalRelease:
          type: boolean
          description: Whether this video has been release on UltraViolet
        vimeoDigitalRelease:
          type: boolean
          description: Whether this video has been release on Vimeo
        vuduDigitalRelease:
          type: boolean
          description: Whether this video has been release on VUDU
        xboxSmartGlassDigitalRelease:
          type: boolean
          description: Whether this video has been release on Xbox SmartGlass
        youTubeDigitalRelease:
          type: boolean
          description: Whether this video has been release on YouTube
        netflixDigitalRelease:
          type: boolean
          description: Whether this video has been release on Netflix
      description: Base video release, returned in search results
    VideoReleaseFormat:
      type: string
      description: Video release format
      enum:
        - SUPER_8
        - BETAMAX
        - VHS
        - CED
        - LD
        - VHD
        - VCD
        - VIDEO_8
        - DVD
        - UMD
        - HD_DVD
        - BLU_RAY
        - BLU_RAY_4K_UHD
        - DIGITAL_FORMAT
    VideoReleaseFull:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Video release unique ID
        title:
          type: string
          description: Video release title
        series:
          $ref: '#/components/schemas/SeriesBase'
        season:
          $ref: '#/components/schemas/SeasonBase'
        format:
          $ref: '#/components/schemas/VideoReleaseFormat'
        numberOfEpisodes:
          type: integer
          description: Number of episodes
        numberOfFeatureLengthEpisodes:
          type: integer
          description: Number of feature-length episodes
        numberOfDataCarriers:
          type: integer
          description: Number of data carriers (like DVD, VCD, VHS etc.)
        runTime:
          type: integer
          description: Run time, in minutes
        yearFrom:
          type: integer
          description: Starting year of video release story
        yearTo:
          type: integer
          description: Ending year of video release story
        regionFreeReleaseDate:
          type: string
          description: Region free release date
          format: date
        region1AReleaseDate:
          type: string
          description: Region 1/A release date
          format: date
        region1SlimlineReleaseDate:
          type: string
          description: Region 1 slimline release date
          format: date
        region2BReleaseDate:
          type: string
          description: Region 2/B release date
          format: date
        region2SlimlineReleaseDate:
          type: string
          description: Region 2 slimline release date
          format: date
        region4AReleaseDate:
          type: string
          description: Region 4 release date
          format: date
        region4SlimlineReleaseDate:
          type: string
          description: Region 4 slimline release date
          format: date
        amazonDigitalRelease:
          type: boolean
          description: Whether this video has been release on Amazon.com
        dailymotionDigitalRelease:
          type: boolean
          description: Whether this video has been release on Dailymotion
        googlePlayDigitalRelease:
          type: boolean
          description: Whether this video has been release on Google Play
        itunesDigitalRelease:
          type: boolean
          description: Whether this video has been release on iTunes
        ultraVioletDigitalRelease:
          type: boolean
          description: Whether this video has been release on UltraViolet
        vimeoDigitalRelease:
          type: boolean
          description: Whether this video has been release on Vimeo
        vuduDigitalRelease:
          type: boolean
          description: Whether this video has been release on VUDU
        xboxSmartGlassDigitalRelease:
          type: boolean
          description: Whether this video has been release on Xbox SmartGlass
        youTubeDigitalRelease:
          type: boolean
          description: Whether this video has been release on YouTube
        netflixDigitalRelease:
          type: boolean
          description: Whether this video has been release on Netflix
        references:
          type: array
          description: References
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
        ratings:
          type: array
          description: Ratings
          default:
            - []
          items:
            $ref: '#/components/schemas/ContentRating'
        languages:
          type: array
          description: Languages of audio track
          default:
            - []
          items:
            $ref: '#/components/schemas/ContentLanguage'
        languagesSubtitles:
          type: array
          description: Languages of subtitles
          default:
            - []
          items:
            $ref: '#/components/schemas/ContentLanguage'
        languagesDubbed:
          type: array
          description: Languages that are available with dubbing
          default:
            - []
          items:
            $ref: '#/components/schemas/ContentLanguage'
      description: Full video release, returned when queried using UID
    VideoReleaseBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        videoReleases:
          type: array
          description: List of video releases matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/VideoReleaseBase'
      description: Response object for video releases search
    VideoReleaseFullResponse:
      type: object
      properties:
        videoRelease:
          $ref: '#/components/schemas/VideoReleaseFull'
      description: Response object for single video release query
    VideoReleaseV2SearchCriteria:
      type: object
      description: Video release search criteria (V2)
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        title:
          type: string
          description: Video release title
        yearFrom:
          type: integer
          description: Starting year of video release story
          format: int32
        yearTo:
          type: integer
          description: Ending year of video release story
          format: int32
        runTimeFrom:
          type: integer
          description: Minimal run time, in minutes
          format: int32
        runTimeTo:
          type: integer
          description: Minimal run time, in minutes
          format: int32
        documentary:
          type: boolean
          description: Whether it should be a documentary
        specialFeatures:
          type: boolean
          description: Whether it should contain special features
    VideoReleaseV2Base:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Video release unique ID
        title:
          type: string
          description: Video release title
        format:
          $ref: '#/components/schemas/VideoReleaseFormat'
        numberOfEpisodes:
          type: integer
          description: Number of episodes
        numberOfFeatureLengthEpisodes:
          type: integer
          description: Number of feature-length episodes
        numberOfDataCarriers:
          type: integer
          description: Number of data carriers (like DVD, VCD, VHS etc.)
        runTime:
          type: integer
          description: Run time, in minutes
        yearFrom:
          type: integer
          description: Starting year of video release story
        yearTo:
          type: integer
          description: Ending year of video release story
        regionFreeReleaseDate:
          type: string
          description: Region free release date
          format: date
        region1AReleaseDate:
          type: string
          description: Region 1/A release date
          format: date
        region1SlimlineReleaseDate:
          type: string
          description: Region 1 slimline release date
          format: date
        region2BReleaseDate:
          type: string
          description: Region 2/B release date
          format: date
        region2SlimlineReleaseDate:
          type: string
          description: Region 2 slimline release date
          format: date
        region4AReleaseDate:
          type: string
          description: Region 4 release date
          format: date
        region4SlimlineReleaseDate:
          type: string
          description: Region 4 slimline release date
          format: date
        amazonDigitalRelease:
          type: boolean
          description: Whether this video has been release on Amazon.com
        dailymotionDigitalRelease:
          type: boolean
          description: Whether this video has been release on Dailymotion
        googlePlayDigitalRelease:
          type: boolean
          description: Whether this video has been release on Google Play
        itunesDigitalRelease:
          type: boolean
          description: Whether this video has been release on iTunes # In V3 it should be iTunesDigitalRelease
        ultraVioletDigitalRelease:
          type: boolean
          description: Whether this video has been release on UltraViolet
        vimeoDigitalRelease:
          type: boolean
          description: Whether this video has been release on Vimeo
        vuduDigitalRelease:
          type: boolean
          description: Whether this video has been release on VUDU
        xboxSmartGlassDigitalRelease:
          type: boolean
          description: Whether this video has been release on Xbox SmartGlass
        youTubeDigitalRelease:
          type: boolean
          description: Whether this video has been release on YouTube
        netflixDigitalRelease:
          type: boolean
          description: Whether this video has been release on Netflix
        documentary:
          type: boolean
          description: Whether this is a documentary
        specialFeatures:
          type: boolean
          description: Whether this contains special features
      description: Base video release, returned in search results (V2)
    VideoReleaseV2Full:
      required:
        - title
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Video release unique ID
        title:
          type: string
          description: Video release title
        series:
          type: array
          description: Series with which this video release is associated, so that it contains part of all of it
          default:
            - []
          items:
            $ref: '#/components/schemas/SeriesBase'
        seasons:
          type: array
          description: Seasons with which this video release is associated, so that it contains part of all of it
          default:
            - []
          items:
            $ref: '#/components/schemas/SeasonBase'
        movies:
          type: array
          description: Movies with which this video release is associated, so that it contains the full movie
          default:
            - []
          items:
            $ref: '#/components/schemas/MovieBase'
        format:
          $ref: '#/components/schemas/VideoReleaseFormat'
        numberOfEpisodes:
          type: integer
          description: Number of episodes
        numberOfFeatureLengthEpisodes:
          type: integer
          description: Number of feature-length episodes
        numberOfDataCarriers:
          type: integer
          description: Number of data carriers (like DVD, VCD, VHS etc.)
        runTime:
          type: integer
          description: Run time, in minutes
        yearFrom:
          type: integer
          description: Starting year of video release story
        yearTo:
          type: integer
          description: Ending year of video release story
        regionFreeReleaseDate:
          type: string
          description: Region free release date
          format: date
        region1AReleaseDate:
          type: string
          description: Region 1/A release date
          format: date
        region1SlimlineReleaseDate:
          type: string
          description: Region 1 slimline release date
          format: date
        region2BReleaseDate:
          type: string
          description: Region 2/B release date
          format: date
        region2SlimlineReleaseDate:
          type: string
          description: Region 2 slimline release date
          format: date
        region4AReleaseDate:
          type: string
          description: Region 4 release date
          format: date
        region4SlimlineReleaseDate:
          type: string
          description: Region 4 slimline release date
          format: date
        amazonDigitalRelease:
          type: boolean
          description: Whether this video has been release on Amazon.com
        dailymotionDigitalRelease:
          type: boolean
          description: Whether this video has been release on Dailymotion
        googlePlayDigitalRelease:
          type: boolean
          description: Whether this video has been release on Google Play
        itunesDigitalRelease:
          type: boolean
          description: Whether this video has been release on iTunes # In V3 it should be iTunesDigitalRelease
        ultraVioletDigitalRelease:
          type: boolean
          description: Whether this video has been release on UltraViolet
        vimeoDigitalRelease:
          type: boolean
          description: Whether this video has been release on Vimeo
        vuduDigitalRelease:
          type: boolean
          description: Whether this video has been release on VUDU
        xboxSmartGlassDigitalRelease:
          type: boolean
          description: Whether this video has been release on Xbox SmartGlass
        youTubeDigitalRelease:
          type: boolean
          description: Whether this video has been release on YouTube
        netflixDigitalRelease:
          type: boolean
          description: Whether this video has been release on Netflix
        documentary:
          type: boolean
          description: Whether this is a documentary
        specialFeatures:
          type: boolean
          description: Whether this contains special features
        references:
          type: array
          description: References
          default:
            - []
          items:
            $ref: '#/components/schemas/Reference'
        ratings:
          type: array
          description: Ratings
          default:
            - []
          items:
            $ref: '#/components/schemas/ContentRating'
        languages:
          type: array
          description: Languages of audio track
          default:
            - []
          items:
            $ref: '#/components/schemas/ContentLanguage'
        languagesSubtitles:
          type: array
          description: Languages of subtitles
          default:
            - []
          items:
            $ref: '#/components/schemas/ContentLanguage'
        languagesDubbed:
          type: array
          description: Languages that are available with dubbing
          default:
            - []
          items:
            $ref: '#/components/schemas/ContentLanguage'
      description: Full video release, returned when queried using UID
    VideoReleaseV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        videoReleases:
          type: array
          description: List of video releases matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/VideoReleaseV2Base'
      description: Response object for video releases search (V2)
    VideoReleaseV2FullResponse:
      type: object
      properties:
        videoRelease:
          $ref: '#/components/schemas/VideoReleaseV2Full'
      description: Response object for single video release query (V2)
    WeaponHeader:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Weapon unique ID
        name:
          type: string
          description: Weapon name
      description: Header weapon, embedded in other objects
    WeaponBase:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Weapon unique ID
        name:
          type: string
          description: Weapon name
        handHeldWeapon:
          type: boolean
          description: Whether it's hand-help weapon
        laserTechnology:
          type: boolean
          description: Whether it's a laser technology
        plasmaTechnology:
          type: boolean
          description: Whether it's a plasma technology
        photonicTechnology:
          type: boolean
          description: Whether it's a photonic technology
        phaserTechnology:
          type: boolean
          description: Whether it's a phaser technology
        mirror:
          type: boolean
          description: Whether this weapon is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this weapon is from alternate reality
      description: Base weapon, returned in search results
    WeaponFull:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Weapon unique ID
        name:
          type: string
          description: Weapon name
        handHeldWeapon:
          type: boolean
          description: Whether it's a hand-help weapon
        laserTechnology:
          type: boolean
          description: Whether it's a laser technology
        plasmaTechnology:
          type: boolean
          description: Whether it's a plasma technology
        photonicTechnology:
          type: boolean
          description: Whether it's a photonic technology
        phaserTechnology:
          type: boolean
          description: Whether it's a phaser technology
        mirror:
          type: boolean
          description: Whether this weapon is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this weapon is from alternate reality
      description: Full weapon, returned when queried using UID
    WeaponBaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        weapons:
          type: array
          description: List of weapons matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/WeaponBase'
      description: Response object for weapons search
    WeaponFullResponse:
      type: object
      properties:
        weapon:
          $ref: '#/components/schemas/WeaponFull'
      description: Response object for single weapon query
    WeaponV2SearchCriteria:
      type: object
      description: Animal search criteria
      properties:
        pageNumber:
          type: integer
          description: Zero-based page number
          format: int32
        pageSize:
          type: integer
          description: Page size
          format: int32
        sort:
          $ref: '#/components/schemas/RequestSort'
        name:
          type: string
          description: Weapon name
        handHeldWeapon:
          type: boolean
          description: Whether it should be a hand-help weapon
        laserTechnology:
          type: boolean
          description: Whether it should be a laser technology
        plasmaTechnology:
          type: boolean
          description: Whether it should be a plasma technology
        photonicTechnology:
          type: boolean
          description: Whether it should be a photonic technology
        phaserTechnology:
          type: boolean
          description: Whether it should be a phaser technology
        directedEnergyWeapon:
          type: boolean
          description: Whether it should be a directed energy weapon
        explosiveWeapon:
          type: boolean
          description: Whether it should be an explosive weapon
        projectileWeapon:
          type: boolean
          description: Whether it should be a projectile weapon
        fictionalWeapon:
          type: boolean
          description: Whether it should be a fictional weapon
        mirror:
          type: boolean
          description: Whether this weapon should be from mirror universe
        alternateReality:
          type: boolean
          description: Whether this weapon should be from alternate reality
    WeaponV2Base:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Weapon unique ID
        name:
          type: string
          description: Weapon name
        handHeldWeapon:
          type: boolean
          description: Whether it's hand-help weapon
        laserTechnology:
          type: boolean
          description: Whether it's a laser technology
        plasmaTechnology:
          type: boolean
          description: Whether it's a plasma technology
        photonicTechnology:
          type: boolean
          description: Whether it's a photonic technology
        phaserTechnology:
          type: boolean
          description: Whether it's a phaser technology
        directedEnergyWeapon:
          type: boolean
          description: Whether it's a directed energy weapon
        explosiveWeapon:
          type: boolean
          description: Whether it's an explosive weapon
        projectileWeapon:
          type: boolean
          description: Whether it's a projectile weapon
        fictionalWeapon:
          type: boolean
          description: Whether it's a fictional weapon
        mirror:
          type: boolean
          description: Whether this weapon is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this weapon is from alternate reality
      description: Base weapon, returned in search results (V2)
    WeaponV2Full:
      required:
        - name
        - uid
      type: object
      properties:
        uid:
          type: string
          description: Weapon unique ID
        name:
          type: string
          description: Weapon name
        handHeldWeapon:
          type: boolean
          description: Whether it's a hand-help weapon
        laserTechnology:
          type: boolean
          description: Whether it's a laser technology
        plasmaTechnology:
          type: boolean
          description: Whether it's a plasma technology
        photonicTechnology:
          type: boolean
          description: Whether it's a photonic technology
        phaserTechnology:
          type: boolean
          description: Whether it's a phaser technology
        directedEnergyWeapon:
          type: boolean
          description: Whether it's a directed energy weapon
        explosiveWeapon:
          type: boolean
          description: Whether it's an explosive weapon
        projectileWeapon:
          type: boolean
          description: Whether it's a projectile weapon
        fictionalWeapon:
          type: boolean
          description: Whether it's a fictional weapon
        mirror:
          type: boolean
          description: Whether this weapon is from mirror universe
        alternateReality:
          type: boolean
          description: Whether this weapon is from alternate reality
      description: Full weapon, returned when queried using UID (V2)
    WeaponV2BaseResponse:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/ResponsePage'
        sort:
          $ref: '#/components/schemas/ResponseSort'
        weapons:
          type: array
          description: List of weapons matching given criteria
          default:
            - []
          items:
            $ref: '#/components/schemas/WeaponV2Base'
      description: Response object for weapons search (V2)
    WeaponV2FullResponse:
      type: object
      properties:
        weapon:
          $ref: '#/components/schemas/WeaponV2Full'
      description: Response object for single weapon query (V2)
