buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath(group: 'io.swagger', name: 'swagger-codegen-cli', version: '2.2.0') {
			exclude(module: 'org.slf4j')
			exclude(module: 'log4j')
			exclude(module: 'logback-classic')
		}
	}
}

dependencies {
	compile project(':contract')
	compile group: 'com.squareup.okhttp', name: 'okhttp', version: '2.7.5'
	compile group: 'com.squareup.okhttp', name: 'logging-interceptor', version: '2.7.5'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
	compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.17'
	testCompile project(':util').sourceSets.test.output
}

wsdl2java {
	encoding = 'utf-8'
	wsdlsToGenerate = [
			[
					'-wsdlLocation', 'classpath:v1/wsdl/series.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/series.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/season.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/season.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/performer.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/performer.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/staff.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/staff.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/character.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/character.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/episode.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/episode.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/movie.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/movie.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/astronomicalObject.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/astronomicalObject.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/company.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/company.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/comicSeries.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/comicSeries.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/comics.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/comics.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/comicStrip.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/comicStrip.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/comicCollection.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/comicCollection.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/species.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/species.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/organization.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/organization.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/food.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/food.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/location.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/location.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/bookSeries.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/bookSeries.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/book.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/book.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/bookCollection.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/bookCollection.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/magazine.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/magazine.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/magazineSeries.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/magazineSeries.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/literature.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/literature.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/videoRelease.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/videoRelease.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/tradingCard.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/tradingCard.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/tradingCardSet.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/tradingCardSet.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/tradingCardDeck.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/tradingCardDeck.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/videoGame.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/videoGame.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/soundtrack.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/soundtrack.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/weapon.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/weapon.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/spacecraftClass.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/spacecraftClass.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/spacecraft.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/spacecraft.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/title.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/title.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/material.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/material.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/conflict.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/conflict.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/animal.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/animal.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/element.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/element.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/medicalCondition.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/medicalCondition.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/technology.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/technology.wsdl"
			],
			[
					'-wsdlLocation', 'classpath:v1/wsdl/occupation.wsdl',
					'-p','com.cezarykluczynski.stapi.client.v1.soap',
					'-autoNameResolution', "./contract/src/main/resources/v1/wsdl/occupation.wsdl"
			]
	]
	generatedWsdlDir = file("$projectDir/build/generated/src/main/java")
	wsdlDir = file("$projectDir/src/main/resources")
}

sourceSets {
	main {
		resources {
			srcDirs = ['../contract/src/main/resources/']
		}
	}
}

jar.baseName = 'stapi-client'

task swaggerGenerate(type: Exec) {
	File file = project.buildscript.configurations.classpath.find {
		it.name.startsWith("swagger-codegen-cli-")
	}

	println 'Using swagger-codegen-cli: ' << file.absolutePath

	workingDir "../"

	commandLine "java", "-jar", "${file.absolutePath}", "generate",
			"-l", "java",
			"-i", "contract/src/main/resources/v1/swagger/stapi.yaml",
			"-c", "contract/src/main/resources/v1/swagger/config.json",
			"-o", "./client/build/generated"
}

compileJava {
	dependsOn(wsdl2java, swaggerGenerate)
	source += "build/generated/src/main/java/"
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment {
				MavenDeployment deployment -> signing.signPom(deployment)
			}

			repository(url: "http://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: project.findProperty("ossrhUsername") ?: "", password: project.findProperty("ossrhPassword") ?: "")
			}

			snapshotRepository(url: "http://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: project.findProperty("ossrhUsername") ?: "", password: project.findProperty("ossrhPassword") ?: "")
			}

			pom.project {
				name 'STAPI Client'
				description 'Official client library for STAPI, a Star Trek API'
				version '0.0.14-SNAPSHOT'
				packaging 'jar'
				artifactId 'stapi-client'
				groupId 'com.cezarykluczynski.stapi'
				url 'http://stapi.co/'

				scm {
					connection 'https://github.com/cezarykluczynski/stapi.git'
					developerConnection 'git@github.com:cezarykluczynski/stapi.git'
					url 'https://github.com/cezarykluczynski/stapi'
				}

				licenses {
					license {
						name 'MIT'
						url 'https://opensource.org/licenses/MIT'
					}
				}

				developers {
					developer {
						id 'cezary.kluczynski'
						name 'Cezary Kluczyński'
						email 'cezary.kluczynski@gmail.com'
					}
				}
			}

			pom.withXml {
				Node pomNode = asNode()
				Node dependencies = ((NodeList) pomNode.get("dependencies")).first()
				List<Node> children = dependencies.children()
				for (int i = children.size() - 1; i >= 0; i--) {
					Node childNode = (Node) children.get(i)
					List<Node> dependencyList = childNode.children()
					boolean doDelete = true
					for (int j = 0; j < dependencyList.size(); j++) {
						Node subChild = (Node) dependencyList.get(j)
						String subChildName = (String) subChild.name()
						if (subChildName.endsWith('artifactId')) {
							String value = (String) subChild.value()
							if (value.contains('okhttp') && !value.contains('logging-interceptor') || value.contains('gson')) {
								doDelete = false
							}
						}
					}

					if (doDelete) {
						dependencies.remove(childNode)
					}
				}
			}
		}
	}
}
// TODO: uncomment and make it configurable to sign client
//signing {
//	sign configurations.archives
//}
