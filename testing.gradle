task codeCoverageReport(type: JacocoReport) {
	executionData fileTree(project.rootDir.absolutePath).include("**/jacoco/*.exec")

	subprojects.each {
		sourceSets it.sourceSets.main

		afterEvaluate {
			classDirectories = files(classDirectories.files.collect {
				fileTree(dir: it, exclude: ['**/form.zip'])
			})
		}
	}

	reports {
		xml.enabled true
		html.enabled true
		html.destination "${buildDir}/reports/jacoco"
		csv.enabled false
	}
}

codeCoverageReport.dependsOn {
	subprojects.test
}

subprojects {
	test {
		jacoco {
			append = false
			destinationFile = file("$buildDir/jacoco/test.exec")
			classDumpDir = file("$buildDir/jacoco/classpathdumps")
		}

		testLogging {
			events "failed", "standardOut", "standardError"
		}

		testLogging.showStandardStreams = true

		minHeapSize = "64m"
		maxHeapSize = "256m"

		finalizedBy codeCoverageReport
	}

	jacoco {
		toolVersion = "0.8.8"
		reportsDir = file("$buildDir/reports/jacoco")
	}
}
